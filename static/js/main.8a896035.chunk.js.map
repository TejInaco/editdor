{"version":3,"sources":["assets/editdor.png","assets/WoT.png","external/shared.js","context/ediTDorContext.js","util.js","components/Dialogs/DialogTemplate.jsx","external/TdPlayground.js","components/Dialogs/AddFormDialog.jsx","components/Dialogs/AddLinkTdDialog.jsx","components/InfoIcon/InfoIcon.jsx","components/InfoIcon/InfoTooltips.jsx","components/TDViewer/Form.jsx","components/TDViewer/Link.jsx","components/Dialogs/DialogComponents.jsx","components/Dialogs/AddActionDialog.jsx","components/Dialogs/AddEventDialog.jsx","components/Dialogs/AddPropertyDialog.jsx","components/TDViewer/Action.jsx","components/TDViewer/Event.jsx","components/TDViewer/Property.jsx","components/TDViewer/SearchBar.jsx","components/TDViewer/InteractionSection.jsx","components/TDViewer/RenderedObject.jsx","components/TDViewer/TDViewer.jsx","components/Editor/Editor.jsx","components/App/AppHeader/Button.jsx","components/Dialogs/ShareDialog.jsx","components/Dialogs/ConvertTmDialog.jsx","components/Dialogs/CreateTdDialog.jsx","components/App/AppHeader/AppHeader.jsx","components/App/AppFooter.jsx","context/editorReducers.js","context/GlobalState.js","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","jsonValidator","require","bcp47pattern","checkPropUniqueness","tdString","results","parse","td","JSON","tdInteractions","hasOwnProperty","concat","Object","keys","properties","push","actions","events","error","errorString","toString","startQuote","indexOf","restString","slice","endQuote","interactionName","replace","checkSecurity","securityDefinitionsObject","securityDefinitions","securityContains","security","tdProperties","i","length","curPropertyName","curForms","forms","j","curForm","tdActions","curActionName","tdEvents","curEventName","parent","child","every","elem","checkMultiLangConsistency","multiLang","isTdTitlesDescriptions","rootTitlesObject","titles","rootTitles","isStringObjectKeyValue","title","rootDescriptionsObject","descriptions","rootDescriptions","description","curProperty","titlesKeys","descriptionsKeys","curAction","curEvent","myArray","stringify","arrayArraysItemsEqual","flatArray","index","arrayElement","e","stringElement","isBCP47","element","test","checkBCP47array","elementName","searchedString","searchedObject","objKeys","checkLinksRelTypeCount","typeCount","links","rel","checkUriSecurity","securityDefinitionsNames","securityUriVariables","curSecurityDefinition","scheme","in","name","uriVariablesResult","uriVariablesDistinctResult","rootUriVariables","uriVariables","curHref","href","some","v","includes","curPropertyUriVariables","filter","value","curActionUriVariables","curEventUriVariables","checkTmOptionalPointer","forEach","substring","object","defaultValue","pathTarget","split","p","reduce","o","undefined","React","createContext","offlineTD","theme","isModified","isThingModel","fileHandle","showConvertBtn","linkedTd","validationMessage","updateOfflineTD","updateIsModified","updateIsThingModel","setFileHandle","handle","removeForm","form","addForm","removeLink","link","addActionForm","params","addEventForm","removeOneOfAKindReducer","kind","oneOfAKind","updateShowConvertBtn","addLinkedTd","updateLinkedTd","updateValidationMessage","buildAttributeListObject","firstAttribute","dontRender","attributeListObject","entries","key","separateForms","newForms","Array","isArray","op","temp","hasForms","itemToCheck","hasLinks","checkIfFormIsInElement","deepCompare","y","changeBetweenTd","context","createWritable","writable","write","close","console","message","getFile","file","text","offlineTd","document","getElementById","getFileHandle","window","showOpenFilePicker","types","accept","then","handles","chooseFileSystemEntries","getFileHTML5","Promise","resolve","reject","fileInput","onchange","files","Error","click","_readFileHTML5","reader","FileReader","addEventListener","event","srcElement","result","readAsText","getDirectedValue","source","atContext","direction","lang","TABLE","ar","fa","ps","ur","hy","as","bn","zb","ab","be","bg","kk","mk","ru","uk","hi","mr","ne","ko","ma","am","ti","ka","el","gu","pa","he","iw","yi","ja","km","kn","lo","af","ay","bs","ca","ch","cs","cy","da","de","en","eo","es","et","eu","fi","fj","fo","fr","fy","ga","gl","gn","gv","hr","ht","hu","id","is","it","kl","la","lb","ln","lt","lv","mg","mh","mo","ms","mt","na","nb","nd","nl","nn","no","nr","ny","om","pl","pt","qu","rm","rn","ro","rw","sg","sk","sl","sm","so","sq","ss","st","sv","sw","tl","tn","to","tr","ts","ve","vi","xh","zu","ds","gs","hs","me","ni","ns","te","tk","tm","tp","tv","ml","my","nq","or","si","ta","dv","th","dz","getDirectionSymbol","dir","getDirection","toLowerCase","DialogTemplate","props","children","cancelText","onCancel","submitText","onSubmit","hasSubmit","keysDown","onkeydown","onkeyup","className","onClick","jsonld","Ajv","apply","coreAssertions","tdSchema","fullTdSchema","tdValidator","logFunc","checkDefaults","checkJsonLd","res","rej","tdJson","report","json","schema","defaults","additional","details","enumConst","propItems","propUniqueness","multiLangConsistency","linksRelTypeCount","readWriteOnly","uriVariableSecurity","detailComments","validationErrors","err","ajv","strict","addSchema","validate","errorsText","filterErrorMessages","errors","curInput","input","curOutput","output","checkEnumConst","type","checkPropItems","readOnly","writeOnly","formElIndex","formEl","observable","checkReadWriteOnly","evalAssertion","checkSecPropUniqueness","prop","tdStr","securitySchemeName","out","resultobj","Status","ID","Comment","ce","dataPath","toRDF","format","nquads","REF","DATA_SCHEMA","jsonSchema","lookupTable","Map","filteredLookupTable","findPathsInSchema","size","pathDepth","match","pathDepthMap","get","set","createSchemaLookupTable","path","Set","getRefObjectOfSchema","add","additionalProperties","putKeysToPath","items","item","pathKeys","union","k","ref","splitRef","log","AddFormDialog","forwardRef","useContext","ediTDorContext","useState","display","setDisplay","toUpperCase","interaction","useEffect","useImperativeHandle","openModal","open","checkIfFormExists","x","checkIfFormIsInItem","formSelection","operationsSelections","htmlFor","placeholder","onChange","clearErrorMessage","ReactDOM","createPortal","operations","map","checked","trim","showErrorMessage","propName","actionName","eventName","_","addFormToInteraction","msg","textContent","classList","remove","formCheckbox","tdJSON","oldtdJSON","AddLinkTdDialog","linkingMethod","setlinkingMethod","currentLinkedTd","setCurrentLinkedTd","checkIfLinkExists","checkIfLinkIsInItem","hasNativeFS","useCallback","linkingMethodChange","linkingOption","read","openFile","alert","RelationType","currentRelation","list","disabled","style","marginLeft","clearHrefErrorMessage","isValidUrl","url","URL","protocol","httpRequest","XMLHttpRequest","send","getResponseHeader","thingDescription","response","parsedTd","ex","showHrefErrorMessage","addLinksToTd","InfoIconWrapper","tooltip","html","InfoIcon","color","TooltipContent","this","getFormsTooltipContent","getLinksTooltipContent","tooltipMapper","Form","formChooser","ObserveForm","UnobserveForm","ObserveAllForm","UnobserveAllForm","ReadForm","ReadMultipleForm","formIndex","ReadAllForm","WriteForm","WriteMultipleForm","WriteAllForm","InvokeForm","interactionType","UndefinedForm","Link","infoLink","deleteLink","DialogTextField","label","autoFocus","DialogTextArea","rows","DialogDropdown","options","DialogCheckbox","AddActionDialog","addActionToTd","action","onAddAction","AddEventDialog","addEventToTd","onAddEvent","NO_TYPE","AddPropertyDialog","addPropertyToTd","property","dataType","onAddProperty","alreadyRenderedKeys","Action","addFormDialog","useRef","constructor","attributes","current","Event","Property","SearchBar","autoComplete","onKeyUp","ariaLabel","SORT_ASC","oldTd","InteractionSection","setFilter","sortOrder","setSortOrder","addInteractionDialog","buildChildren","filteredInteractions","filtered","applyFilter","createPropertyDialog","target","ordered","toSort","sort","a","b","nameA","nameB","localeCompare","sortedObject","reverse","sortKeysInObject","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","RenderedObject","showChildren","setShowChildren","handleClick","val","indicator","i1","k1","v1","m1","jsonValidation","jsonSchemaValidation","jsonValidationError","jsonSchemaValidationError","TDViewer","metaData","addLinkDialog","graphHeight","setGraphHeight","representationFormat","setRepresentationFormat","isLinksOpen","setIsLinksOpen","representationFormatChange","getElementsByTagName","evt","posx","posy","graphTd","joint","Graph","paperTd","Paper","model","gridSize","drawGrid","restrictTranslate","currentTdModel","standard","Rectangle","position","resize","attr","body","attrs","addCell","targetTdModel","removeButton","Remove","useModelGeometry","elementView","buttonView","toolsView","ToolsView","tools","findView","addTools","infoButton","Button","markup","tagName","selector","r","cursor","rotate","line","labels","addTo","top","mapping","tmSchema","editorOptions","selectOnLineNumbers","automaticLayout","lineDecorationsWidth","JSONEditorComponent","schemas","proxy","setProxy","editorInstance","tabs","setTabs","editorWillMount","monaco","languages","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","warn","Proxy","jsonSchemaObjects","fileMatch","uri","removeSchema","splice","fetchSchema","fetch","editorText","state","atType","contextKey","find","getTabs","changeLinkedTd","language","editorDidMount","editor","onDidChangeModelDecorations","getModel","getModeId","ShareDialog","copyLinkToClipboard","createPermalink","focusPermalinkField","urlField","createPermalinkField","parsedTD","location","origin","pathname","encodeURIComponent","hasFocus","navigator","clipboard","writeText","setTimeout","select","ConvertTmDialog","htmlInputs","setHtmlInputs","createHtmlInputs","convertTmToTd","regex","startIindices","exec","endIndices","placeholders","holder","htmlProperties","htmlActions","htmlEvents","createAffordanceHtml","affName","affContainer","aff","required","requiredFields","defaultChecked","parsed","field","startsWith","ignored","divider","mappingObject","join","newProperties","obj","newActions","newEvents","permalink","CreateTdDialog","setType","content","buildForm","createNewTD","changeType","getType","formField","base","tdDescription","tdSecurity","thing","AppHeader","verifyDiscard","confirm","readFile","writeFile","contents","createWriter","writer","saveAsHTML5","filename","tdTitle","aDownload","File","createObjectURL","setAttribute","saveFileAs","getNewFileHandle","saveFile","opts","showSaveFilePicker","accepts","extensions","mimeTypes","search","searchParams","shortcutHandler","platform","metaKey","ctrlKey","preventDefault","stopPropagation","openCreateTdDialog","onbeforeunload","returnValue","removeEventListener","convertTmDialog","shareDialog","createTdDialog","src","wot","alt","logo","AppFooter","bytes","megaBytes","propertiesCount","actionsCount","eventsCount","TextEncoder","encode","toFixed","process","UPDATE_OFFLINE_TD","UPDATE_IS_MODFIED","UPDATE_IS_THINGMODEL","SET_FILE_HANDLE","REMOVE_FORM_FROM_TD","REMOVE_LINK_FROM_TD","ADD_PROPERTYFORM_TO_TD","ADD_ACTIONFORM_TO_TD","ADD_EVENTFORM_TO_TD","REMOVE_ONE_OF_A_KIND_FROM_TD","UPDATE_SHOW_CONVERT_BTN","ADD_LINKED_TD","UPDATE_LINKED_TD","UPDATE_VALIDATION_MESSAGE","editdorReducer","updateOfflineTDReducer","newState","updateFileHandleReducer","removeFormReducer","removeLinkReducer","oneOfAKindName","addPropertyFormReducer","addActionFormReducer","addEventFormReducer","resultingLinkedTd","assign","GlobalState","useReducer","editdorState","dispatch","Provider","dragElement","md","first","second","onMouseMove","delta","clientX","clientY","Math","min","max","firstWidth","secondWidth","left","offsetLeft","onmousedown","offsetTop","offsetWidth","onmousemove","onmouseup","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","patch","render","StrictMode","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":";mIAAAA,EAAOC,QAAU,IAA0B,mC,sBCA3CD,EAAOC,QAAU,IAA0B,+B,ycCQrCC,EAAgBC,EAAQ,KAGxBC,EAAe,qcAoCrB,SAASC,EAAoBC,GAEzB,IAAMC,EAAU,GAGhB,IACIL,EAAcM,MAAMF,GAAU,GAE9B,IAAMG,EAAKC,KAAKF,MAAMF,GAIlBK,EAAiB,GAsDrB,OAnDIF,EAAGG,eAAe,eAClBD,EAAiBA,EAAeE,OAAOC,OAAOC,KAAKN,EAAGO,aAEtDT,EAAQU,KAAK,CACT,GAAM,2BACN,OAAU,OACV,QAAW,MAIfV,EAAQU,KAAK,CACT,GAAM,2BACN,OAAU,WACV,QAAW,kBAKfR,EAAGG,eAAe,YAClBD,EAAiBA,EAAeE,OAAOC,OAAOC,KAAKN,EAAGS,UACtDX,EAAQU,KAAK,CACT,GAAM,wBACN,OAAU,OACV,QAAW,MAIfV,EAAQU,KAAK,CACT,GAAM,wBACN,OAAU,WACV,QAAW,eAKfR,EAAGG,eAAe,WAClBD,EAAiBA,EAAeE,OAAOC,OAAOC,KAAKN,EAAGU,SACtDZ,EAAQU,KAAK,CACT,GAAM,uBACN,OAAU,OACV,QAAW,MAIfV,EAAQU,KAAK,CACT,GAAM,uBACN,OAAU,WACV,QAAW,cAIZV,CAqGX,CAnGE,MAAOa,GAKL,IAAMC,EAAcD,EAAME,WAEpBC,EAAaF,EAAYG,QAAQ,KAEjCC,EAAaJ,EAAYK,MAAMH,EAAa,GAE5CI,EAAWF,EAAWD,QAAQ,KAE9BI,EAAkBH,EAAWC,MAAM,EAAGC,GAGtClB,EAAKC,KAAKF,MAAMF,GAEtB,GAAIG,EAAGG,eAAe,cACGH,EAAGO,WACPJ,eAAegB,IAE5BrB,EAAQU,KAAK,CACT,GAAM,2BACN,OAAU,OACV,QAAW,6BAGfX,EAAWA,EAASuB,QAAQD,EAAiB,kBAI7CrB,EAAQU,KAAK,CACT,GAAM,2BACN,OAAU,OACV,QAAW,UAInBV,EAAQU,KAAK,CACT,GAAM,2BACN,OAAU,WACV,QAAW,kBAInB,GAAIR,EAAGG,eAAe,WACAH,EAAGS,QACPN,eAAegB,IAEzBrB,EAAQU,KAAK,CACT,GAAM,wBACN,OAAU,OACV,QAAW,2BAGfX,EAAWA,EAASuB,QAAQD,EAAiB,kBAE7CrB,EAAQU,KAAK,CACT,GAAM,wBACN,OAAU,OACV,QAAW,UAInBV,EAAQU,KAAK,CACT,GAAM,wBACN,OAAU,WACV,QAAW,eAInB,GAAIR,EAAGG,eAAe,UACDH,EAAGU,OACPP,eAAegB,IAExBrB,EAAQU,KAAK,CACT,GAAM,uBACN,OAAU,OACV,QAAW,0BAGfX,EAAWA,EAASuB,QAAQD,EAAiB,kBAE7CrB,EAAQU,KAAK,CACT,GAAM,uBACN,OAAU,OACV,QAAW,UAInBV,EAAQU,KAAK,CACT,GAAM,uBACN,OAAU,WACV,QAAW,cAInB,OAAOV,CACX,CACJ,CASA,SAASuB,EAAcrB,GAEnB,IAAMF,EAAU,GAChB,GAAIE,EAAGG,eAAe,uBAAwB,CAC1C,IAAMmB,EAA4BtB,EAAGuB,oBAC/BA,EAAsBlB,OAAOC,KAAKgB,GAKxC,IAAIE,EAAiBD,EAFAvB,EAAGyB,UAUpB,OALA3B,EAAQU,KAAK,CACT,GAAM,0BACN,OAAU,OACV,QAAW,qDAERV,EAGX,GAAIE,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAMrC,IALA,IAAME,EAAkBH,EAAaC,GAI/BG,EAHc9B,EAAGO,WAAWsB,GAGLE,MACpBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACzB,GAAIC,EAAQ9B,eAAe,YAEvB,IAAIqB,EAAiBD,EADDU,EAAQR,UASxB,OALA3B,EAAQU,KAAK,CACT,GAAM,0BACN,OAAU,OACV,QAAW,0DAERV,CAGnB,CAIR,GAAIE,EAAGG,eAAe,WAGlB,IADA,IAAI+B,EAAY7B,OAAOC,KAAKN,EAAGS,SACtBkB,EAAI,EAAGA,EAAIO,EAAUN,OAAQD,IAMlC,IALA,IAAMQ,EAAgBD,EAAUP,GAI1BG,EAHY9B,EAAGS,QAAQ0B,GAGFJ,MAClBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACzB,GAAIC,EAAQ9B,eAAe,YAEvB,IAAIqB,EAAiBD,EADDU,EAAQR,UASxB,OALA3B,EAAQU,KAAK,CACT,GAAM,0BACN,OAAU,OACV,QAAW,yDAERV,CAGnB,CAKR,GAAIE,EAAGG,eAAe,UAGlB,IADA,IAAIiC,EAAW/B,OAAOC,KAAKN,EAAGU,QACrBiB,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAMjC,IALA,IAAMU,EAAeD,EAAST,GAIxBG,EAHW9B,EAAGU,OAAO2B,GAGDN,MACjBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACzB,GAAIC,EAAQ9B,eAAe,YAEvB,IAAIqB,EAAiBD,EADDU,EAAQR,UASxB,OALA3B,EAAQU,KAAK,CACT,GAAM,0BACN,OAAU,OACV,QAAW,wDAERV,CAGnB,CAUR,OAJAA,EAAQU,KAAK,CACT,GAAM,0BACN,OAAU,SAEPV,CAEX,CACA,OAAOA,CACX,CASA,SAAS0B,EAAiBc,EAAQC,GAK9B,MAHqB,kBAAVA,IACPA,EAAQ,CAACA,IAENA,EAAMC,OAAM,SAAAC,GAAI,OAAIH,EAAOvB,QAAQ0B,IAAS,CAAC,GACxD,CAcA,SAASC,EAA0B1C,GAE/B,IAAMF,EAAU,GACV6C,EAAY,GACZC,EAAyB,GAG/B,GAAI5C,EAAGG,eAAe,UAAW,CAC7B,IAAM0C,EAAmB7C,EAAG8C,OACtBC,EAAa1C,OAAOC,KAAKuC,GAC/BF,EAAUnC,KAAKuC,GAGfH,EAAuBpC,KAAK,eAAE,aAAewC,EAAuBhD,EAAGiD,MAAOJ,IAClF,CAEA,GAAI7C,EAAGG,eAAe,gBAAiB,CACnC,IAAM+C,EAAyBlD,EAAGmD,aAC5BC,EAAmB/C,OAAOC,KAAK4C,GACrCP,EAAUnC,KAAK4C,GAEXpD,EAAGG,eAAe,gBAElByC,EAAuBpC,KAAK,eAAE,mBAAqBwC,EAAuBhD,EAAGqD,YAAaH,IAElG,CAGA,GAAIlD,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAC1C,IAAME,EAAkBH,EAAaC,GAC/B2B,EAActD,EAAGO,WAAWsB,GAElC,GAAIyB,EAAYnD,eAAe,UAAW,CACtC,IAAMoD,EAAalD,OAAOC,KAAKgD,EAAYR,QAC3CH,EAAUnC,KAAK+C,GAEXD,EAAYnD,eAAe,UAC3ByC,EAAuBpC,KAAK,eACvB,YAAYqB,EAAkB,SAAWmB,EAAuBM,EAAYL,MAAOK,EAAYR,SAG5G,CAEA,GAAIQ,EAAYnD,eAAe,gBAAiB,CAC5C,IAAMqD,EAAmBnD,OAAOC,KAAKgD,EAAYH,cACjDR,EAAUnC,KAAKgD,GAEXF,EAAYnD,eAAe,gBAC3ByC,EAAuBpC,KAAK,eAC3B,YAAcqB,EAAkB,QAAUmB,EAAuBM,EAAYD,YAAYC,EAAYH,eAG9G,CACJ,CAGJ,GAAInD,EAAGG,eAAe,WAGlB,IADA,IAAI+B,EAAY7B,OAAOC,KAAKN,EAAGS,SACtBkB,EAAI,EAAGA,EAAIO,EAAUN,OAAQD,IAAK,CACvC,IAAMQ,EAAgBD,EAAUP,GAC1B8B,EAAYzD,EAAGS,QAAQ0B,GAE7B,GAAIsB,EAAUtD,eAAe,UAAW,CACpC,IAAMoD,EAAalD,OAAOC,KAAKmD,EAAUX,QACzCH,EAAUnC,KAAK+C,GAEXE,EAAUtD,eAAe,UACzByC,EAAuBpC,KAAK,eACvB,UAAY2B,EAAgB,SAAWa,EAAuBS,EAAUR,MAAOQ,EAAUX,SAGtG,CAEA,GAAIW,EAAUtD,eAAe,gBAAiB,CAC1C,IAAMqD,EAAmBnD,OAAOC,KAAKmD,EAAUN,cAC/CR,EAAUnC,KAAKgD,GAEXC,EAAUtD,eAAe,gBACzByC,EAAuBpC,KAAK,eACtB,UAAY2B,EAAgB,QAAUa,EAAuBS,EAAUJ,YAAaI,EAAUN,eAG5G,CAEJ,CAGJ,GAAInD,EAAGG,eAAe,UAGlB,IADA,IAAIiC,EAAW/B,OAAOC,KAAKN,EAAGU,QACrBiB,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAAK,CACtC,IAAMU,EAAeD,EAAST,GACxB+B,EAAW1D,EAAGU,OAAO2B,GAE3B,GAAIqB,EAASvD,eAAe,UAAW,CACnC,IAAMoD,EAAalD,OAAOC,KAAKoD,EAASZ,QACxCH,EAAUnC,KAAK+C,GAEXG,EAASvD,eAAe,UACxByC,EAAuBpC,KAAK,eACvB,SAAW6B,EAAe,SAAWW,EAAuBU,EAAST,MAAOS,EAASZ,SAGlG,CAEA,GAAIY,EAASvD,eAAe,gBAAiB,CACzC,IAAMqD,EAAmBnD,OAAOC,KAAKoD,EAASP,cAC9CR,EAAUnC,KAAKgD,GAEXE,EAASvD,eAAe,gBACxByC,EAAuBpC,KAAK,eACvB,SAAW6B,EAAe,QAAUW,EAAuBU,EAASL,YAAaK,EAASP,eAGvG,CAEJ,EAyFR,SAA+BQ,GAC3B,GAAsB,IAAnBA,EAAQ/B,OAAc,OAAO,EAEhC,IAAK,IAAID,EAAIgC,EAAQ/B,OAAQD,KACzBgC,EAAQhC,GAAK1B,KAAK2D,UAAUD,EAAQhC,IAGxC,IAAK,IAAIA,EAAIgC,EAAQ/B,OAAQD,KAAM,CAC/B,GAAU,IAANA,EACA,OAAO,EAEX,GAAIgC,EAAQhC,KAAOgC,EAAQhC,EAAI,GAC3B,OAAO,CAEf,CACJ,CAtGOkC,CAAsBlB,GAMrB7C,EAAQU,KAAK,CACT,GAAM,gCACN,OAAU,OACV,QAAW,sDARfV,EAAQU,KAAK,CACT,GAAM,gCACN,OAAU,SAalB,IAHA,IAAMsD,EAAY,GAGTC,EAAQ,EAAGA,EAAQpB,EAAUf,OAAQmC,IAAS,CACnD,IAAIC,EAAerB,EAAUoB,GAC7BC,EAAa/D,KAAKF,MAAMiE,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAapC,OAAQqC,IAAK,CAC1C,IAAMC,EAAgBF,EAAaC,GACnCH,EAAUtD,KAAK0D,EACnB,CACJ,CACA,IAAMC,EAsFV,SAAyBR,GAGrB,IAAK,IAAII,EAAQ,EAAGA,EAAQJ,EAAQ/B,OAAQmC,IAAS,CACjD,IAAMK,EAAUT,EAAQI,GACxB,IAAIpE,EAAa0E,KAAKD,GAGlB,OAAOA,CAEf,CAGA,MAAO,IACX,CApGoBE,CAAgBR,GAsBhC,GArBe,OAAZK,EACCrE,EAAQU,KAAK,CACT,GAAM,gCACN,OAAU,SAGdV,EAAQU,KAAK,CACT,GAAM,gCACN,OAAU,OACV,QAAU2D,EAAQ,wBAYW,IAAlCvB,EAAuBhB,OAMtB,OALA9B,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,WACV,QAAW,mCAERV,EAIX,IAAK,IAAIiE,EAAQ,EAAGA,EAAQnB,EAAuBhB,OAAQmC,IAAS,CAChE,IAAMK,EAAUxB,EAAuBmB,GACjCQ,EAAclE,OAAOC,KAAK8D,GAEhC,IAAGA,EAAQG,GAQP,OALAzE,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,OACV,QAAW+D,EAAY,sDAEpBzE,CAEf,CAQA,OANAA,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,SAIPV,CACX,CAsDA,SAASkD,EAAuBwB,EAAgBC,GAC5C,IAAMC,EAAUrE,OAAOC,KAAKmE,GAC5B,GAAsB,IAAnBC,EAAQ9C,OAAc,OAAO,EAChC,IAAK,IAAImC,EAAQ,EAAGA,EAAQW,EAAQ9C,OAAQmC,IAAS,CAEjD,GAAIU,EADYC,EAAQX,MACQS,EAC5B,OAAO,CAIf,CACA,OAAO,CACX,CAgCA,SAASG,EAAuB3E,GAE5B,IAAMF,EAAU,GAEhB,GAAIE,EAAGG,eAAe,SAAS,CAG3B,IADA,IAAIyE,EAAY,EACPjD,EAAI,EAAGA,EAAI3B,EAAG6E,MAAMjD,OAAQD,IAAK,CACtC,IAAMyC,EAAUpE,EAAG6E,MAAMlD,GACtByC,EAAQjE,eAAe,QACF,SAAhBiE,EAAQU,KACRF,GAGZ,CACkB,IAAdA,EACA9E,EAAQU,KAAK,CACT,GAAM,sBACN,OAAU,WACV,QAAW,4BAEM,IAAdoE,EACP9E,EAAQU,KAAK,CACT,GAAM,sBACN,OAAU,OACV,QAAW,KAGfV,EAAQU,KAAK,CACT,GAAM,sBACN,OAAU,OACV,QAAW,oCAGvB,MACIV,EAAQU,KAAK,CACT,GAAM,sBACN,OAAU,WACV,QAAW,6BAGnB,OAAOV,CACX,CAYA,SAASiF,EAAiB/E,GAEtB,IAAMF,EAAU,GAChB,GAAIE,EAAGG,eAAe,uBAAwB,CAAC,IAAD,aAK1C,IAJA,IAAMmB,EAA4BtB,EAAGuB,oBAC/ByD,EAA2B3E,OAAOC,KAAKgB,GAEvC2D,EAAuB,GACpBlB,EAAQ,EAAGA,EAAQiB,EAAyBpD,OAAQmC,IAAS,CAClE,IAAMmB,EAAwB5D,EAA0B0D,EAAyBjB,IAC5C,WAAjCmB,EAAsBC,QAClBD,EAAsB/E,eAAe,OACJ,QAA7B+E,EAAsBE,IAClBF,EAAsB/E,eAAe,SACrC8E,EAAqBzE,KAAK0E,EAAsBG,KAKpE,CAEA,GAAoC,IAAhCJ,EAAqBrD,OAWrB,OAVA9B,EAAQU,KAAK,CACT,GAAM,8BACN,OAAU,WACV,QAAW,0CAEfV,EAAQU,KAAK,CACT,GAAM,qCACN,OAAU,WACV,QAAW,0CAET,CAAN,EAAOV,GAEP,IAAIwF,EAAqB,WACrBC,EAA6B,WAC7BC,EAAmB,GAIvB,GAHIxF,EAAGG,eAAe,kBAClBqF,EAAmBnF,OAAOC,KAAKN,EAAGyF,eAElCzF,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAK1C,IAJA,IAAME,EAAkBH,EAAaC,GAC/B2B,EAActD,EAAGO,WAAWsB,GAE5BC,EAAWwB,EAAYvB,MACpBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACrBC,EAAQ9B,eAAe,SAAS,WAChC,IAAMuF,EAAUzD,EAAQ0D,KAEpBV,EAAqBW,MAAK,SAAAC,GAAC,OAAIH,EAAQI,SAASD,EAAE,KAExB,SAAvBP,IACCA,EAAqB,OAE5B,CAR+B,EAUxC,CAEA,GAAIhC,EAAYnD,eAAe,gBAAgB,CAC3C,IAAI4F,EAA0B1F,OAAOC,KAAKgD,EAAYmC,cAEtD,GADAM,EAAwBvF,KAAI,MAA5BuF,EAAuB,YAASP,IAC5BO,EAAwBnE,OAAO,EAETmE,EAAwBC,QAAO,SAAAC,GAAK,OAAIhB,EAAqBa,SAASG,EAAM,IAEjFrE,OAAO,EACpB2D,EAA6B,OAEM,SAA/BA,IACAA,EAA6B,OAI7C,CACJ,CAGJ,GAAIvF,EAAGG,eAAe,WAGlB,IADA,IAAI+B,EAAY7B,OAAOC,KAAKN,EAAGS,SACtBkB,EAAI,EAAGA,EAAIO,EAAUN,OAAQD,IAAK,CAKvC,IAJA,IAAMQ,EAAgBD,EAAUP,GAC1B8B,EAAYzD,EAAGS,QAAQ0B,GAEvBL,EAAW2B,EAAU1B,MAClBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACrBC,EAAQ9B,eAAe,SAAS,WAChC,IAAMuF,EAAUzD,EAAQ0D,KAEpBV,EAAqBW,MAAK,SAAAC,GAAC,OAAIH,EAAQI,SAASD,EAAE,KAExB,SAAvBP,IACCA,EAAqB,OAE5B,CAR+B,EAUxC,CAEA,GAAI7B,EAAUtD,eAAe,gBAAgB,CACzC,IAAI+F,EAAwB7F,OAAOC,KAAKmD,EAAUgC,cAElD,GADAS,EAAsB1F,KAAI,MAA1B0F,EAAqB,YAASV,IAC1BU,EAAsBtE,OAAO,EAEPsE,EAAsBF,QAAO,SAAAC,GAAK,OAAIhB,EAAqBa,SAASG,EAAM,IAE/ErE,OAAO,EACpB2D,EAA6B,OAEM,SAA/BA,IACAA,EAA6B,OAI7C,CACJ,CAGJ,GAAIvF,EAAGG,eAAe,UAGlB,IADA,IAAIiC,EAAW/B,OAAOC,KAAKN,EAAGU,QACrBiB,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAAK,CAKtC,IAJA,IAAMU,EAAeD,EAAST,GACxB+B,EAAW1D,EAAGU,OAAO2B,GAErBP,EAAW4B,EAAS3B,MACjBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IAAK,CACtC,IAAMC,EAAUH,EAASE,GACrBC,EAAQ9B,eAAe,SAAS,WAChC,IAAMuF,EAAUzD,EAAQ0D,KAEpBV,EAAqBW,MAAK,SAAAC,GAAC,OAAIH,EAAQI,SAASD,EAAE,KAExB,SAAvBP,IACCA,EAAqB,OAE5B,CAR+B,EAUxC,CAEA,GAAI5B,EAASvD,eAAe,gBAAgB,CACxC,IAAIgG,EAAuB9F,OAAOC,KAAKoD,EAAS+B,cAEhD,GADAU,EAAqB3F,KAAI,MAAzB2F,EAAoB,YAASX,IACzBW,EAAqBvE,OAAO,EAENuE,EAAqBH,QAAO,SAAAC,GAAK,OAAIhB,EAAqBa,SAASG,EAAM,IAE9ErE,OAAO,EACpB2D,EAA6B,OAEM,SAA/BA,IACAA,EAA6B,OAI7C,CACJ,CAWJ,OARAzF,EAAQU,KAAK,CACT,GAAM,8BACN,OAAU8E,IAEdxF,EAAQU,KAAK,CACT,GAAM,uCACN,OAAU+E,IAER,CAAN,EAAOzF,EASX,CAjL0C,GAiL1C,iCAEJ,CACA,OAAOA,CACX,CASA,SAASsG,EAAuBpG,GAC5B,IAAMF,EAAU,GA6BhB,OA5BGE,EAAGG,eAAe,eACjBH,EAAG,eAAeqG,SAAQ,SAAAjC,GAGtBA,GADAA,EAAUA,EAAQkC,UAAU,IACVlF,QAAQ,IAAI,KAC9B,IAz3BSmF,EAAcC,EAy3BjBC,GAz3BGF,EAy3BsBvG,EAz3BRwG,EAy3BmB,WAARpC,EAv3BzCsC,MAAM,gBACNV,QAAO,SAAAW,GAAC,OAAIA,CAAC,IACbC,QAAO,SAACC,EAAGF,GAAC,OAAKE,EAAIA,EAAEF,GAAKH,CAAY,GAAED,IAs3BhB,aAAfE,QAA4CK,IAAfL,EAC7B3G,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,OACV,QAAW,kDAGfV,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,OACV,QAAW,IAGvB,IAEAV,EAAQU,KAAK,CACT,GAAM,yBACN,OAAU,WACV,QAAW,0BAIZV,CACV,C,8m6DCp6BciH,MAAMC,cAAc,CACjCC,UAAW,GACXC,MAAO,OACPC,YAAY,EACZC,kBAAcN,EACdzB,KAAM,GACNgC,WAAW,GACXC,gBAAgB,EAChBC,SAAS,CAAC,EACVC,kBAAmB,GACnBC,gBAAiB,SAAAzH,GAAO,EACxB0H,iBAAkB,SAAAP,GAAe,EACjCQ,mBAAoB,SAAAP,GAAiB,EACrCQ,cAAe,SAAAC,GAAW,EAC1BC,WAAY,SAAAC,GAAS,EACrBC,QAAS,SAAAD,GAAS,EAClBE,WAAY,SAAAC,GAAS,EACrBC,cAAe,SAAAC,GAAW,EAC1BC,aAAc,SAAAD,GAAW,EACzBE,wBAAyB,SAACC,EAAMC,GAAgB,EAChDC,qBAAsB,SAAAnB,GAAmB,EACzCoB,YAAa,SAAAnB,GAAa,EAC1BoB,eAAgB,SAAApB,GAAa,EAC7BqB,wBAAyB,SAAApB,GAAsB,I,4BCpCjD,06MAqBO,IAAMqB,EAA2B,SAACC,EAAgBvC,EAAQwC,GAG7D,IAFA,IAAIC,EAAmB,eAAQF,GAE/B,MAA2BzI,OAAO4I,QAAQ1C,GAAO,eAAE,CAA9C,0BAAO2C,EAAG,KAAEjD,EAAK,KACb8C,EAAWjD,SAASoD,KACrBF,EAAoBE,GAAOjD,EAEnC,CAEA,OAAO+C,CACX,EAUaG,EAAgB,SAACpH,GAC1B,QAAc+E,IAAV/E,IAAwBA,EACxB,MAAO,GAKX,IAFA,IAAMqH,EAAW,GAERzH,EAAI,EAAGA,EAAII,EAAMH,OAAQD,IAAK,CACnC,IAAMoG,EAAOhG,EAAMJ,GAEnB,GAAK0H,MAAMC,QAAQvB,EAAKwB,IAKxB,IAAK,IAAI5H,EAAI,EAAGA,EAAIoG,EAAKwB,GAAG3H,OAAQD,IAAK,CACrC,IAAM6H,EAAI,eAAQzB,GAClByB,EAAKD,GAAKxB,EAAKwB,GAAG5H,GAClByH,EAAS5I,KAAKgJ,EAClB,MARIJ,EAAS5I,KAAKuH,EAStB,CAEA,OAAOqB,CACX,EAYaK,EAAW,SAACC,GACrB,QAAOA,EAAY3H,KACvB,EAKa4H,EAAW,SAACD,GACrB,QAAOA,EAAY7E,KACvB,EA4CM+E,EAAyB,SAAC7B,EAAM3D,GAClC,GAA4B,kBAAhBA,EAAQmF,IAChB,GAAInF,EAAQmF,KAAOxB,EAAKwB,GACpB,OAAO,OAGX,GAAInF,EAAQmF,GAAGzD,SAASiC,EAAKwB,IAAK,CAC9B,IAAIM,GAAc,EAClB,IAAK,IAAMC,KAAK/B,EACF,OAAN+B,GACI1F,EAAQ0F,KAAO/B,EAAK+B,KACpBD,GAAc,GAI1B,GAAIA,EACA,OAAO,CACf,CAER,EAOaE,EAAe,uCAAG,WAAOC,EAASrE,GAAI,sFAER,SAAnCqE,EAAQzC,SAAS5B,GAAY,KAAY,8BAEjCqE,EAAQ7C,aAAc6C,EAAQ3C,WAAU,iCACvB2C,EAAQ3C,WAAW4C,iBAAiB,KAAD,EAA5C,OAARC,EAAQ,gBACFA,EAASC,MAAMH,EAAQ/C,WAAW,KAAD,mBACjCiD,EAASE,QAAQ,KAAD,qDAG1BC,QAAQ1J,MAAM,KAAE2J,SAAS,QAEU,OAAnCjD,EAAa2C,EAAQzC,SAAS5B,GAAM,EAAD,QACpB0B,EAAWkD,UAAU,KAAD,GACxB,OADTC,EAAI,YACCvK,KAAI,UAAauK,EAAKC,OAAM,oBAAjCzK,EAAE,KAAQD,MAAK,gBACjB2K,EAAYzK,KAAK2D,UAAU5D,EAAI,KAAM,GACzCgK,EAAQpC,cAAcP,GACtB2C,EAAQvC,gBAAgBiD,GACxBV,EAAQtC,kBAAiB,GACzBiD,SAASC,eAAe,YAAY3E,MAAQN,EAAK,4BAI5CtF,OAAOC,KAAK0J,EAAQzC,SAAS5B,IAAO/D,OAAO,CAAD,8BAEvCoI,EAAQ7C,aAAc6C,EAAQ3C,WAAU,kCACvB2C,EAAQ3C,WAAW4C,iBAAiB,KAAD,GAA5C,OAARC,EAAQ,iBACFA,EAASC,MAAMH,EAAQ/C,WAAW,KAAD,oBACjCiD,EAASE,QAAQ,KAAD,sDAG1BC,QAAQ1J,MAAM,KAAE2J,SAAS,QAE7BN,EAAQpC,mBAAcd,GAChB9G,EAAKgK,EAAQzC,SAAS5B,GACxB+E,EAAYzK,KAAK2D,UAAU5D,EAAI,KAAM,GACzCgK,EAAQvC,gBAAgBiD,GACxBV,EAAQtC,kBAAiB,GACzBiD,SAASC,eAAe,YAAY3E,MAAQN,EAAK,kEAGxD,gBAzC2B,wCA+CfkF,EAAgB,WASzB,MAAI,uBAAwBC,OACjBA,OAAOC,mBATL,CACTC,MAAO,CACH,CACI3H,YAAa,oBACb4H,OAAQ,CAAE,sBAAuB,CAAC,UAAW,cAKdC,MAAK,SAACC,GAAO,OAAKA,EAAQ,EAAE,IAEhEL,OAAOM,yBAClB,EAKaC,EAAY,uCAAG,uGACjB,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAYd,SAASC,eAAe,aAC1Ca,EAAUC,SAAW,SAACzH,GAClB,IAAMuG,EAAOiB,EAAUE,MAAM,GAC7B,OAAInB,EACOe,EAAQf,GAEZgB,EAAO,IAAII,MAAM,cAC5B,EACAH,EAAUI,OACd,KAAE,2CACL,kBAZwB,mCAcZC,EAAiB,SAACtB,GAC3B,OAAO,IAAIc,SAAQ,SAACC,GAChB,IAAMQ,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,WAAW,SAACC,GAChC,IAAMzB,EAAOyB,EAAMC,WAAWC,OAC9B,OAAOb,EAAQd,EACnB,IACAsB,EAAOM,WAAW7B,EACtB,GACJ,EAYa8B,EAAmB,SAACC,EAAQrD,EAAKsD,GAC1C,IAsJIC,EACAC,EArnL,GAAI,MACJoqB,SAAAC,GAAG,MAAa,QAARA,EAtIvB,SACA,QAqIkD,EAG9D,IAAK,CAAC,QAAS,eAAe/O,SAASoD,KAAS,+BAA+B7E,KAAK6E,GAClF,OAAO0L,EAAmBrI,EAAOrD,GAAKrI,WAAWiU,gBAAkBvI,EAAOrD,GAG5E,GAAI,+BAA+B7E,KAAK6E,GAAM,CAG5C,IACM2L,EAAMlI,EADOzD,EAAIpD,SAAS,KAAQoD,EAAIxC,MAAM,KAAK,GAAKwC,EAAI6L,eAEhE,OAAIF,EAAYD,EAAmBC,GAAOtI,EAAOrD,GAC1C0L,EAAmB,OAASrI,EAAOrD,EAC5C,CAgBA,GAXKG,MAAMC,QAAQkD,KACjBA,EAAY,CAACA,IAGfA,EAAUnG,SAAQ,SAAApC,GACC,kBAANA,IACLA,EAAE,gBAAewI,EAAYxI,EAAE,eAC/BA,EAAE,eAAcyI,EAAOzI,EAAE,cAEjC,IAEY,UAARiF,GAA2B,gBAARA,EAAuB,CAC5C,GAAIuD,EAAW,OAAOmI,EAAmBnI,GAAaF,EAAOrD,GAC7D,GAAIwD,EAAM,CACR,IACMmI,EAAMlI,EADOD,EAAK5G,SAAS,KAAQ4G,EAAKhG,MAAM,KAAK,GAAKgG,EAAKqI,eAEnE,OAAIF,EAAYD,EAAmBC,GAAOtI,EAAOrD,GAC1C0L,EAAmB,OAASrI,EAAOrD,EAC5C,CACF,CAEA,OAAO0L,EAAmBrI,EAAOrD,GAAKrI,WAAWiU,gBAAkBvI,EAAOrD,EAC9E,EClaa8L,EAAiB,SAACC,GAAW,IAAD,gBAC/BhS,EAAmB,QAAd,EAAGgS,EAAMhS,aAAK,QAAI,gBACvBI,EAA+B,QAApB,EAAG4R,EAAM5R,mBAAW,QAAI,wCACnC6R,EAAyB,QAAjB,EAAGD,EAAMC,gBAAQ,QAAI,qCAE7BC,EAA6B,QAAnB,EAAGF,EAAME,kBAAU,QAAI,SACjCC,EAAyB,QAAjB,EAAGH,EAAMG,gBAAQ,QAAK,WAAQ,EAEtCC,EAA6B,QAAnB,EAAGJ,EAAMI,kBAAU,QAAI,SACjCC,EAAyB,QAAjB,EAAGL,EAAMK,gBAAQ,QAAK,WAAQ,EACtCC,EAAyB,QAAhB,EAACN,EAAMM,iBAAS,SAC3BC,EAAW,CAAC,EAYhB,OAXA1K,OAAO2K,UAAY,SAAUxR,GACzBuR,EAASvR,EAAEiF,MAAO,EACdsM,EAAkB,SAAKA,EAAgB,OACvC7K,SAASC,eAAe,gBAAgBiB,OAEhD,EAEAf,OAAO4K,QAAU,SAAUzR,GACvBuR,EAASvR,EAAEiF,MAAO,CACtB,EAEQ,yBAAKyM,UAAU,kHACnB,yBAAKA,UAAU,uFACX,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,oCAAoC1S,IAEtD,wBAAI0S,UAAU,2BAA2BtS,GACzC,yBAAKsS,UAAU,qBACVT,GAEL,yBAAKS,UAAU,6BACX,4BAAQA,UAAU,6CAA6CC,QAAS,WAAQR,GAAY,GAAID,GAC/FI,GAAY,4BAAQhF,GAAG,eAAeoF,UAAU,6CAA6CC,QAAS,kBAAMN,GAAU,GAAGD,KAI1I,ECpDMQ,EAASnW,EAAQ,KACjBoW,EAAMpW,EAAQ,KAEdqW,GADarW,EAAQ,KACbA,EAAQ,MAGhBsW,GAFMtW,EAAQ,KAEGA,EAAQ,MACzBuW,EAAWvW,EAAQ,KACnBwW,EAAexW,EAAQ,KAGvBD,GAFWC,EAAQ,KAEHA,EAAQ,MAY9B,SAASyW,EAAYtW,EAAUuW,EAAQ,GACtC,IAAD,IADyCC,qBAAa,OAAO,MAAEC,mBAAW,OAAO,EAE7E,OAAO,IAAIhL,SAAQ,SAACiL,EAAKC,GAGG,kBAAb3W,GACP2W,EAAI,mDAGc1P,IAAlBuP,IACAA,GAAgB,QAEAvP,IAAhBwP,IACAA,GAAc,GAEK,oBAAZF,GACPI,EAAI,qCAKR,IAmCIC,EAnCEC,EAAS,CACXC,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVhB,OAAQ,KACRiB,WAAY,MAGVC,EAAU,CACZC,UAAW,KACXC,UAAW,KACXxV,SAAU,KACVyV,eAAgB,KAChBC,qBAAsB,KACtBC,kBAAmB,KACnBC,cAAe,KACfC,oBAAqB,MAGnBC,EAAiB,CACnBP,UAAW,sEACXC,UAAW,yFACXxV,SAAU,sEACVyV,eAAgB,0GAChBC,qBAAsB,4EACtBC,kBAAmB,oEACnBC,cAAe,+FACfC,oBAAqB,8HAGnBE,EAAkB,CACpBb,KAAM,KACNC,OAAQ,MAIZ,IACIH,EAASxW,KAAKF,MAAMF,GACpB6W,EAAOC,KAAO,QAQlB,CAPE,MAAOc,GACLf,EAAOC,KAAO,SACdP,EAAQ,6BACRoB,EAAiBb,KAAOc,EAAInN,QAC5B8L,EAAQqB,GAERlB,EAAI,CAACG,SAAQK,UAASQ,iBAAgBC,oBAC1C,CAEA,IAAIE,EAAM,IAAI5B,EAAI,CAAC6B,QAAQ,IAS3B,IANAD,EAAM3B,EAAM2B,IAGRE,UAAU3B,EAAU,MACVyB,EAAIG,SAAS,KAAMpB,GAEtB,CAKP,GAHAC,EAAOE,OAAS,SAGZP,EACAqB,EAAIE,UAAU1B,EAAc,UACVwB,EAAIG,SAAS,SAAUpB,GAErCC,EAAOG,SAAW,UAElBH,EAAOG,SAAW,UAClBT,EAAQ,+BACRA,EAAQ,KAAOsB,EAAII,WAAWC,EAAoBL,EAAIM,UACtDzB,EAAI,CAACG,SAAQK,UAASQ,iBAAgBC,uBA+DlD,SAAwBxX,GAEpB,GADA+W,EAAQC,UAAY,SAChBhX,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAC1C,IAAME,EAAkBH,EAAaC,GAC/B2B,EAActD,EAAGO,WAAWsB,GAC9ByB,EAAYnD,eAAe,SAAWmD,EAAYnD,eAAe,WACjE4W,EAAQC,UAAY,UACpBZ,EAAQ,0BAA4BvU,EAA5B,+GAIhB,CAGJ,GAAI7B,EAAGG,eAAe,WAElB,IADA,IAAI+B,EAAY7B,OAAOC,KAAKN,EAAGS,SACtBkB,EAAI,EAAGA,EAAIO,EAAUN,OAAQD,IAAK,CACvC,IAAMQ,EAAgBD,EAAUP,GAC1B8B,EAAYzD,EAAGS,QAAQ0B,GAC7B,GAAIsB,EAAUtD,eAAe,SAAU,CACnC,IAAM8X,EAAWxU,EAAUyU,MACvBD,EAAS9X,eAAe,SAAW8X,EAAS9X,eAAe,WAC3D4W,EAAQC,UAAY,UACpBZ,EAAQ,qCAAuCjU,EAAvC,+GAIhB,CACA,GAAIsB,EAAUtD,eAAe,UAAW,CACpC,IAAMgY,EAAY1U,EAAU2U,OACxBD,EAAUhY,eAAe,SAAWgY,EAAUhY,eAAe,WAC7D4W,EAAQC,UAAY,UACpBZ,EAAQ,sCAAwCjU,EAAxC,+GAKhB,CACJ,CAGJ,GAAInC,EAAGG,eAAe,UAElB,IADA,IAAIiC,EAAW/B,OAAOC,KAAKN,EAAGU,QACrBiB,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAAK,CACtC,IAAMU,EAAeD,EAAST,GACxB+B,EAAW1D,EAAGU,OAAO2B,GACvBqB,EAASvD,eAAe,SAAWuD,EAASvD,eAAe,WAC3D4W,EAAQC,UAAY,UACpBZ,EAAQ,uBAAyB/T,EAAzB,+GAIhB,CAGR,CApHIgW,CAAe5B,GA0HnB,SAAwBzW,GAGpB,GAFA+W,EAAQE,UAAY,SAEhBjX,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAC1C,IAAME,EAAkBH,EAAaC,GAC/B2B,EAActD,EAAGO,WAAWsB,GAE9ByB,EAAYnD,eAAe,UACD,WAArBmD,EAAYgV,MAAwBhV,EAAYnD,eAAe,gBAChE4W,EAAQE,UAAY,UACpBb,EAAQ,0BAA4BvU,EAChC,8DAEkB,UAArByB,EAAYgV,MAAuBhV,EAAYnD,eAAe,WAC/D4W,EAAQE,UAAY,UACpBb,EAAQ,0BAA4BvU,EAChC,wDAGhB,CAGJ,GAAI7B,EAAGG,eAAe,WAElB,IADA,IAAI+B,EAAY7B,OAAOC,KAAKN,EAAGS,SACtBkB,EAAI,EAAGA,EAAIO,EAAUN,OAAQD,IAAK,CACvC,IAAMQ,EAAgBD,EAAUP,GAC1B8B,EAAYzD,EAAGS,QAAQ0B,GAE7B,GAAIsB,EAAUtD,eAAe,SAAU,CACnC,IAAM8X,EAAWxU,EAAUyU,MACvBD,EAAS9X,eAAe,UACD,WAAlB8X,EAASK,MAAwBL,EAAS9X,eAAe,gBAC1D4W,EAAQE,UAAY,UACpBb,EAAQ,qCAAuCjU,EAC3C,8DAEe,UAAlB8V,EAASK,MAAuBL,EAAS9X,eAAe,WACzD4W,EAAQE,UAAY,UACpBb,EAAQ,sCAAwCjU,EAC5C,wDAGhB,CACA,GAAIsB,EAAUtD,eAAe,UAAW,CACpC,IAAMgY,EAAY1U,EAAU2U,OACxBD,EAAUhY,eAAe,UACD,WAAnBgY,EAAUG,MAAwBH,EAAUhY,eAAe,gBAC5D4W,EAAQE,UAAY,UACpBb,EAAQ,sCAAwCjU,EAC5C,8DAEgB,UAAnBgW,EAAUG,MAAuBH,EAAUhY,eAAe,WAC3D4W,EAAQE,UAAY,UACpBb,EAAQ,sCAAwCjU,EAC5C,wDAGhB,CACJ,CAGJ,GAAInC,EAAGG,eAAe,UAElB,IADA,IAAIiC,EAAW/B,OAAOC,KAAKN,EAAGU,QACrBiB,EAAI,EAAGA,EAAIS,EAASR,OAAQD,IAAK,CACtC,IAAMU,EAAeD,EAAST,GACxB+B,EAAW1D,EAAGU,OAAO2B,GAEvBqB,EAASvD,eAAe,UACD,WAAlBuD,EAAS4U,MAAwB5U,EAASvD,eAAe,gBAC1D4W,EAAQE,UAAY,UACpBb,EAAQ,uBAAyB/T,EAC7B,8DAEe,UAAlBqB,EAAS4U,MAAuB5U,EAASvD,eAAe,WACzD4W,EAAQE,UAAY,UACpBb,EAAQ,uBAAyB/T,EAC7B,wDAKhB,CAGR,CAhNIkW,CAAe9B,GAsNnB,SAA4BzW,GAGxB,GAFA+W,EAAQM,cAAgB,SAEpBrX,EAAGG,eAAe,cAGlB,IADA,IAAIuB,EAAerB,OAAOC,KAAKN,EAAGO,YACzBoB,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IAAK,CAC1C,IAAME,EAAkBH,EAAaC,GAC/B2B,EAActD,EAAGO,WAAWsB,GAGlC,GAAIyB,EAAYnD,eAAe,cAAwC,IAAzBmD,EAAYkV,WAElDlV,EAAYnD,eAAe,eAA0C,IAA1BmD,EAAYmV,YACvD1B,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAChC,mDAIJyB,EAAYnD,eAAe,UAC3B,IAAK,IAAMuY,KAAepV,EAAYvB,MAClC,GAAIuB,EAAYvB,MAAM5B,eAAeuY,GAAc,CAC/C,IAAMC,EAASrV,EAAYvB,MAAM2W,GAC7BC,EAAOxY,eAAe,OACI,kBAAdwY,EAAOpP,IAAiC,kBAAdoP,EAAOpP,IACnB,kBAAdoP,EAAOpP,IAAmBoP,EAAOpP,GAAG3D,MAAK,SAAAuI,GAAE,MAAY,kBAAPA,CAAsB,OAC9E4I,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAAkB,aAAe6W,EACjE,qEAGR3B,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAAkB,aAAe6W,EACjE,2FAEZ,CAMZ,GAAIpV,EAAYnD,eAAe,eAA0C,IAA1BmD,EAAYmV,UAAoB,CAG3E,GAAInV,EAAYnD,eAAe,SAC3B,IAAK,IAAMuY,KAAepV,EAAYvB,MAClC,GAAIuB,EAAYvB,MAAM5B,eAAeuY,GAAc,CAC/C,IAAMC,EAASrV,EAAYvB,MAAM2W,GAC7BC,EAAOxY,eAAe,MACI,kBAAdwY,EAAOpP,IAAiC,iBAAdoP,EAAOpP,IACnB,kBAAdoP,EAAOpP,IAAmBoP,EAAOpP,GAAG3D,MAAK,SAAAuI,GAAE,MAAY,iBAAPA,CAAqB,KAC7E4I,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAAkB,aAAe6W,EACjE,qEACyB,kBAAdC,EAAOpP,IAAiC,oBAAdoP,EAAOpP,IAC1B,kBAAdoP,EAAOpP,IAAmBoP,EAAOpP,GAAG3D,MAAK,SAAAuI,GAAE,MAAY,oBAAPA,CAAwB,OAChF4I,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAAkB,aAAe6W,EACjE,wEAGR3B,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAAkB,aAAe6W,EACjE,4FAEZ,CAKJpV,EAAYnD,eAAe,gBAA4C,IAA3BmD,EAAYsV,aACxD7B,EAAQM,cAAgB,UACxBjB,EAAQ,0BAA4BvU,EAChC,oDAEZ,CACJ,CAER,CApSIgX,CAAmBpC,GACnBM,EAAQtV,SAAWqX,EAAc9C,EAAe3U,cAAcoV,IAC9DM,EAAQG,eAAiB4B,EAAc9C,EAAepW,oBAAoBC,IAC3C,WAA3BkX,EAAQG,eACRH,EAAQG,eAAiB6B,EAAuBlZ,EAAU4W,GAE1DsC,EAAuBlZ,EAAU4W,GAErCM,EAAQI,qBAAuB2B,EAAc9C,EAAetT,0BAA0B+T,IACtFM,EAAQK,kBAAoB0B,EAAc9C,EAAerR,uBAAuB8R,IAChFM,EAAQO,oBAAsBwB,EAAc9C,EAAejR,iBAAiB0R,IAK5EC,EAAOI,WAAa,SACpBzW,OAAOC,KAAKyW,GAAS1Q,SAAQ,SAAA2S,GACH,YAAlBjC,EAAQiC,IAA6C,WAAtBtC,EAAOI,WACtCJ,EAAOI,WAAa,UACK,WAAlBC,EAAQiC,IAA4C,WAAtBtC,EAAOI,aAC5CJ,EAAOI,WAAa,SAE5B,GAEJ,MAEIJ,EAAOE,OAAS,SAChBR,EAAQ,oCACRoB,EAAiBZ,OAASc,EAAII,WAAWC,EAAoBL,EAAIM,SACjE5B,EAAQ,KAAOoB,EAAiBZ,QAEhCL,EAAI,CAACG,SAAQK,UAASQ,iBAAgBC,qBA2Q1C,SAASuB,EAAuBE,EAAOjZ,GAEnC,IAAIoM,EAAS,SACb,IAEI3M,EAAcM,MAAMkZ,GAAO,EAoB/B,CAnBE,MAAOtY,GAKL,IAAMC,EAAcD,EAAME,WAEpBC,EAAaF,EAAYG,QAAQ,KAEjCC,EAAaJ,EAAYK,MAAMH,EAAa,GAE5CI,EAAWF,EAAWD,QAAQ,KAE9BmY,EAAqBlY,EAAWC,MAAM,EAAGC,GAE3ClB,EAAGuB,oBAAoBpB,eAAe+Y,KACtC9M,EAAS,SACTgK,EAAQ,yDAEhB,CAEA,OAAOhK,CACX,CASA,SAAS0M,EAAchZ,GACnB,IAAIqZ,EAAM,SAQV,OAPArZ,EAAQuG,SAAQ,SAAA+S,GACa,SAArBA,EAAUC,SACVF,EAAM,SACN/C,EAAQ,wBAA0BgD,EAAUE,IAC5ClD,EAAQgD,EAAUG,SAE1B,IACOJ,CACX,CAOA,SAASpB,EAAoBC,GAEzB,IAAMI,EAAS,GAMf,OALAJ,EAAO3R,SAAQ,SAAA8H,GACNiK,EAAOxS,MAAK,SAAA4T,GAAE,OAAKA,EAAGC,WAAatL,EAAGsL,UAAYD,EAAGlP,UAAY6D,EAAG7D,OAAO,KAC5E8N,EAAO5X,KAAK2N,EAEpB,IACOiK,CACX,CAtUI9B,EACAT,EAAO6D,MAAMjD,EAAQ,CACjBkD,OAAQ,uBACTzO,MAAK,SAAA0O,GACJlD,EAAOb,OAAS,SAChBU,EAAI,CAACG,SAAQK,UAASQ,kBAC1B,IAAG,SAAAE,GACCf,EAAOb,OAAS,SAChBO,EAAQ,gCACRA,EAAQ,2DACRA,EAAQ,KAAOqB,GACflB,EAAI,CAACG,SAAQK,UAASQ,kBAC1B,IAEAhB,EAAI,CAACG,SAAQK,UAASQ,kBAyT9B,GACJ,CA6dA,IAAMsC,EAAM,OAGNC,EAAc,cAiEpB,SAAiCC,GAC7B,IAAMC,EAAc,IAAIC,IAClBC,EAAsB,IAAID,IAEhCE,EAAkBH,EAAaD,EApEtB,MAsETC,EAAY3T,SAAQ,SAACJ,EAAOiD,GACxB,GAAIjD,EAAMmU,KAAO,EAAG,CAChB,IAAMC,GAAanR,EAAIoR,MAAM,SAAW,IAAI1Y,OAExC2Y,EAAeL,EAAoBM,IAAIH,GAEvCE,GACAA,EAAaE,IAAIvR,EAAI9H,QAAQ,MAAO,IAAK6E,GACzCiU,EAAoBO,IAAIJ,EAAWE,MAEnCA,EAAe,IAAIN,KACNQ,IAAIvR,EAAI9H,QAAQ,MAAO,IAAK6E,GACzCiU,EAAoBO,IAAIJ,EAAWE,GAE3C,CACJ,GAGJ,CAvF0BG,CAAwBzE,GA+FlD,SAASkE,EAAkBH,EAAapD,EAAQ+D,GAC5C,IAAMra,EAAO,IAAIsa,IAEjB,GAAIhE,EAAU,KAAG,CACb,GAAgB,MAAZ+D,EAAK,IAAc/D,EAAU,KAAE9Q,SAASgU,GACxC,OAQJ,OALIlD,EAAU,KAAE9Q,SAASgU,KACrBa,EAAO,IAAMA,QAGjBR,EAAkBU,EAAqB5E,EAAUW,EAAU,MAAI+D,EAEnE,CAEA,GAAuB,WAAnB/D,EAAa,KAAgB,CAC7B,IAAMrW,EAAaqW,EAAiB,WACpC,IAAK,IAAM1N,KAAO3I,EACd,GAAIA,EAAWJ,eAAe+I,GAAM,CAChC,GAAIA,IAAQ2Q,EAAK,CACb,GAAgB,MAAZc,EAAK,IAAcpa,EAAW2I,GAAKpD,SAASgU,GAC5C,SAQJ,OALIvZ,EAAW2I,GAAKpD,SAASgU,KACzBa,EAAO,IAAMA,QAGjBR,EAAkBU,EAAqB5E,EAAU1V,EAAW2I,IAAOyR,EAEvE,CACIR,EAAkB5Z,EAAW2I,GAAK,GAAD,OAAKyR,GAAI,OAAGzR,EAAG,MAChD5I,EAAKwa,IAAI5R,EAEjB,CAGJ,IAAM6R,EAAuBnE,EAA2B,sBACxD,IAAK,IAAM1N,KAAO6R,EACd,GAAIA,EAAqB5a,eAAe+I,IAChCA,IAAQ2Q,EAAK,CACb,GAAgB,MAAZc,EAAK,IAAcI,EAAqB7R,GAAKpD,SAASgU,GACtD,SAQJ,OALIiB,EAAqB7R,GAAKpD,SAASgU,KACnCa,EAAO,IAAMA,QAGjBR,EAAkBU,EAAqB5E,EAAU8E,EAAqB7R,IAAM,GAAD,OAAKyR,EAAI,MAExF,CAIRK,EAAchB,EAAaW,EAAMra,EACrC,CAEA,GAAuB,UAAnBsW,EAAa,KAAe,CAC5B,IAAMqE,EAAQrE,EAAc,MAE5B,IAAK,IAAMsE,KAAQD,EACf,GAAIA,EAAM9a,eAAe+a,IACjBA,IAASrB,EAAK,CACd,GAAgB,MAAZc,EAAK,IAAcM,EAAMC,GAAMpV,SAASgU,GACxC,SAQJ,OALImB,EAAMC,GAAMpV,SAASgU,KACrBa,EAAO,IAAMA,QAGjBR,EAAkBU,EAAqB5E,EAAUgF,EAAMC,IAAQP,EAEnE,CAIRK,EAAchB,EAAaW,EAAMra,EACrC,CAEA,IAAK,IAAM4I,KAAO0N,EACVA,EAAOzW,eAAe+I,IAClB,CAAC,QAAS,QAAS,SAASpD,SAASoD,IACjCG,MAAMC,QAAQsN,EAAO1N,KACrB0N,EAAO1N,GAAK7C,SAAQ,SAAAjC,GAChB+V,EAAkB/V,EAASuW,EAC/B,GAKpB,CAQA,SAASK,EAAchB,EAAaW,EAAMra,GACtC,IAAI6a,EAAWnB,EAAYQ,IAAIG,GAE/B,GAAIQ,EAAU,CACV,IAAMC,EAAQ,IAAIR,IAAIO,GACtB7a,EAAK+F,SAAQ,SAAAgV,GACTD,EAAMN,IAAIO,EACd,IAEArB,EAAYS,IAAIE,EAAMS,EAC1B,MACIpB,EAAYS,IAAIE,EAAMra,EAE9B,CAQA,SAASua,EAAqBjE,EAAQ0E,GAClC,IAAMC,EAAWD,EAAI5U,MAAM,KAC3B,GAAoB,MAAhB6U,EAAS,GAAb,CAOA,IAFA,IAAInP,EAASwK,EAEJjV,EAAI,EAAGA,EAAI4Z,EAAS3Z,OAAQD,IACjCyK,EAASA,EAAOmP,EAAS5Z,IAG7B,OAAOyK,CARP,CAFI/B,QAAQmR,IAAI,4CAWpB,CC3pCO,IAAMC,EAAgBC,sBAAW,SAACzG,EAAOqG,GAAS,IAAD,MAC9CtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAEpBzD,EAAiB,QAAb,EAAGrD,EAAMqD,YAAI,QAAI,GACrBjT,EAAOiT,GAAQA,EAAK,GAAG0D,cAAgB1D,EAAKrX,MAAM,GAClDgb,EAA+B,QAApB,EAAGhH,EAAMgH,mBAAW,QAAI,CAAC,EACpC9a,EAAuC,QAAxB,EAAG8T,EAAM9T,uBAAe,QAAI,GAEjD+a,qBAAU,WACV,GAAG,CAACJ,EAAS9R,IAEbmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEMO,EAAoB,SAACvU,GACvB,QAAI0B,EAASwS,IHqDc,SAAClU,EAAM2B,GAAiB,IAChB,EADe,cAChCA,EAAY3H,OAAK,IAAvC,2BAAyC,CAAC,IAA/BqC,EAAO,QACd,GAAyB,kBAAb2D,EAAKwB,GACb,OAAOK,EAAuB7B,EAAM3D,GAChC,IACmB,EADpB,cACa2D,EAAKwB,IAAE,IAAvB,2BAAyB,CAAC,IAAfgT,EAAC,QACR,GAA4B,kBAAhBnY,EAAQmF,IAChB,GAAInF,EAAQmF,KAAOgT,EACf,OAAO,OAGX,GAAInY,EAAQmF,GAAGzD,SAASyW,GAAI,CACxB,IAAI1S,GAAc,EAClB,IAAK,IAAMC,KAAK/B,EACF,OAAN+B,GACI1F,EAAQ0F,KAAO/B,EAAK+B,KACpBD,GAAc,GAI1B,GAAIA,EACA,OAAO,CACf,CAER,CAAC,+BAET,CAAC,+BACD,OAAO,CACX,CGhFmB2S,CAAoBzU,EAAMkU,EAGzC,EAkCMQ,EAAgBC,EAAqBpE,GACrCpD,EAAW,oCACb,2BAAOS,UAAU,0CAAwC,eACzD,yBAAKA,UAAU,OACV8G,GAEL,yBAAK9G,UAAU,YACX,2BAAOgH,QAAQ,YAAYhH,UAAU,0CAAwC,SAC7E,2BACI2C,KAAK,OACLjT,KAAK,YACLkL,GAAG,YACHoF,UAAU,4HACViH,YAAY,0BACZC,SAAU,WAAQC,GAAqB,IAE3C,0BAAMvM,GAAG,iBAAiBoF,UAAU,gCAI5C,OAAImG,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,WACN,IAAIvN,EAAO,CAAC,EACZA,EAAKwB,GAAK0T,EAAW3E,GAAM4E,KAAI,SAAAX,GAC3B,OAAO5R,SAASC,eAAe,QAAU2R,GAAGY,QAAUxS,SAASC,eAAe,QAAU2R,GAAGtW,WAAQa,CACvG,IAAGd,QAAO,SAAA8D,GAAC,YAAUhD,IAANgD,CAAe,IAE9B,IAAMnE,EAAOgF,SAASC,eAAe,aAAa3E,MAClD8B,EAAKpC,KAAgB,KAATA,EAAcA,EAAKyX,OAAS,IAEjB,IAAnBrV,EAAKwB,GAAG3H,OACRyb,EAAiB,iDACVf,EAAkBvU,GACzBsV,EAAiB,kEApER,SAACtV,GAC1B,OAAQuQ,GACJ,IAAK,WACDtO,EAAQhC,QAAQ,CAAEsV,SAAUnc,EAAiB4G,KAAMA,IACnD,MACJ,IAAK,SACDiC,EAAQ7B,cAAc,CAAEoV,WAAYpc,EAAiB4G,KAAMA,IAC3D,MACJ,IAAK,QACDiC,EAAQ3B,aAAa,CAAEmV,UAAWrc,EAAiB4G,KAAMA,IACzD,MACJ,IAAK,QACD,IAAI/H,EAAK,CAAC,EACV,IACIA,EAAKC,KAAKF,MAAMiK,EAAQ/C,UACd,CAAZ,MAAOwW,GAAK,CACThU,EAASzJ,KACVA,EAAG+B,MAAQ,IAEf/B,EAAG+B,MAAMvB,KAAKuH,GACdoO,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC3DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,GACrD,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,IAIZ,CAwCoBiG,CAAqB3V,GACrBqC,IAER,EACAiL,WAAY,MACZH,SAAUA,EACVjS,MAAK,cAASoC,EAAI,SAClBhC,YAAW,2BAAsBgC,EAAI,6EAEzCsF,SAASC,eAAe,eAGzB,IACX,IAEMyS,EAAmB,SAACM,GACtBhT,SAASC,eAAe,kBAAkBgT,YAAcD,EACxDhT,SAASC,eAAe,aAAaiT,UAAUC,OAAO,mBACtDnT,SAASC,eAAe,aAAaiT,UAAU/C,IAAI,iBACvD,EAEMgC,EAAoB,WACtBnS,SAASC,eAAe,aAAaiT,UAAU/C,IAAI,mBACnDnQ,SAASC,eAAe,aAAaiT,UAAUC,OAAO,iBAC1D,EAEMb,EAAa,SAAC3E,GAChB,OAAQA,GACJ,IAAK,WAAY,MAAO,CACpB,gBACA,eACA,kBACA,qBAEJ,IAAK,QAAS,MAAO,CACjB,iBACA,oBAEJ,IAAK,SAAU,MAAO,CAClB,gBAEJ,IAAK,QAAS,MAAO,CACjB,qBACA,oBACA,0BACA,yBACA,uBACA,0BAEJ,QAAS,MAAO,GAExB,EAEMoE,EAAuB,SAACpE,GAC1B,OAAO,yBAAK3C,UAAU,8BACjBsH,EAAW3E,GAAM4E,KAAI,SAACjZ,GAAC,OAAK8Z,EAAa9Z,EAAE,IAEpD,EAEM8Z,EAAe,SAAC1Y,GAClB,IAAMkL,EAAE,eAAWlL,GAEnB,OAAO,yBAAK6D,IAAKqH,EAAIoF,UAAU,sBAEd,iBAATtQ,EAA0B,2BAAOkL,GAAIA,EACjCoF,UAAU,sBACV2C,KAAK,WACLrS,MAAOZ,IAEN,2BAAOkL,GAAIA,EACZoF,UAAU,sBACV2C,KAAK,WACLrS,MAAOZ,EACPmT,SAAmB,iBAATnT,EACV8X,QAAkB,iBAAT9X,IAGjB,2BAAOsQ,UAAU,2BAA2BgH,QAASpM,GAAKlL,GAElE,E,aCzMA,06MAkBA,IAAI1E,EAAQ,GACRqd,EAAS,CAAC,EACVC,EAAY,CAAC,EAEJC,EAAkBxC,sBAAW,SAACzG,EAAOqG,GAAS,IAAD,EAClDtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAC1B,EAA0ChV,IAAM8U,UAAS,WAAQ,MAAO,KAAM,IAAE,mBAAzEsC,EAAa,KAAEC,EAAgB,KACtC,EAA8CrX,IAAM8U,UAAS,WAAQ,MAAO,CAAC,CAAE,IAAE,mBAA1EwC,EAAe,KAAEC,EAAkB,KAGpCrC,EAA+B,QAApB,EAAGhH,EAAMgH,mBAAW,QAAI,CAAC,EAC1C,IACEgC,EAAYD,EACZA,EAAS/d,KAAKF,MAAMiK,EAAQ/C,WAC5BtG,EAAQ,EAKV,CAJE,MAAOsD,GACPtD,EAAQsD,EAAEqG,QACVD,QAAQ1J,MAAMA,GACdqd,EAASC,CACX,CAEA9B,8BAAoBb,GAAK,WACvB,MAAO,CACLc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAExB,IAEA,IAAMiS,EAAO,WACXN,GAAW,EACb,EAEM3R,EAAQ,WACZ2R,GAAW,EACb,EAGMwC,EAAoB,SAACrW,GACzB,QAAIyB,EAASsS,IJiCkB,SAAC/T,EAAMwB,GAAiB,IAChB,EADe,cAChCA,EAAY7E,OAAK,IAAvC,2BACI,GADc,QACFc,OAASuC,EAAKvC,KACtB,OAAO,CAEd,+BACD,OAAO,CAEX,CIxCa6Y,CAAoBtW,EAAM+T,EAGrC,EAoBMwC,EAAcC,uBAAY,WAC9B,MACE,4BAA6B5T,QAAU,uBAAwBA,MAEnE,GAAG,IAEG6T,EAAsB,SAACC,GAC3BR,EAAiBQ,GACbP,GAAqC,QAAlBO,GACrBN,EAAmB,CAAC,EAExB,EAEMO,EAAOH,uBAAY,SAAClU,GACxB,OAAOA,EAAKC,KAAOD,EAAKC,OAASqB,EAAetB,EAClD,GAAG,IAEGsU,EAAWJ,sBAAW,uCAC1B,WAAOjB,GAAC,oFAEDgB,IAAc,CAAD,gCACGpT,IAAe,KAAD,EAAvB,KAAJb,EAAI,QACD,CAAD,gBACwD,OAA9DG,SAASC,eAAe,aAAa3E,MAAQ,KAAOuE,EAAKnF,KAAK,SAC/CwZ,EAAKrU,GAAM,KAAD,EACF,OADnBxK,EAAE,YACNse,EAAkB,KAACre,KAAI,UAAaD,EAAE,8BAAdD,MAAK,oGAOZ8K,IAAgB,KAAD,GAAxB,OAAVxD,EAAU,iBACSA,EAAWkD,UAAU,KAAD,GAAjCC,EAAI,OACJ7E,EAAO,KAAO6E,EAAKnF,KACzBiZ,EAAmBjX,GACnBsD,SAASC,eAAe,aAAa3E,MAAQN,EAAK,mDAE5CgY,EAAM,+CACZtT,QAAQ1J,MAAMgd,EAAI,EAAD,IACjBoB,MAAMpB,GAAK,2DAEd,mDAzByB,GA0B1B,CAACc,EAAaI,IAGVG,EAAe,WACnB,IAEIjb,EAAQ,EAKZ,MAPkB,CAAC,OAAQ,cAAe,YAAa,OAAQ,aAC7D,WAAY,aAAc,OAAQ,sBAAuB,gBAE3BmZ,KAAI,SAAC+B,GAEnC,OADAlb,IACO,4BAAQkC,MAAOgZ,EAAiB/V,IAAKnF,GAC9C,GAEF,EAEMmR,EAAW,oCACf,2BAAOS,UAAU,0CAAwC,sBACzD,yBAAKA,UAAU,OACZqI,EAAc,OAEjB,yBAAKrI,UAAU,YACb,2BAAOgH,QAAQ,MAAMhH,UAAU,0CAAwC,gFACvE,2BACEuJ,KAAK,eACL5G,KAAK,OACLjT,KAAK,MACLkL,GAAG,MACHoF,UAAU,4HACViH,YAAY,kBAEd,8BAAUrM,GAAG,gBACX,kBAACyO,EAAY,OAGf,0BAAMzO,GAAG,gBAAgBoF,UAAU,+BAErC,yBAAKA,UAAU,YACb,2BAAOgH,QAAQ,YAAYhH,UAAU,+CAA6C,qBAClF,4BAAQA,UAAU,6EAA6EwJ,SAA4B,WAAlBhB,EAA4BvI,QAAS,WAAQ+I,EAAoB,SAAW,GAAE,sBACvL,4BAAQhJ,UAAU,6EAA6EyJ,MAAO,CAAEC,WAAY,MAAQF,SAA4B,QAAlBhB,EAAyBvI,QAAS,WAAQ+I,EAAoB,MAAQ,GAAE,iBAC9M,yBAAKhJ,UAAU,YACb,2BACE2C,KAAK,OACLjT,KAAK,YACLkL,GAAG,YACHoF,UAAU,qHACViH,YAAY,uBACZC,SAAU,WAAQyC,GAAyB,EAC3CH,SAA4B,QAAlBhB,IAEO,WAAlBA,GAA8B,4BAAQxI,UAAU,2DAA2DC,QAASkJ,EAAUK,SAA4B,WAAlBhB,GAA2B,YAItK,0BAAM5N,GAAG,iBAAiBoF,UAAU,8BACpC,6BACE,2BAAOgH,QAAQ,OAAOhH,UAAU,0CAAwC,oEACxE,2BACEuJ,KAAK,YACL5G,KAAK,OACLjT,KAAK,OACLkL,GAAG,OACHoF,UAAU,4HACViH,YAAY,eAEd,8BAAUrM,GAAG,aACX,4BAAQtK,MAAM,wBACd,4BAAQA,MAAM,eACd,4BAAQA,MAAM,aACd,4BAAQA,MAAM,kBAKtB,OAAI6V,EACKiB,IAASC,aACd,kBAAC,EAAc,CACb5H,SAAUhL,EACVkL,SAAU,WACR,IAAIpN,EAAO,CAAC,EACRX,EAAW,CAAC,EACVzC,EAAM6F,SAASC,eAAe,OAAO3E,MACrCN,EAAOgF,SAASC,eAAe,aAAa3E,MAC5CqS,EAAO3N,SAASC,eAAe,QAAQ3E,MAC7CiC,EAAKvC,KAAgB,KAATA,EAAcA,EAAKyX,OAAS,IACxC,IAAImC,GAAa,EACjB,IACE,IAAIC,EAAM,IAAIC,IAAI9Z,EAGpB,CAFE,MAAO8X,GACP8B,GAAa,CACf,CACA,GAAsB,QAAlBpB,IAA2BoB,GAAgC,UAAjBC,EAAIE,UAAyC,WAAjBF,EAAIE,SAiB5EnY,EAAS5B,GAAQ0Y,OAhBjB,IACE,IAAIsB,EAAc,IAAIC,eAGtB,GAFAD,EAAYtD,KAAK,MAAO1W,GAAM,GAC9Bga,EAAYE,OACRF,EAAYG,kBAAkB,gBAAgBha,SAAS,uBAAwB,CACjF,IAAMia,EAAmBJ,EAAYK,SACjCC,EAAWhgB,KAAKF,MAAMggB,GAC1BxY,EAAS5B,GAAQsa,CACnB,CAKF,CAJE,MAAOC,GAEP7V,QAAQ1J,MADI,gDACOuf,GACnB3Y,EAAS5B,GAAQ0Y,CACnB,CAKU,KAARvZ,IACFoD,EAAKpD,IAAMA,EAAIsY,QAEJ,KAAT9E,IACFpQ,EAAKoQ,KAAOA,EAAK8E,QAGN,KAATzX,EACFwa,EAAqB,mCAEd5B,EAAkBrW,GACzBiY,EAAqB,iEArLV,SAACjY,GACpB,IAAIlI,EAAK,CAAC,EACV,IACEA,EAAKC,KAAKF,MAAMiK,EAAQ/C,UACZ,CAAZ,MAAOwW,GAAK,CACT9T,EAAS3J,KACZA,EAAG6E,MAAQ,IAEb7E,EAAG6E,MAAMrE,KAAK0H,GACdiO,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC7DpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,IACjDgK,EAAQpB,wBAAwBwD,EAClC,IAAG,SAAAqL,GACDpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EACd,GACF,CAwKU2I,CAAalY,GACb8B,EAAQtB,YAAYnB,GACpB+W,EAAmB,CAAC,GACpBlU,IAEJ,EAEAiL,WAAY,MACZH,SAAUA,EACVjS,MAAK,YACLI,YAAW,2BAAsB2a,EAAO/a,MAAK,yCAE/C0H,SAASC,eAAe,eAGrB,IACT,IAEMuV,EAAuB,SAACxC,GAC5BhT,SAASC,eAAe,kBAAkBgT,YAAcD,EACxDhT,SAASC,eAAe,aAAaiT,UAAUC,OAAO,mBACtDnT,SAASC,eAAe,aAAaiT,UAAU/C,IAAI,iBACrD,EAEMwE,EAAwB,WAC5B3U,SAASC,eAAe,aAAaiT,UAAU/C,IAAI,mBACnDnQ,SAASC,eAAe,aAAaiT,UAAUC,OAAO,iBACxD,E,kBC1PauC,EAAkB,SAACpL,GAC5B,OACI,yBAAKU,UAAU,8BACX,yBAAKA,UAAU,UACVV,EAAMC,UAEX,4BAAQU,QAAS,kBAAM9K,OAAOuR,KAAKpH,EAAMqL,QAAQ3a,KAAM,SAAS,GAC5D,kBAAC,EAAQ,CAAC4a,KAAMtL,EAAMqL,QAAQC,QAElC,yBAAK5K,UAAU,QAG3B,EAQa6K,EAAW,SAACvL,GACrB,OACI,oCACI,kBAAC,IAAI,CAACwL,MAAM,OACRrG,KAAK,KACL,aAAW,EACX,YAAU,OACV,WAAUnF,EAAMsL,KAChB,wBAAsB,YAE1B,kBAAC,IAAY,CAACA,MAAM,EAAMjI,KAAK,SAG3C,E,gBC7CMoI,GAAc,cAChB,WAAYH,EAAM5a,GAAO,qBACrBgb,KAAKJ,KAAOA,EACZI,KAAKhb,KAAOA,CAChB,IAqCSib,GAAyB,WASlC,OAAO,IAAIF,GARD,gWAMG,oDAGjB,EAEaG,GAAyB,WASlC,OAAO,IAAIH,GARD,0XAMG,oDAGjB,EAEaI,GAAgB,CACzB,WAnDO,IAAIJ,GAPD,oZAMG,mEAqDb,QAzCO,IAAIA,GAPD,uYAMG,iEA2Cb,OA9BO,IAAIA,GARD,6VAOG,gEAgCb,MAASE,KACT,MAASC,M,UClEE,SAASE,GAAK9L,GAEzB,IAAM+L,EAAc,CAChB,gBAAmB,kBAACC,GAAW,CAAC3I,KAAK,aAAavQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WACpF,kBAAqB,kBAAC4D,GAAa,CAAC5I,KAAK,aAAavQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WACxF,qBAAwB,kBAAC6D,GAAc,CAAC7I,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WACvF,uBAA0B,kBAAC8D,GAAgB,CAAC9I,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WAC3F,aAAgB,kBAAC+D,GAAQ,CAAC/I,KAAK,aAAavQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WAC9E,uBAA0B,kBAACgE,GAAgB,CAAChJ,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMwZ,UAAWtM,EAAMqI,WAC5F,kBAAqB,kBAACkE,GAAW,CAAClJ,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMwZ,UAAWtM,EAAMqI,WAClF,cAAiB,kBAACmE,GAAS,CAACnJ,KAAK,aAAavQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WAChF,wBAA2B,kBAACoE,GAAiB,CAACpJ,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMwZ,UAAWtM,EAAMqI,WAC9F,mBAAsB,kBAACqE,GAAY,CAACrJ,KAAK,QAAQvQ,KAAMkN,EAAMlN,KAAMwZ,UAAWtM,EAAMqI,WACpF,aAAgB,kBAACsE,GAAU,CAACtJ,KAAK,UAAUvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WAC7E,iBAAoB,kBAAC4D,GAAa,CAAC5I,KAAK,SAASvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,YAGvF,OAAI0D,EAAY/L,EAAMlN,KAAKwB,IAChByX,EAAY/L,EAAMlN,KAAKwB,IAGJ,WAA1B0L,EAAM4M,gBACC,kBAACD,GAAU,CAACtJ,KAAK,UAAUvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WACnC,UAA1BrI,EAAM4M,gBACN,kBAACZ,GAAW,CAAC3I,KAAK,SAASvQ,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,WAGjE,kBAACwE,GAAa,CAAC/Z,KAAMkN,EAAMlN,KAAMuV,SAAUrI,EAAMqI,UAC5D,CAEO,SAAS2D,GAAYhM,GACxB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,oIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,8DAA4D,YAE/E,yBAAKA,UAAU,yEAAyEV,EAAMlN,KAAKpC,MACnG,4BAAQgQ,UAAU,iEAAiEC,QAAS,kBAThF3R,EASiGgR,OARjHjL,EAAQlC,WAAW7D,GADJ,IAACA,CASuG,GAC/G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASS,GAAcjM,GAC1B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,8HACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,2DAAyD,cAE5E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,8DAA8DC,QAAS,kBAT7E3R,EAS8FgR,OAR9GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASoG,GAC5G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASU,GAAelM,GAC3B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,oIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,8DAA4D,eAE/E,yBAAKA,UAAU,yEAAyEV,EAAMlN,KAAKpC,MACnG,4BAAQgQ,UAAU,iEAAiEC,QAAS,kBAThF3R,EASiGgR,OARjHjL,EAAQlC,WAAW7D,GADJ,IAACA,CASuG,GAC/G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASW,GAAiBnM,GAC7B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,8HACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,2DAAyD,iBAE5E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,8DAA8DC,QAAS,kBAT7E3R,EAS8FgR,OAR9GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASoG,GAC5G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASY,GAASpM,GACrB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,kIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,6DAA2D,SAE9E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,gEAAgEC,QAAS,kBAT/E3R,EASgGgR,OARhHjL,EAAQlC,WAAW7D,GADJ,IAACA,CASsG,GAC9G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASa,GAAiBrM,GAC7B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,kIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,6DAA2D,iBAE9E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,gEAAgEC,QAAS,kBAT/E3R,EASgGgR,OARhHjL,EAAQlC,WAAW7D,GADJ,IAACA,CASsG,GAC9G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASe,GAAYvM,GACxB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,kIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,6DAA2D,YAE9E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,gEAAgEC,QAAS,kBAT/E3R,EASgGgR,OARhHjL,EAAQlC,WAAW7D,GADJ,IAACA,CASsG,GAC9G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASgB,GAAUxM,GACtB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,gIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,4DAA0D,UAE7E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,+DAA+DC,QAAS,kBAT9E3R,EAS+FgR,OAR/GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASqG,GAC7G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASiB,GAAkBzM,GAC9B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,gIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,4DAA0D,kBAE7E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,+DAA+DC,QAAS,kBAT9E3R,EAS+FgR,OAR/GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASqG,GAC7G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASkB,GAAa1M,GACzB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,gIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,4DAA0D,aAE7E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,+DAA+DC,QAAS,kBAT9E3R,EAS+FgR,OAR/GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASqG,GAC7G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAGO,SAASmB,GAAW3M,GACvB,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,8HACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,2DAAyD,WAE5E,yBAAKA,UAAU,0EAA0EV,EAAMlN,KAAKpC,MACpG,4BAAQgQ,UAAU,8DAA8DC,QAAS,kBAT7E3R,EAS8FgR,OAR9GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASoG,GAC5G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,CAEO,SAASqB,GAAc7M,GAC1B,IAAMjL,EAAU2R,qBAAWC,GAI3B,OACI,yBAAKjG,UAAU,gIACX,yBAAKA,UAAU,sEACX,yBAAKA,UAAU,8CAA4C,cAE/D,yBAAKA,UAAU,+DAA+DV,EAAMlN,KAAKpC,MACzF,4BAAQgQ,UAAU,4DAA4DC,QAAS,kBAT3E3R,EAS4FgR,OAR5GjL,EAAQlC,WAAW7D,GADJ,IAACA,CASkG,GAC1G,kBAAC,KAAM,CAACmW,KAAM,GAAIqG,MAAM,WAIxC,C,cCrQA,26MAiBe,SAASsB,GAAK9M,GAE3B,IAAMjL,EAAU2R,qBAAWC,GAYrBoG,EAAQ,wCAAG,WAAO/d,GAAC,wEACnB0B,EAAO1B,EAAEiE,KAAKvC,KAClBoE,EAAgBC,EAASrE,GAAM,2CAChC,gBAHa,sCAId,OACE,yBAAKgQ,UAAU,gIACb,yBAAKA,UAAU,sEACZV,EAAM/M,KAAKpD,KAAO,yBAAK6Q,UAAU,4DAA4DV,EAAM/M,KAAKpD,MAE3G,yBAAK6Q,UAAU,0EAA0EV,EAAM/M,KAAKvC,MACpG,4BAAQgQ,UAAU,+DAA+DC,QAAS,kBArB3E,SAAC3R,GAClB,IAAIoa,EAAkBrU,EAAQzC,SAE1B8W,EAAgBpa,EAAEiE,KAAKvC,eAClB0Y,EAAgBpa,EAAEiE,KAAKvC,MAC9BqE,EAAQrB,eAAe0V,IAEzBrU,EAAQ/B,WAAWhE,EAAEqZ,UACrBtT,EAAQtC,kBAAiB,EAE3B,CAWoGua,CAAWhN,EAAM,GAC/G,kBAAC,KAAM,CAACmF,KAAM,GAAIqG,MAAM,WAEzBzW,EAAQzC,UAAYyC,EAAQzC,SAAS0N,EAAM/M,KAAKvC,QAAWtF,OAAOC,KAAK0J,EAAQzC,SAAS0N,EAAM/M,KAAKvC,OAAO/D,QAAyD,SAA9CoI,EAAQzC,SAAS0N,EAAM/M,KAAKvC,MAAY,OAC5J,4BAAQgQ,UAAU,+DAA+DC,QAAS,kBAAMoM,EAAS/M,EAAM,GAC7G,kBAAC,IAAI,CAACmF,KAAM,GAAIqG,MAAM,WAIhC,C,cCpCayB,GAAkB,SAACjN,GAAW,IAAD,IACtC,OAAO,yBAAK/L,IAAK+L,EAAM1E,GAAIoF,UAAU,QACjC,2BAAOgH,QAAS1H,EAAM1E,GAAIoF,UAAU,0CAA0CV,EAAMkN,MAAK,KACzF,2BACI9c,KAAM4P,EAAM1E,GACZA,GAAI0E,EAAM1E,GACVoF,UAAU,4HACViH,YAAa3H,EAAM2H,YACnBtE,KAAgB,QAAZ,EAAErD,EAAMqD,YAAI,QAAI,OACpB8J,UAA0B,QAAjB,EAAEnN,EAAMmN,iBAAS,SAC1BvF,SAAU5H,EAAM4H,SAAW,kBAAM5H,EAAM4H,UAAU,EAAG,OAExD,0BAAMtM,GAAE,UAAK0E,EAAM1E,GAAE,gBAAgBoF,UAAU,8BAEvD,EAEa0M,GAAiB,SAACpN,GAC3B,OAAO,oCACH,2BAAO0H,QAAS1H,EAAM1E,GAAIoF,UAAU,0CAA0CV,EAAMkN,MAAK,KACzF,8BACI5R,GAAI0E,EAAM1E,GACV+R,KAAK,IACL3M,UAAU,4JASViH,YAAa3H,EAAM2H,cAG/B,EAEa2F,GAAiB,SAACtN,GAC3B,OAAO,oCACH,2BAAO0H,QAAS1H,EAAM1E,GAAIoF,UAAU,0CAA0CV,EAAMkN,MAAK,KACzF,yBAAKxM,UAAU,YACX,4BAAQA,UAAU,6JAA6JpF,GAAI0E,EAAM1E,IACpL0E,EAAMuN,QAAQtF,KAAI,SAACjZ,GAAQ,OAAO,4BAAQiF,IAAKjF,GAAIA,EAAY,KAEpE,yBAAK0R,UAAU,uFACX,kBAAC,KAAW,CAAC8K,MAAM,cAKnC,EAEagC,GAAiB,SAACxN,GAAW,IAAD,EACrC,OAAO,yBAAK/L,IAAK+L,EAAM1E,GAAIoF,UAAU,sBAEf,QAAd,EAAAV,EAAMuD,gBAAQ,SACV,2BAAOjI,GAAI0E,EAAM1E,GACboF,UAAU,sBACV2C,KAAK,WACLrS,MAAOgP,EAAMkN,QAEjB,2BAAO5R,GAAI0E,EAAM1E,GACboF,UAAU,sBACV2C,KAAK,WACLrS,MAAOgP,EAAMkN,MACb3J,SAAUvD,EAAMuD,SAChB2E,SAAS,IAGrB,2BAAOxH,UAAU,2BAA2BgH,QAAS1H,EAAM1E,IAAK0E,EAAMkN,OAE9E,EClEaO,GAAkBhH,sBAAW,SAAC+B,EAAGnC,GAC1C,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAEpBzD,EAAO,SACPpP,EAAM,UACN7D,EAAeiT,EAAK,GAAG0D,cAAgB1D,EAAKrX,MAAM,GAExDib,qBAAU,WACV,GAAG,CAACJ,EAAS9R,IAEbmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEM7G,EAAW,oCACb,kBAAC,GAAe,CACZ3E,GAAE,UAAK+H,EAAI,UACX6J,MAAM,QACNvF,YAAW,UAAKvX,EAAI,UACpB+c,WAAW,EACXvF,SAAU,kBAAMC,GAAmB,IAEvC,kBAAC,GAAc,CACXvM,GAAE,UAAK+H,EAAI,gBACX6J,MAAM,cACNvF,YAAW,4CAAuCvX,EAAI,UAuBxDsd,EAAgB,SAACC,GACnB,IAAI5iB,EAAKC,KAAKF,MAAMiK,EAAQ/C,WAEvBjH,EAAGkJ,KACJlJ,EAAGkJ,GAAO,CAAC,GAGflJ,EAAGkJ,GAAK0Z,EAAO3f,OAAS2f,EAExBzM,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC3DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,GACrD,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,GAEJ,EAEM4F,EAAmB,SAACM,GACtBhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAcD,EACnEhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,mBAC1DnT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,iBAC3D,EAEMgC,EAAoB,WACtBnS,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAc,GACnEjT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,mBACvDnQ,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,iBAC9D,EAEA,OAAIhC,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,YAtDF,WAChB,IAAIsN,EAAS,CAAC,EACdA,EAAO3f,MAAQ0H,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUrS,MAExD,IAAM5C,EAAcsH,SAASC,eAAe,GAAD,OAAI0N,EAAI,iBAAgBrS,MAC/C,KAAhB5C,IACAuf,EAAOvf,YAAcA,GAEzBuf,EAAO7gB,MAAQ,GAEf,IAAI/B,EAAKC,KAAKF,MAAMiK,EAAQ/C,WACxBjH,EAAGkJ,IAAQlJ,EAAGkJ,GAAK0Z,EAAO3f,OAC1Boa,EAAiB,MAAD,OAAOhY,EAAI,wCAE3Bsd,EAAcC,GACdxY,IAER,CAsCgByY,EACJ,EACAxN,WAAU,cAAShQ,GACnB6P,SAAUA,EACVjS,MAAK,kBAAaoC,GAClBhC,YAAW,+CAA0CgC,EAAI,uBAE7DsF,SAASC,eAAe,eAGzB,IACX,IC3GakY,GAAiBpH,sBAAW,SAAC+B,EAAGnC,GACzC,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAEpBzD,EAAO,QACPpP,EAAM,SACN7D,EAAeiT,EAAK,GAAG0D,cAAgB1D,EAAKrX,MAAM,GAExDib,qBAAU,WACV,GAAG,CAACJ,EAAS9R,IAEbmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEM7G,EAAW,oCACb,kBAAC,GAAe,CACZ3E,GAAE,UAAK+H,EAAI,UACX6J,MAAM,QACNvF,YAAW,UAAKvX,EAAI,UACpB+c,WAAW,EACXvF,SAAU,kBAAMC,GAAmB,IAEvC,kBAAC,GAAc,CACXvM,GAAE,UAAK+H,EAAI,gBACX6J,MAAM,cACNvF,YAAW,4CAAuCvX,EAAI,UAuBxD0d,EAAe,SAAC7W,GAClB,IAAIlM,EAAKC,KAAKF,MAAMiK,EAAQ/C,WAEvBjH,EAAGkJ,KACJlJ,EAAGkJ,GAAO,CAAC,GAGflJ,EAAGkJ,GAAKgD,EAAMjJ,OAASiJ,EACvBiK,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC3DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,GACrD,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,GAEJ,EAEM4F,EAAmB,SAACM,GACtBhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAcD,EACnEhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,mBAC1DnT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,iBAC3D,EAEMgC,EAAoB,WACtBnS,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAc,GACnEjT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,mBACvDnQ,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,iBAC9D,EAGA,OAAIhC,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,YAtDH,WACf,IAAIpJ,EAAQ,CAAC,EACbA,EAAMjJ,MAAQ0H,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUrS,MAEvD,IAAM5C,EAAcsH,SAASC,eAAe,GAAD,OAAI0N,EAAI,iBAAgBrS,MAC/C,KAAhB5C,IACA6I,EAAM7I,YAAcA,GAExB6I,EAAMnK,MAAQ,GAEd,IAAI/B,EAAKC,KAAKF,MAAMiK,EAAQ/C,WACxBjH,EAAGkJ,IAAQlJ,EAAGkJ,GAAKgD,EAAMjJ,OACzBoa,EAAiB,MAAD,OAAOhY,EAAI,wCAE3B0d,EAAa7W,GACb9B,IAER,CAsCgB4Y,EACJ,EACA3N,WAAU,cAAShQ,GACnB6P,SAAUA,EACVjS,MAAK,kBAAaoC,GAClBhC,YAAW,+CAA0CgC,EAAI,uBAE7DsF,SAASC,eAAe,eAGzB,IACX,IC3GMqY,GAAU,YAEHC,GAAoBxH,sBAAW,SAAC+B,EAAGnC,GAC5C,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAEpBzD,EAAO,WACPpP,EAAM,aACN7D,EAAeiT,EAAK,GAAG0D,cAAgB1D,EAAKrX,MAAM,GAExDib,qBAAU,WACV,GAAG,CAACJ,EAAS9R,IAEbmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEM7G,EAAW,oCACb,kBAAC,GAAe,CACZ3E,GAAE,UAAK+H,EAAI,UACX6J,MAAM,QACNvF,YAAW,UAAKvX,EAAI,UACpB+c,WAAW,EACXvF,SAAU,kBAAMC,GAAmB,IAEvC,kBAAC,GAAc,CACXvM,GAAE,UAAK+H,EAAI,gBACX6J,MAAM,cACNvF,YAAW,4CAAuCvX,EAAI,SAE1D,kBAAC,GAAc,CACXkL,GAAE,UAAK+H,EAAI,SACX6J,MAAM,OACNK,QAAS,CAACS,GAAS,SAAU,UAAW,UAAW,SAAU,SAAU,WAE3E,yBAAKtN,UAAU,QACf,2BAAOA,UAAU,0CAAwC,eACzD,yBAAKpF,GAAG,aAAaoF,UAAU,8BAC3B,kBAAC,GAAc,CACXpF,GAAE,UAAK+H,EAAI,aACX6J,MAAM,cAEV,kBAAC,GAAc,CACX5R,GAAE,UAAK+H,EAAI,eACX6J,MAAM,iBAsCZgB,EAAkB,SAACC,GACrB,IAAIpjB,EAAKC,KAAKF,MAAMiK,EAAQ/C,WAEvBjH,EAAGkJ,KACJlJ,EAAGkJ,GAAO,CAAC,GAEflJ,EAAGkJ,GAAKka,EAASngB,OAASmgB,EAC1BjN,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC3DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,GACrD,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,GAEJ,EAEM4F,EAAmB,SAACM,GACtBhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAcD,EACnEhT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,mBAC1DnT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,iBAC3D,EAEMgC,EAAoB,WACtBnS,SAASC,eAAe,GAAD,OAAI0N,EAAI,uBAAsBsF,YAAc,GACnEjT,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAU/C,IAAI,mBACvDnQ,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUuF,UAAUC,OAAO,iBAC9D,EAEA,OAAIhC,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,YAlEA,WAClB,IAAI8N,EAAW,CAAC,EAChBA,EAASngB,MAAQ0H,SAASC,eAAe,GAAD,OAAI0N,EAAI,WAAUrS,MAC1Dmd,EAASxK,WAAajO,SAASC,eAAe,GAAD,OAAI0N,EAAI,gBAAe6E,QACpEiG,EAAS5K,SAAW7N,SAASC,eAAe,GAAD,OAAI0N,EAAI,cAAa6E,QAEhE,IAAM9Z,EAAcsH,SAASC,eAAe,GAAD,OAAI0N,EAAI,iBAAgBrS,MAC/C,KAAhB5C,IACA+f,EAAS/f,YAAcA,GAG3B,IAAMggB,EAAW1Y,SAASC,eAAe,GAAD,OAAI0N,EAAI,UAASrS,MACrDod,IAAaJ,KACbG,EAAS9K,KAAO+K,GAEH,UAAbA,EACAD,EAASnI,MAAQ,CAAC,EAEA,WAAboI,IACLD,EAAS7iB,WAAa,CAAC,GAG3B6iB,EAASrhB,MAAQ,GAEjB,IAAI/B,EAAKC,KAAKF,MAAMiK,EAAQ/C,WACxBjH,EAAGkJ,IAAQlJ,EAAGkJ,GAAKka,EAASngB,OAC5Boa,EAAiB,KAAD,OAAMhY,EAAI,wCAE1B8d,EAAgBC,GAChBhZ,IAER,CAoCgBkZ,EACJ,EACAjO,WAAU,cAAShQ,GACnB6P,SAAUA,EACVjS,MAAK,kBAAaoC,GAClBhC,YAAW,+CAA0CgC,EAAI,uBAE7DsF,SAASC,eAAe,eAGzB,IACX,I,UCvIM2Y,GAAsB,CAAC,QAAS,QAAS,eAEhC,SAASC,GAAOvO,GAAQ,IAAD,EAC5BjL,EAAU2R,qBAAWC,GAErB6H,EAAgB1c,IAAM2c,SAG5B,GAA0C,IAArCrjB,OAAOC,KAAK2U,EAAM2N,QAAQhhB,QAAgBqT,EAAM2N,OAAOe,cAAgBtjB,OACxE,OAAO,yBAAKsV,UAAU,uBAAqB,sEAG/C,IAAMiN,EAAS3N,EAAM2N,OACf7gB,EAAQoH,EAAc8L,EAAM2N,OAAO7gB,OACnCiH,EAAsBH,EAAyB,CAAExD,KAAM4P,EAAMsI,YAActI,EAAM2N,OAAQW,IACzFK,EAAavjB,OAAOC,KAAK0I,GAAqBkU,KAAI,SAAAX,GACpD,OAAO,wBAAIrT,IAAKqT,GAAIA,EAAC,MAAKtc,KAAK2D,UAAUoF,EAAoBuT,IACjE,IAMA,OACI,iCACI,6BAAS5G,UAAU,uFACf,yBAAKA,UAAU,aAAyB,QAAd,EAAEiN,EAAO3f,aAAK,QAAIgS,EAAMsI,YAClD,4BAAQ5H,UAAU,qDAAqDC,QARrD,WAC1B5L,EAAQ1B,wBAAwB,UAAW2M,EAAMsI,WACrD,GAOgB,kBAAC,KAAM,CAACnD,KAAM,GAAIqG,MAAM,YAGhC,yBAAK9K,UAAU,QACX,yBAAKA,UAAU,8BAA8BiN,EAAOvf,aACpD,wBAAIsS,UAAU,0CAA0CiO,GACxD,yBAAKjO,UAAU,+BACX,yBAAKA,UAAU,kBACX,kBAAC,EAAe,CAACA,UAAU,aAAa2K,QAASM,MAC7C,wBAAIjL,UAAU,wCAAsC,WAG5D,4BAAQC,QAlCE,WAAQ6N,EAAcI,QAAQzH,WAAY,GAmChD,kBAAC,KAAU,CAACqE,MAAM,UAAUrG,KAAK,QAErC,kBAACqB,EAAa,CAACnD,KAAK,SAChB2D,YAAa2G,EACbzhB,gBAAiB8T,EAAMsI,WACvBjC,IAAKmI,KAGZ1hB,EAAMmb,KAAI,SAACnV,EAAMpG,GAAC,OACf,kBAACof,GAAI,CAAC7X,IAAKvH,EAAGoG,KAAMA,EAAMuV,SAAUrI,EAAMsI,WAAYsE,gBAAiB,UAAiB,KAK5G,CCvDA,IAAM0B,GAAsB,CAAC,QAAS,QAAS,eAEhC,SAASO,GAAM7O,GAAQ,IAAD,EAC3BjL,EAAU2R,qBAAWC,GAErB6H,EAAgB1c,IAAM2c,SAG5B,GAAyC,IAApCrjB,OAAOC,KAAK2U,EAAM/I,OAAOtK,QAAgBqT,EAAM/I,MAAMyX,cAAgBtjB,OACtE,OAAO,yBAAKsV,UAAU,uBAAqB,qEAG/C,IAAMzJ,EAAQ+I,EAAM/I,MACdnK,EAAQoH,EAAc8L,EAAM/I,MAAMnK,OAClCiH,EAAsBH,EAAyB,CAAExD,KAAM4P,EAAMuI,WAAavI,EAAM/I,MAAOqX,IACvFK,EAAavjB,OAAOC,KAAK0I,GAAqBkU,KAAI,SAAAX,GACpD,OAAO,wBAAIrT,IAAKqT,GAAIA,EAAC,MAAKtc,KAAK2D,UAAUoF,EAAoBuT,IACjE,IAMA,OACI,iCACI,6BAAS5G,UAAU,uFACf,yBAAKA,UAAU,aAAwB,QAAb,EAAEzJ,EAAMjJ,aAAK,QAAIgS,EAAMuI,WACjD,4BAAQ7H,UAAU,qDAAqDC,QARtD,WACzB5L,EAAQ1B,wBAAwB,SAAU2M,EAAMuI,UACpD,GAOgB,kBAAC,KAAM,CAACpD,KAAM,GAAIqG,MAAM,YAGhC,yBAAK9K,UAAU,QACX,yBAAKA,UAAU,8BAA8BzJ,EAAM7I,aACnD,wBAAIsS,UAAU,0CAA0CiO,GACxD,yBAAKjO,UAAU,+BACX,yBAAKA,UAAU,kBACX,kBAAC,EAAe,CAACA,UAAU,aAAa2K,QAASM,MAC7C,wBAAIjL,UAAU,wCAAsC,WAG5D,4BAAQC,QAlCE,WAAQ6N,EAAcI,QAAQzH,WAAY,GAmChD,kBAAC,KAAU,CAACqE,MAAM,UAAUrG,KAAK,QAErC,kBAACqB,EAAa,CAACnD,KAAK,QAChB2D,YAAa/P,EACb/K,gBAAiB8T,EAAMuI,UACvBlC,IAAKmI,KAGZ1hB,EAAMmb,KAAI,SAACnV,EAAMpG,GAAC,OACf,kBAACof,GAAI,CAAC7X,IAAKvH,EAAGoG,KAAMA,EAAMuV,SAAUrI,EAAMuI,UAAWqE,gBAAiB,SAAgB,KAK1G,CCvDA,IAAM0B,GAAsB,CAAC,QAAS,QAAS,eAEhC,SAASQ,GAAS9O,GAAQ,IAAD,EAC9BjL,EAAU2R,qBAAWC,GAErB6H,EAAgB1c,IAAM2c,SAG5B,GAAwC,IAAnCrjB,OAAOC,KAAK2U,EAAM+D,MAAMpX,QAAgBqT,EAAM+D,KAAK2K,cAAgBtjB,OACpE,OAAO,yBAAKsV,UAAU,uBAAqB,wEAG/C,IAAMyN,EAAWnO,EAAM+D,KACjBjX,EAAQoH,EAAc8L,EAAM+D,KAAKjX,OAEjCiH,EAAsBH,EAAyB,CAAExD,KAAM4P,EAAMqI,UAAYrI,EAAM+D,KAAMuK,IACrFK,EAAavjB,OAAOC,KAAK0I,GAAqBkU,KAAI,SAAAX,GACpD,OAAO,wBAAIrT,IAAKqT,GAAIA,EAAC,MAAKtc,KAAK2D,UAAUoF,EAAoBuT,IACjE,IAMA,OACI,iCACI,6BAAS5G,UAAU,8FACf,wBAAIA,UAAU,aAA2B,QAAhB,EAAEyN,EAASngB,aAAK,QAAIgS,EAAMqI,UACnD,4BAAQ3H,UAAU,qDAAqDC,QARnD,WAC5B5L,EAAQ1B,wBAAwB,aAAc2M,EAAMqI,SACxD,GAOgB,kBAAC,KAAM,CAAClD,KAAM,GAAIqG,MAAM,YAGhC,yBAAK9K,UAAU,QACX,yBAAKA,UAAU,8BAA8ByN,EAAS/f,aACtD,wBAAIsS,UAAU,0CAA0CiO,GACxD,yBAAKjO,UAAU,wCACX,yBAAKA,UAAU,kBACX,kBAAC,EAAe,CAACA,UAAU,aAAa2K,QAASM,MAC7C,wBAAIjL,UAAU,wCAAsC,WAG5D,4BAAQC,QAnCE,WAAQ6N,EAAcI,QAAQzH,WAAY,GAoChD,kBAAC,KAAU,CAACqE,MAAM,UAAUrG,KAAK,QAErC,kBAACqB,EAAa,CAACnD,KAAK,WAChB2D,YAAamH,EACbjiB,gBAAiB8T,EAAMqI,SACvBhC,IAAKmI,KAGZ1hB,EAAMmb,KAAI,SAACnV,EAAMpG,GAAC,OACf,kBAACof,GAAI,CAAC7X,IAAKvH,EAAG2b,SAAUrI,EAAMqI,SAAUvV,KAAMA,EAAM8Z,gBAAiB,WAAYlM,UAAU,aAAmB,KAKlI,C,cC/DaqO,GAAY,SAAC/O,GACtB,OACI,yBAAKU,UAAU,0BACX,2BAAO2C,KAAK,SACR2L,aAAa,KACbtO,UAAU,2GACVuO,QAASjP,EAAMiP,QACftH,YAAa3H,EAAM2H,YACnB,aAAY3H,EAAMkP,YAEtB,yBAAKhF,UAAQ,EAAC7G,KAAK,SAAS3C,UAAU,mDAClC,kBAAC,KAAM,CAAC8K,MAAM,aAI9B,ECjBM2D,GAAW,MAGbpkB,GAAK,CAAC,EACNqkB,GAAQ,CAAC,EASAC,GAAqB,SAACrP,GAC/B,MAA4B4G,mBAAS,IAAG,mBAAjC7V,EAAM,KAAEue,EAAS,KACxB,EAAkC1I,mBAASuI,IAAS,mBAA7CI,EAAS,KAAEC,EAAY,KAExBxI,EAAchH,EAAMgH,YAAYlH,cAChC/K,EAAU2R,qBAAWC,GAE3B,IACIyI,GAAQrkB,GACR,IAAMigB,EAAWhgB,KAAKF,MAAMiK,EAAQ/C,WACpCjH,GAAKigB,CAGT,CAFE,MAAOhc,GACLjE,GAAKqkB,EACT,CAEA,IAsGIK,EAvBEC,EAAgB,WAClB,IAAMC,EA1EU,WAChB,GAAK5kB,GAAGic,GAAR,CAIA,IAAM4I,EAAW,CAAC,EAYlB,OAXAxkB,OAAOC,KAAKN,GAAGic,IAAcjW,QAAO,SAAA/B,GAChC,OAAIA,EAAE8Q,cAAchU,QAAQiF,EAAO+O,gBAAkB,CAMzD,IAAG1O,SAAQ,SAAC6C,GACR2b,EAAS3b,GAAOlJ,GAAGic,GAAa/S,EACpC,IAEO2b,CAdP,CAeJ,CAwDiCC,GAE7B,OAAI9kB,GAAGO,YAA8B,eAAhB0b,EACV5b,OAAOC,KAAKskB,GAAsB1H,KAAI,SAAChU,EAAKnF,GAC/C,OAAQ,kBAACggB,GAAQ,CAAC/K,KAAM4L,EAAqB1b,GAAMoU,SAAUpU,EAAKA,IAAKnF,GAC3E,IAEA/D,GAAGS,SAA2B,YAAhBwb,EACP5b,OAAOC,KAAKskB,GAAsB1H,KAAI,SAAChU,EAAKnF,GAC/C,OAAQ,kBAACyf,GAAM,CAACZ,OAAQgC,EAAqB1b,GAAMqU,WAAYrU,EAAKA,IAAKnF,GAC7E,IAEA/D,GAAGU,QAA0B,WAAhBub,EACN5b,OAAOC,KAAKskB,GAAsB1H,KAAI,SAAChU,EAAKnF,GAC/C,OAAQ,kBAAC+f,GAAK,CAAC5X,MAAO0Y,EAAqB1b,GAAMsU,UAAWtU,EAAKA,IAAKnF,GAC1E,SAHJ,CAKJ,EAEMghB,EAAuBhe,IAAM2c,SAInC,OAAQzH,GACJ,IAAK,aAAcyI,EAAuB,kBAACxB,GAAiB,CAAC5H,IAAKyJ,IAA0B,MAC5F,IAAK,UAAWL,EAAuB,kBAAChC,GAAe,CAACpH,IAAKyJ,IAA0B,MACvF,IAAK,SAAUL,EAAuB,kBAAC5B,GAAc,CAACxH,IAAKyJ,IAI/D,OACI,oCACI,yBAAKpP,UAAU,0CACX,yBAAKA,UAAU,kBACX,kBAAC,EAAe,CAAC2K,QAASQ,GAAc7E,IACpC,wBAAItG,UAAU,sCAAsCV,EAAMgH,eAGlE,kBAAC,GAAS,CACNiI,QAAS,SAACjgB,GAAC,OAvHKsgB,EAuHatgB,EAvHG+gB,OAAO/e,MAuHR,EAC/B2W,YAAW,iBAAY3H,EAAMgH,aAC7BkI,UAAS,6BAAwBlP,EAAMgH,eAE3C,yBAAKtG,UAAU,QACf,4BAAQA,UAAU,2DAA2DC,QAAS,kBAlGzE,SAACrN,GACtB,GAAKvI,GAAGuI,GAAR,CAIA,IAAM0c,EAAU,CAAC,EACXC,EAAS7kB,OAAOC,KAAKN,GAAGuI,IAAO2U,KAAI,SAAAX,GACrC,MAAO,CAAErT,IAAKqT,EAAGtZ,MAAOjD,GAAGuI,GAAMgU,GAAGtZ,MACxC,IACIuhB,IAAcJ,IACdc,EAAOC,MAAK,SAACC,EAAGC,GACZ,IAAMC,EAAQF,EAAEniB,MAAQmiB,EAAEniB,MAAQmiB,EAAElc,IAC9Bqc,EAAQF,EAAEpiB,MAAQoiB,EAAEpiB,MAAQoiB,EAAEnc,IACpC,OAAOoc,EAAME,cAAcD,EAC/B,IAAGlf,SAAQ,SAAUof,GACjBR,EAAQQ,EAAavc,KAAOlJ,GAAGuI,GAAMkd,EAAavc,IACtD,IACAub,EAtEM,UAwENS,EAAOC,MAAK,SAACC,EAAGC,GACZ,IAAMC,EAAQF,EAAEniB,MAAQmiB,EAAEniB,MAAQmiB,EAAElc,IAC9Bqc,EAAQF,EAAEpiB,MAAQoiB,EAAEpiB,MAAQoiB,EAAEnc,IACpC,OAAOoc,EAAME,cAAcD,EAC/B,IAAGG,UAAUrf,SAAQ,SAAUof,GAC3BR,EAAQQ,EAAavc,KAAOlJ,GAAGuI,GAAMkd,EAAavc,IACtD,IACAub,EAAaL,KAEjBpkB,GAAGuI,GAAQ0c,EACX9O,EAAYlW,KAAK2D,UAAU5D,GAAI,KAAM,GAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC3DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,GAAI,KAAM,GACrD,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,GAhCA,CAoCJ,CA2DwGkO,CAAiB1J,EAAY,GAxD7HuI,IAAcJ,GACP,yBAAKwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,UAAUC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAC3K,0BAAMC,EAAE,iDAIR,yBAAKT,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,UAAUC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAC5K,0BAAMC,EAAE,kDAoDJ,yBAAK1Q,UAAU,QACf,4BAAQA,UAAU,6EAA6EC,QA5B1E,WAAQmP,EAAqBlB,QAAQzH,WAAY,GA4B2D,OAChIsI,GAEJC,KAAmB,yBAAKhP,UAAU,yCAAyCgP,KAGxF,E,mBCxJO,IAAM2B,GAAiB,SAAjBA,EAAkBpJ,GAC3B,IAAMlT,EAAU2R,qBAAWC,GAC3B,EAAwCC,mBAAS,IAAIxS,MAAMhJ,OAAO4I,QAAQiU,GAAKtb,SAAQ,mBAAhF2kB,EAAY,KAAEC,EAAe,KAC9BC,EAAc/H,uBAAY,SAAC/c,GAC7B,IAAI6H,EAAO+c,EACPhK,EAAIgK,EAAa5kB,GACrB6H,EAAK7H,GAAW,OAAN4a,IAAqBA,EAC/BiK,EAAgB,aAAIhd,GACxB,GAAG,CAAC+c,EAAcC,IAElB,OACI,oCACKnmB,OAAO4I,QAAQiU,GAAKA,KAAI,WAASvb,GAAO,IAjBnC+kB,EAiBkC,mBAAbrL,EAAC,KAAExV,EAAC,KAC3B,GAjBA,QADE6gB,EAkBW7gB,KAhBD,oBAAR6gB,GAAuC,kBAARA,GAgBlB,CAAC,IAAD,EACTC,EAAa,4BAAQhR,UAAU,iBAAiBC,QAAS,kBAAM6Q,EAAY9kB,EAAE,GAC7E,yBAAKgU,UAAU,2EACX,4BAAK0F,IACgB,IAApBkL,EAAa5kB,GAAc,kBAAC,KAAW,CAACgU,UAAU,SAAY,kBAAC,KAAY,CAACA,UAAU,WAI3FT,EAAY,yBAAKS,UAAU,QAC3B,yBAAKA,UAAU,8CACf,yBAAKA,UAAU,cACU,IAApB4Q,EAAa5kB,KAAiC,QAAlB,EAACtB,OAAO4I,QAAQpD,UAAE,QAAI,IAAIqX,KAAI,WAAW0J,GAAQ,IAAD,mBAAhBC,EAAE,KAAEC,EAAE,KAC3DC,EAAK,CAAC,EAEV,OADAA,EAAGF,GAAMC,EACF,kBAACR,EAAc,iBAAKS,EAAE,CAAE7d,IAAK0d,IACxC,MAIR,OACI,yBAAKjR,UAAU,OAAOzM,IAAKvH,GACtBglB,GACoB,IAApBJ,EAAa5kB,IAAeuT,EAGzC,CAEA,IAAMjP,EAAQqG,EAAiB4Q,EAAK7B,EAChCrR,EAAQzC,SAASlH,OAAOC,KAAK0J,EAAQzC,UAAU,IAAI,aAEvD,OACI,yBAAKoO,UAAU,YAAYzM,IAAKvH,GAC5B,wBAAIgU,UAAU,yDAAyD0F,GACvE,yBAAK1F,UAAU,2BAA2B1P,GAGtD,IAGZ,E,4CC1EA,26MAgCA,IAAI+X,GAAS,CAAC,EACVC,GAAY,CAAC,EACbzW,GAAoB,GACpBwf,GAAiB,GACjBC,GAAuB,GACvBC,GAAsB,GACtBC,GAA4B,GAEjB,SAASC,KACtB,IAqPIrlB,EACA8C,EACAwiB,EAvPErd,EAAU2R,qBAAWC,GAErB6H,EAAgB1c,IAAM2c,SAKtB4D,EAAgBvgB,IAAM2c,SAK5B,EAAsC3c,IAAM8U,UAAS,WACnD,OAAO,CACT,IAAE,mBAFK0L,EAAW,KAAEC,EAAc,KAGlC,EAAwDzgB,IAAM8U,UAAS,WACrE,MAAO,MACT,IAAE,mBAFK4L,EAAoB,KAAEC,EAAuB,KAGpD,EAAsC3gB,IAAM8U,UAAS,WACnD,OAAO,CACT,IAAE,mBAFK8L,EAAW,KAAEC,EAAc,KAI5BC,EAA6B,SAACJ,GAClCC,EAAwBD,EAC1B,EAEAvL,qBAAU,WACJvR,SAASmd,qBAAqB,WAAW,IAC3Cnd,SAASmd,qBAAqB,WAAW,GAAG7b,iBAC1C,UACA,SAAU8b,GACJpd,SAASmd,qBAAqB,WAAW,GAAGlE,WAAWvH,KACzDuL,GAAe,GAEfA,GAAe,EAEnB,IACA,GAGJ,IAAII,EAAO,IACPC,EAAO,GAEPC,EAAU,IAAIC,KAAUC,MACxBC,EAAU,IAAIF,KAAUG,MAAM,CAChCna,GAAIxD,SAASC,eAAe,WAC5B2d,MAAOL,EACPpC,OAAQ,IAAMyB,EACd1B,MAAO,IACP2C,SAAU,GACVC,UAAU,EACVC,mBAAmB,IAEjBzhB,EAAY,CAAC,EACjB,GAAI+C,EAAQ/C,UACV,IACEA,EAAYhH,KAAKF,MAAMiK,EAAQ/C,UAIjC,CAHE,MAAOhD,GACP,IAAItD,EAAQsD,EAAEqG,QACdD,QAAQ1J,MAAMA,EAChB,CAIF,GAAIsG,EAAiB,MAAG,CAEtB,IAAI0hB,EAAiB,IAAIR,KAAaS,SAASC,UAC/CF,EAAeG,SAAS,IAAK,IAC7BH,EAAeI,OAAO,IAAK,IAC3BJ,EAAeK,KAAK,CAClBC,KAAM,CACJjD,KAAM,WAER7D,MAAO,CACL1X,KAAMxD,EAAiB,MACvB+e,KAAM,WAGV2C,EAAelO,IAAI,KAAM,CAAC,GAC1BkO,EAAeI,OAC6C,GAA1DJ,EAAe/E,WAAWsF,MAAa,MAAQ,KAAEtnB,OACjD,IAEFsmB,EAAQiB,QAAQR,GAChB,IAAK,IAAIhnB,EAAI,EAAGA,EAAIsF,EAAiB,MAAErF,OAAQD,IAAK,CAClDqmB,GAAc,GACdC,GAAc,GACd,IAAItiB,EAAOsB,EAAiB,MAAEtF,GAAS,KACnCynB,EAAgB,IAAIjB,KAAaS,SAASC,UAE9CO,EAAcN,SAASd,EAAMC,GAC7BmB,EAAcJ,KAAK,CACjBC,KAAM,CACJjD,KAAM,WAER7D,MAAO,CACL1X,KAAM9E,EACNqgB,KAAM,WAGVoD,EAAcL,OAC6C,GAAzDK,EAAcxF,WAAWsF,MAAa,MAAQ,KAAEtnB,OAChD,IAEFsmB,EAAQiB,QAAQC,GAChBA,EAAc3O,IAAI,OAAQ9U,GAC1B,IAAI0jB,EAAe,IAAIlB,KAAmBmB,OAAO,CAC/CC,kBAAkB,EAClBzf,EAAG,KACHyS,EAAG,OACHqG,OAAO,WAAD,6BAAE,WAAgBmF,EAAKyB,EAAaC,GAAU,0EAC9Czf,EAAQzC,WACN8W,EAAkBrU,EAAQzC,UAEViiB,EAAYjB,MAAM/N,IAAI,kBACjC6D,EAAgBmL,EAAYjB,MAAM/N,IAAI,SAC7CxQ,EAAQrB,eAAe0V,IAGlB1c,EAAI,EAAE,KAAD,OAAEA,EAAIsF,EAAiB,MAAErF,QAAM,oBAEzCqF,EAAiB,MAAEtF,GAAS,OAAM6nB,EAAYjB,MAAM/N,IAAI,QAAO,gBAGhC,OAD/BxQ,EAAQ/B,WAAWtG,GACnBqI,EAAQtC,kBAAiB,GAAM,4BALY/F,IAAG,2DASnD,uDAlBM,KAoBL+nB,EAAY,IAAIvB,KAAUwB,UAAU,CACtCC,MAAO,CAACP,KAENG,EAAcJ,EAAcS,SAASxB,GAEzC,GADAmB,EAAYM,SAASJ,GAEnB1f,EAAQzC,UACRyC,EAAQzC,SAAS5B,KACmB,SAAnCqE,EAAQzC,SAAS5B,GAAY,MAC5BtF,OAAOC,KAAK0J,EAAQzC,SAAS5B,IAAO/D,QACtC,CACAwnB,EAAc3O,IAAI,KAAMzQ,EAAQzC,SAAS5B,IACzC,IAAIokB,EAAa,IAAI5B,KAAmB6B,OAAO,CAC7CC,OAAQ,CACN,CACEC,QAAS,SACTC,SAAU,SACVvG,WAAY,CACVwG,EAAG,EACHpE,KAAM,UACNqE,OAAQ,YAGZ,CACEH,QAAS,OACTC,SAAU,OACVvG,WAAY,CACVyC,EAAG,iDACHL,KAAM,OACNC,OAAQ,UACR,eAAgB,EAChB,iBAAkB,UAIxB1J,EAAG,KACHzS,EAAG,KACHwgB,QAAQ,EACR1H,OAAO,WAAD,6BAAE,WAAgBmF,EAAKyB,EAAaC,GAAU,wEAC9C9jB,EAAO6jB,EAAYjB,MAAM/N,IAAI,QACjCzQ,EAAgBC,EAASrE,GAAM,2CAChC,uDAHM,KAKL+jB,EAAY,IAAIvB,KAAUwB,UAAU,CACtCC,MAAO,CAACP,EAAcU,KAExBP,EAAYM,SAASJ,EACvB,CACA,IAAIxhB,EAAO,IAAIigB,KAAaS,SAAS7G,KAAK,CACxCmH,MAAO,CACLqB,KAAM,CACJtE,OAAQ,YAGZuE,OAAQ,CACN,CACE1B,SAAU,GACVI,MAAO,CACLze,KAAM,CACJA,UACmC3D,IAAjCG,EAAiB,MAAEtF,GAAQ,IACvB,GACAsF,EAAiB,MAAEtF,GAAQ,IACjCqkB,KAAM,aAMhB9d,EAAKqE,OAAOoc,GACZzgB,EAAK8c,OAAOoE,GACZlhB,EAAKuiB,MAAMvC,EACb,CACAV,EAAeS,EAAO,GACxB,CACA,KACEzgB,GAAoBwC,EAAQxC,mBACNkP,SACpBsQ,GAAiBxf,GAAkBkP,OAAOC,MAExCnP,GAAkBkP,SACpBuQ,GAAuBzf,GAAkBkP,OAAOE,QAG9CpP,GAAkBgQ,kBACpB0P,GAAsB1f,GAAkBgQ,iBAAiBb,KACzDtM,QAAQmR,IAAI,QAAS0L,IACrBC,GAA4B3f,GAAkBgQ,iBAAiBZ,OAC/DvM,QAAQmR,IAAI,cAAe2L,MAE3BD,GAAsB,KACtBC,GAA4B,KAIhC,CAFE,MAAOljB,GACPoG,QAAQ1J,MAAMsD,EAChB,CACF,GAAG,CAACsjB,EAAaE,EAAsBzd,IAEvC,IACEiU,GAAYD,GACZA,GAAS/d,KAAKF,MAAMiK,EAAQ/C,UAG9B,CAFE,MAAOhD,GACP+Z,GAASC,EACX,CAEA,IAAK5d,OAAOC,KAAK0d,IAAQpc,OACvB,OACE,yBAAK+T,UAAU,2EACb,yBAAKA,UAAU,yCAAuC,gDAW5D,GAAIqI,GAAQ,CACV,GAAIA,GAAOjc,MAETA,EADuBoH,EAAc6U,GAAOjc,OACrBmb,KAAI,SAAChU,EAAKnF,GAC/B,OAAO,kBAACgd,GAAI,CAAChZ,KAAMmB,EAAKoU,SAAUvZ,EAAOmF,IAAKnF,GAChD,IAEF,GAAIia,GAAOnZ,MAETA,EADoBmZ,GAAOnZ,MACPqY,KAAI,SAAChU,EAAKnF,GAC5B,OAAO,kBAACge,GAAI,CAAC7Z,KAAMgB,EAAKoU,SAAUvZ,EAAOmF,IAAKnF,GAChD,IAGFsjB,EAAWrJ,GAEX,IAUMhV,EAAsBH,EAC1BmV,GAAOzN,GAAK,CAAEA,GAAIyN,GAAOzN,IAAO,CAAC,EACjCyN,GAZ0B,CAC1B,KACA,aACA,UACA,SACA,QACA,cACA,QACA,UAQF,OACE,yBAAKrI,UAAU,+CACb,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,QACb,+CACoB,WAAnBqR,IACC,kBAAC,KAAW,CACV5H,MAAO,CACLC,WAAY,MACZyJ,SAAU,WACV4B,IAAK,SAIS,WAAnB1D,IACC,kBAAC,KAAO,CACN5H,MAAO,CACLC,WAAY,UAKK,OAAxB6H,IACC,yBAAKvR,UAAU,0FACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,2DAAyD,UAI1E,yBAAKA,UAAU,gEACZuR,KAKP,yBAAKvR,UAAU,QACb,uDAC0B,WAAzBsR,IACC,kBAAC,KAAW,CACV7H,MAAO,CACLC,WAAY,SAIQ,WAAzB4H,IACC,kBAAC,KAAO,CACN7H,MAAO,CACLC,WAAY,MACZyJ,SAAU,WACV4B,IAAK,UAKkB,OAA9BvD,IACC,yBAAKxR,UAAU,4FACb,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,2DAAyD,UAI1E,yBAAKA,UAAU,gEACZwR,WAKKrgB,IAAbugB,GAA0BhnB,OAAOC,KAAK+mB,GAAUzlB,OAAS,GACxD,6BACE,yBAAK+T,UAAU,uBACZrJ,EAAiB+a,EAAU,QAASA,EAAS,cAEhD,kBAAC,GAAmBre,GACnBqe,EAAShkB,YACR,yBAAKsS,UAAU,2BACZrJ,EACC+a,EACA,cACAA,EAAS,cAIb,sCAIN,6BAAS1R,UAAU,QACjB,6BAASA,UAAU,kDACjB,yBAAKA,UAAU,kBACb,kBAAC,EAAe,CAAC2K,QAASM,MACxB,wBAAIjL,UAAU,qCAAmC,WAGrD,4BACEA,UAAU,yEACVC,QArXc,WACxB6N,EAAcI,QAAQzH,WACxB,GAmXuC,sBAI7B,kBAACX,EAAa,CACZnD,KAAK,QACL2D,YAAa+B,GACb1C,IAAKmI,KAGR1hB,GACC,yBAAK4T,UAAU,QACb,yBAAKA,UAAU,yCACZ5T,KAMT,6BAAS4T,UAAU,QACjB,6BAASA,UAAU,kDACjB,yBAAKA,UAAU,kBACb,kBAAC,EAAe,CAAC2K,QAASO,MACxB,wBAAIlL,UAAU,qCAAmC,UAGlDgS,GACC,4BACEhS,UAAU,6EACVwJ,SAAmC,SAAzBsI,EACV7R,QAAS,kBAAMiS,EAA2B,OAAO,GAAC,QAKrDF,GACC,4BACEhS,UAAU,6EACVyJ,MAAO,CAAEC,WAAY,QACrBF,SAAmC,UAAzBsI,EACV7R,QAAS,kBAAMiS,EAA2B,QAAQ,GAAC,UAMzD,4BACElS,UAAU,yEACVC,QAhac,WACxB0R,EAAczD,QAAQzH,WACxB,GA8ZuC,sBAI7B,kBAAC8B,EAAe,CACd5F,KAAK,OACL2D,YAAa+B,GACb1C,IAAKgM,KAGRziB,GAAkC,UAAzB4iB,GACR,yBAAK9R,UAAU,QACb,yBACEA,UAAU,wCACVpF,GAAG,aAIR1L,GAAkC,SAAzB4iB,GACR,yBAAK9R,UAAU,QACb,yBAAKA,UAAU,yCACZ9Q,KAMT,kBAAC,GAAkB,CAACoX,YAAY,eAChC,kBAAC,GAAkB,CAACA,YAAY,YAChC,kBAAC,GAAkB,CAACA,YAAY,WAGtC,CACF,C,4BClfA,26MAiBA,IAAM0O,GAAUjrB,EAAQ,KAElBuW,GACJ,qJACI2U,GACJ,6GAGIC,GAAgB,CACpBC,qBAAqB,EACrBC,iBAAiB,EACjBC,qBAAsB,IAkPTC,GA/Oa,SAAChW,GAC3B,IAAMjL,EAAU2R,qBAAWC,GAC3B,EAAkBC,mBAAS,IAApBqP,EAAuB,iBAAhB,GACd,EAA0BrP,wBAAS/U,GAAU,mBAAtCqkB,EAAK,KAAEC,EAAQ,KAChBC,EAAiB3H,iBAAO,MAC9B,EAAwB7H,mBAAS,IAAG,mBAA7ByP,EAAI,KAAEC,EAAO,KAEdC,EAAe,wCAAG,WAAOC,GAAM,wEAKhC,GAJHA,EAAOC,UAAU/U,KAAKgV,aAAaC,sBAAsB,CACvD/T,UAAU,EACVgU,qBAAqB,EACrBX,QAAS,KAGL,UAAWpgB,OAAO,CAAD,eACiC,OAAtDT,QAAQyhB,KAAK,yCAAyC,0BAIpDX,EAAQ,IAAIY,MAAMb,EAAS,CAC7BzQ,IAAK,SAAUuK,EAAQ5B,EAAUnd,EAAOwX,GACtCuH,EAAO5B,GAAYnd,EAGnB,IADA,IAAI+lB,EAAoB,CAAC/V,IAChBtU,EAAI,EAAGA,EAAIqjB,EAAOpjB,OAAQD,IACjCqqB,EAAkBxrB,KAAK,CACrByrB,UAAW,CAAC,OACZC,IAAKlH,EAAOrjB,KAUhB,OANA8pB,EAAOC,UAAU/U,KAAKgV,aAAaC,sBAAsB,CACvD/T,UAAU,EACVgU,qBAAqB,EACrBX,QAASc,KAGJ,CACT,IAEFZ,EAASD,GAAO,2CACjB,gBAlCoB,sCA2CfvT,EAAY,SAAC8O,GACbyE,EAAMrlB,SAAS4gB,IAGnByE,EAAM3qB,KAAKkmB,EACb,EAEMyF,EAAe,SAACzF,GACpB,IAAM3iB,EAAQonB,EAAMpqB,QAAQ2lB,IACb,IAAX3iB,GAGJonB,EAAMiB,OAAOroB,EAAO,EACtB,EAMMsoB,EAAW,wCAAG,WAAOrH,GAAM,gFAC3BmG,EAAMrlB,SAASkf,GAAQ,CAAD,gDAKG,OALH,SAKlBxF,EAAM,IAAIC,IAAIuF,GAAQ,EAAD,OACTsH,MAAM9M,GAAK,KAAD,EAAnB,OAAHjJ,EAAG,gBAEYA,EAAII,OAAO,KAAD,EAAnB,OAANC,EAAM,yBACLA,GAAM,kCAEbvM,QAAQ1J,MAAM,EAAD,IAAI,0DAEpB,gBAdgB,sCAgBXkc,EAAQ,wCAAG,WAAO0P,EAAY9O,GAAC,oNAEG,GAC9B,aADA9G,EAAO1W,KAAKF,MAAMwsB,IACC,CAAD,eACP,OAvBnBpB,EAAMiB,OAAO,Q,GAAQI,MAAMrB,MAAMvpB,QAuBd,6CAIYkF,IAAzBkD,EAAQ5C,aAA0B,iBACF,OAAlC4C,EAAQrC,oBAAmB,GAAO,SACb0kB,EAAYpW,IAAU,KAAD,EAA9B,QAEV2B,EAAU3B,IACX,QAI0B,GADvBzJ,EAAYmK,EAAK,eACjB8V,EAAS9V,EAAK,WACN8V,EAAO1rB,QAAQ,eAAiB,GAAC,oBACxCiJ,EAAQ5C,aAAa,CAAD,gBACU,OAAjC4C,EAAQrC,oBAAmB,GAAM,UACZ0kB,EAAYzB,IAAU,KAAD,GAA9B,SAEVhT,EAAUgT,IACVuB,EAAalW,KACd,oCAEMjM,EAAQ5C,aAAa,CAAD,qBAE3BnH,KAAK2D,UAAU4I,GAAWzL,QACxB,sCACG,GAAC,iBAE4B,OAAlCiJ,EAAQrC,oBAAmB,GAAO,UACb0kB,EAAYpW,IAAU,KAAD,GAA9B,SAEV2B,EAAU3B,IACVkW,EAAavB,KACd,WAKoB,kBAAdpe,EAAsB,yBACJ1F,IAAvB6jB,GAAQne,IAA6B2e,EAAMrlB,SAAS6kB,GAAQne,IAAW,kCACpD6f,EAAY7f,GAAW,KAAD,GAG1C,OAHW,QAEVoL,EAAUpL,GACX,0CAMDnD,MAAMC,QAAQkD,GAAW,CAAD,wCACjB7K,GAAC,qEACoB,kBAAjB6K,EAAU7K,GAAe,wBACPmF,IAAvB6jB,GAAQne,IAA6B2e,EAAMrlB,SAAS6kB,GAAQne,IAAW,gBAC9B,OAA3CnC,QAAQmR,IAAI,mBAAoBhP,GAAW,SACtB6f,EAAY7f,EAAU7K,IAAI,KAAD,EAAlC,QAEViW,EAAUpL,EAAU7K,IACrB,OAGuB,kBAAjB6K,EAAU7K,IACnBtB,OAAOC,KAAKkM,EAAU7K,IAAI0E,QAAO,wCAAC,WAAOqmB,GAAU,0EACP5lB,IAAtC6jB,GAAQne,EAAU7K,GAAG+qB,KAA+BvB,EAAMrlB,SAAS6kB,GAAQne,IAAW,gCACnE6f,EAAY1B,GAAQne,EAAU7K,GAAG+qB,KAAc,KAAD,EAAvD,QAEV9U,EAAU+S,GAAQne,EAAU7K,GAAG+qB,KAChC,2CAEJ,mDAPgC,IAQlC,0CAnBM/qB,EAAI,EAAE,KAAD,QAAEA,EAAI6K,EAAU5K,QAAM,0CAA3BD,GAAC,iBAA4BA,IAAG,wBAuB3C,GAAI0H,MAAMC,QAAQkD,GAChB,IAD6B,EAAD,SACnB7K,GACP,IAAM4a,EAAIlc,OAAOC,KAAKqqB,IAASgC,MAC7B,SAACzjB,GAAG,OAAKyhB,GAAQzhB,KAASiiB,EAAMxpB,EAAE,IAE/B6K,EAAU1G,SAASyW,IACtB4P,EAAahB,EAAMxpB,GACpB,EANMA,EAAI,EAAGA,EAAIwpB,EAAMvpB,OAAQD,IAAM,EAA/BA,GAQV,0CAvFgC,GAuFhC,uJASC,OATD,SAGDwU,EAAYoW,EAAYliB,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC5CpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgB8kB,EAAY,SACtC,IAAG,SAAA9U,GACDpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EACd,IAAE,0EAEL,gBAlGa,wCAoGdyE,qBAAU,WACc,aAgBrB,OAhBqB,yBAAtB,yFACE,IACE,GAAIlS,EAAQzC,SAAU,CAGpB,IAAS2B,KAFLoiB,EAAO,GACPvnB,EAAQ,EACIiG,EAAQzC,UACgB,SAAlCyC,EAAQzC,SAAS2B,GAAW,MAAgB7I,OAAOC,KAAK0J,EAAQzC,SAAS2B,IAAMtH,UACjF0pB,EAAK9qB,KAAK,4BAAQyF,MAAOiD,EAAKA,IAAKnF,GAAQmF,IAC3CnF,KAGJwnB,EAAQD,EACV,CAGF,CAFE,MAAO7T,GACPpN,QAAQ1J,MAAM8W,EAChB,CAAC,4CACF,uBAjBc,WACO,wBAiBtBmV,EACF,GAAG,CAAC5iB,EAAQzC,SAAUyC,EAAQ/C,YAE9B,IAAM4lB,EAAc,wCAAG,qFACjBlnB,EAAOgF,SAASC,eAAe,YAAY3E,MAC/C8D,EAAgBC,EAASrE,GAAM,2CAChC,kBAHmB,mCAIpB,OACE,oCACE,yBAAK4K,GAAG,kBAEJvG,EAAQ/C,WAAa+C,EAAQzC,UAC7B,4BAAQlC,KAAK,WAAWkL,GAAG,WAAWoF,UAAU,aAAakH,SAAU,kBAAMgQ,GAAgB,GAC1FvB,IAIP,yBAAK3V,UAAU,gBAAgBpF,GAAG,UAChC,kBAAC,KAAY,CACXiS,QAASqI,GACT3jB,MAAO,MAAQ8C,EAAQ9C,MACvB4lB,SAAS,OACTxR,IAAK+P,EACLplB,MAAO+D,EAAQ/C,UACfukB,gBAAiBA,EACjBuB,eAzLe,SAACC,EAAQvB,GAC9BuB,EAAOC,6BAA4B,WACjC,IAAM1E,EAAQyE,EAAOE,WACP,OAAV3E,GAAkBA,EAAM4E,WAC9B,GACF,EAqLQtQ,SAAQ,wCAAE,WAAO0P,GAAU,kFACnB1P,EAAS0P,GAAY,KAAD,sCAC3B,mDAFO,MAQlB,E,0CC/Pe,SAASvC,GAAO/U,GAC3B,OACI,4BACIW,QAASX,EAAMW,QACfD,UAAU,qJAaV,yBAAKA,UAAU,qBACVV,EAAMC,UAIvB,CCnBO,IAAMkY,GAAc1R,sBAAW,SAACzG,EAAOqG,GAC1C,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAE1BG,qBAAU,YACU,IAAZJ,IACAuR,GAAoBC,GAAgBtjB,EAAQ/C,YAC5CsmB,KAER,GAAG,CAACzR,EAAS9R,IAEbmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEMyR,EAAWC,GAAqBzjB,EAAQ/C,WAE9C,OAAI6U,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACV+K,WAAY,QACZI,WAAW,EACXL,SAAUsY,EACVvqB,MAAO,gBACPI,YAAa,oDAEjBsH,SAASC,eAAe,eAGzB,IACX,IAEM0iB,GAAkB,SAACttB,GACrB,IAAI0tB,EAAW,CAAC,EAChB,IACIA,EAAWztB,KAAKF,MAAMC,EACZ,CAAZ,MAAOyd,GAAK,CAEd,MAAM,GAAN,OAAU3S,OAAO6iB,SAASC,OAAO9iB,OAAO6iB,SAASE,SAAQ,eAAOC,mBAC5D7tB,KAAK2D,UAAU8pB,IAEvB,EAEMD,GAAuB,SAACztB,GAC1B,OAAQ,2BACJsY,KAAK,OACLjT,KAAK,iBACLkL,GAAG,iBACHoF,UAAU,4HACVnP,aAAc8mB,GAAgBttB,IAEtC,EAEMqtB,GAAsB,SAACnlB,GACrByC,SAASojB,YACTC,UAAUC,UAAUC,UAAUhmB,GAAMgD,MAChC,WACIb,QAAQmR,IAAI,sCAChB,IACA,SAAU/D,GACNpN,QAAQ1J,MAAM,0CAA2C8W,EAC7D,GAGZ,EAEM8V,GAAsB,WACxBY,YAAW,WACP,IACsBxjB,SAASC,eAAe,kBAChCwjB,QACA,CAAZ,MAAO3Q,GAAK,CAClB,GAAG,IACP,ECrFa4Q,GAAkB3S,sBAAW,SAACzG,EAAOqG,GAC9C,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAAoC7U,IAAM8U,SAAS,IAAG,mBAA/CyS,EAAU,KAAEC,EAAa,KAChC,EAA8BxnB,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAE1BG,qBAAU,WACNqS,EAAcC,GAAiBxkB,EAAQ/C,WAC3C,GAAG,CAAC+C,IAEJmS,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAEA,OAAID,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,kBAAMmZ,GAAczkB,EAAQ/C,UAAWqnB,EAAW,EAC5DjZ,WAAY,cACZH,SAAUoZ,EACVrrB,MAAO,sBACPI,YAAa,2DAEjBsH,SAASC,eAAe,eAGzB,IACX,IAGM4jB,GAAmB,SAACxuB,GACtB,IAII,IAHA,IACIoM,EADAsiB,EAAQ,OAERC,EAAgB,GACZviB,EAASsiB,EAAME,KAAK5uB,IACxB2uB,EAAcnuB,KAAK4L,EAAOrI,OAE9B2qB,EAAQ,OAER,IADA,IAAIG,EAAa,GACTziB,EAASsiB,EAAME,KAAK5uB,IACxB6uB,EAAWruB,KAAK4L,EAAOrI,OAG3B,IADA,IAAI+qB,EAAe,GACVntB,EAAI,EAAGA,EAAIgtB,EAAc/sB,OAAQD,IACtCmtB,EAAatuB,KAAKR,EAAGiB,MAAM0tB,EAAchtB,GAAK,EAAGktB,EAAWltB,KAGhE,IAAM2sB,GADNQ,EAAY,aAAO,IAAIlU,IAAIkU,KACK5R,KAAI,SAAC6R,GACjC,OACI,yBAAK7lB,IAAK6lB,EAAQpZ,UAAU,QACxB,2BAAOgH,QAASoS,EAAQpZ,UAAU,0CAA0CoZ,EAAM,KAClF,2BACIzW,KAAK,OACLjT,KAAM0pB,EACNxe,GAAIwe,EACJpZ,UAAU,4HACViH,YAAY,qBAI5B,IAGIoS,EAAiB,GACjBC,EAAc,GACdC,EAAa,GAEjB,IAmBI,IACSC,EAAT,SAA8BC,EAASC,GACnC,OAAOA,EAAanS,KAAI,SAACoS,GACrB,IAAMC,EAAWC,EAAeJ,GAAStpB,SAASwpB,GAClD,OACI,yBAAKpmB,IAAG,UAAKkmB,EAAO,YAAIE,GAAO3Z,UAAU,2BACrC,2BAAOpF,GAAE,UAAK6e,EAAO,YAAIE,GACrB3Z,UAAU,sBACV2C,KAAK,WACLrS,MAAK,WAAMmpB,EAAO,YAAIE,GACtBnQ,SAAUoQ,EACVE,gBAAgB,EAChBxsB,MAAOssB,EAAW,oCAAsC,GACxD,mBAAkBH,IAEtB,2BAAOzZ,UAAU,2BAA2BgH,QAAO,UAAKyS,EAAO,YAAIE,IAAM,WAAMF,EAAO,YAAIE,IAGtG,GACJ,EArCMI,EAASzvB,KAAKF,MAAMC,GACpBO,EAAaF,OAAOC,KAAKovB,EAAmB,WAAIA,EAAmB,WAAI,CAAC,GACxEjvB,EAAUJ,OAAOC,KAAKovB,EAAgB,QAAIA,EAAgB,QAAI,CAAC,GAC/DhvB,EAASL,OAAOC,KAAKovB,EAAe,OAAIA,EAAe,OAAI,CAAC,GAC5DF,EAAiB,CAAC,WAAc,GAAI,QAAW,GAAI,OAAU,IAGnE,GAAIE,EAAO,eAAgB,CAAC,IACiB,EADlB,cACHA,EAAO,gBAAc,IAAzC,2BAA2C,CAAC,IAAjCC,EAAK,QACRA,EAAMC,WAAW,gBACjBJ,EAA2B,WAAEhvB,KAAKmvB,EAAMjpB,MAAM,KAAK,IAC9CipB,EAAMC,WAAW,aACtBJ,EAAwB,QAAEhvB,KAAKmvB,EAAMjpB,MAAM,KAAK,IAC3CipB,EAAMC,WAAW,aACtBJ,EAAuB,OAAEhvB,KAAKmvB,EAAMjpB,MAAM,KAAK,GACvD,CAAC,+BACL,CAuBAsoB,EAAiBG,EAAqB,aAAc5uB,GACpD0uB,EAAcE,EAAqB,UAAW1uB,GAC9CyuB,EAAaC,EAAqB,SAAUzuB,EAE7B,CAAjB,MAAOmvB,GAAU,CAEnB,IAAMC,EACF,wBAAI5mB,IAAI,mBAAmByM,UAAU,2BAChC,0FAIT,MAAM,GAAN,oBAAW2Y,GAAU,CAAEwB,GAAO,aAAKd,GAAc,aAAKC,GAAW,aAAKC,GAI1E,CAHE,MAAOjrB,GAEL,OADAoG,QAAQmR,IAAIvX,GACL,EACX,CACJ,EAEMwqB,GAAgB,SAACzuB,EAAIsuB,GACvB,IAM6B,EANzByB,EAAgB,CAAC,EACfxvB,EAAa,GACbE,EAAU,GACVC,EAAS,GAEf,cACmB4tB,GAAU,IAA7B,2BAA+B,CAAC,IAArBpT,EAAI,QACPA,EAAKjG,MAAMU,UAAU5U,QAAQ,kBAAoB,GACrD4J,SAASC,eAAesQ,EAAKjG,MAAMC,SAAS,GAAGD,MAAM1E,IAAI4M,UACI,eAArDjC,EAAKjG,MAAMC,SAAS,GAAGD,MAAM,oBAC7B1U,EAAWC,KAAK0a,EAAU,IAAExU,MAAM,KAAK,IACmB,YAArDwU,EAAKjG,MAAMC,SAAS,GAAGD,MAAM,oBAClCxU,EAAQD,KAAK0a,EAAU,IAAExU,MAAM,KAAK,IACsB,WAArDwU,EAAKjG,MAAMC,SAAS,GAAGD,MAAM,qBAClCvU,EAAOF,KAAK0a,EAAU,IAAExU,MAAM,KAAK,IAE/C,CAEA,gCACA4nB,EAAaA,EAAWtoB,QAAO,SAAC/B,GAC5B,OAAuD,IAAhDA,EAAEgR,MAAMU,UAAU5U,QAAQ,kBAAqC,qBAAVkD,EAAEiF,GAClE,KACW7C,SAAQ,SAACyD,GAChB,IAAMrH,EAAOkI,SAASC,eAAed,EAAEZ,KAEvC,OADA6mB,EAAcjmB,EAAEZ,KAAOzG,EAAKwD,MACrBxD,EAAKwD,KAChB,IACA5F,OAAOC,KAAKyvB,GAAe1pB,SAAQ,SAAA6C,GAC/BlJ,EAAKA,EAAG0G,MAAM,KAAD,OAAMwC,EAAG,OAAM8mB,KAAKD,EAAc7mB,GACnD,IACA,IAAMnJ,EAAQE,KAAKF,MAAMC,GAGzB,GAAID,EAAkB,WAAG,CACrB,IAAMkwB,EAAgB5vB,OAAOC,KAAKP,EAAkB,YAC/CiG,QAAO,SAAAkD,GAAG,OAAI3I,EAAWuF,SAASoD,EAAI,IACtCtC,QAAO,SAACspB,EAAKhnB,GAEV,OADAgnB,EAAIhnB,GAAOnJ,EAAkB,WAAEmJ,GACxBgnB,CACX,GAAG,CAAC,GAGRnwB,EAAkB,WAAIkwB,CAC1B,CAEA,GAAIlwB,EAAe,QAAG,CAClB,IAAMowB,EAAa9vB,OAAOC,KAAKP,EAAe,SACzCiG,QAAO,SAAAkD,GAAG,OAAIzI,EAAQqF,SAASoD,EAAI,IACnCtC,QAAO,SAACspB,EAAKhnB,GAEV,OADAgnB,EAAIhnB,GAAOnJ,EAAe,QAAEmJ,GACrBgnB,CACX,GAAG,CAAC,GAGRnwB,EAAe,QAAIowB,CACvB,CAEA,GAAIpwB,EAAc,OAAG,CACjB,IAAMqwB,EAAY/vB,OAAOC,KAAKP,EAAc,QACvCiG,QAAO,SAAAkD,GAAG,OAAIxI,EAAOoF,SAASoD,EAAI,IAClCtC,QAAO,SAACspB,EAAKhnB,GAEV,OADAgnB,EAAIhnB,GAAOnJ,EAAc,OAAEmJ,GACpBgnB,CACX,GAAG,CAAC,GAGRnwB,EAAc,OAAIqwB,CACtB,QAGOrwB,EAAM,gBACNA,EAAM,eAEb,IAAIswB,EAAS,UAAMvlB,OAAO6iB,SAASC,OAAO9iB,OAAO6iB,SAASE,SAAQ,eAAOC,mBAAmB7tB,KAAK2D,UAAU7D,KAC3G+K,OAAOuR,KAAKgU,EAAW,SAC3B,ECpNaC,GAAiB5U,sBAAW,SAACzG,EAAOqG,GAC7C,IAAMtR,EAAU2R,qBAAWC,GAC3B,EAA8B7U,IAAM8U,UAAS,WAAQ,OAAO,CAAM,IAAE,mBAA7DC,EAAO,KAAEC,EAAU,KAC1B,EAAwBhV,IAAM8U,SAAS,MAAK,mBAArCvD,EAAI,KAAEiY,EAAO,KAEpBpU,8BAAoBb,GAAK,WACrB,MAAO,CACHc,UAAW,kBAAMC,GAAM,EACvBjS,MAAO,kBAAMA,GAAO,EAE5B,IAEA,IAAMiS,EAAO,WACTN,GAAW,EACf,EAEM3R,EAAQ,WACV2R,GAAW,EACf,EAUMyU,EAAUC,IARG,SAACxsB,GAChBssB,EAAQtsB,EAAE+gB,OAAO/e,MACrB,IAEgB,WACZ,OAAOqS,CACX,IAIA,OAAIwD,EACOiB,IAASC,aACZ,kBAAC,EAAc,CACX5H,SAAUhL,EACVkL,SAAU,WACN,IAAItV,EAAG0wB,GAAYpY,GACf/Q,EAAS,CAAC,EACdA,EAASvH,EAAU,OAAGA,EACtBgK,EAAQrB,oBAAe7B,GACvBkD,EAAQtB,YAAYnB,GACpByC,EAAQvB,qBAA8B,OAAT6P,GAC7BnC,EAAYlW,KAAK2D,UAAU5D,EAAI,KAAM,MAAOqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GAC9DpC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBxH,KAAK2D,UAAU5D,EAAI,KAAM,MAAM,YAC3D,IAAG,SAAAyX,GACCpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EAChB,IACArN,GACJ,EACA8K,SAAUsb,EACVnb,WAAqB,OAATiD,EAAgB,YAAc,YAC1CrV,MAAO,qBACPI,YAAa,qIAEjBsH,SAASC,eAAe,eAGzB,IACX,IAEM6lB,GAAY,SAACE,EAAYC,GAC3B,OAAO,oCACH,2BAAOjU,QAAQ,OAAOhH,UAAU,0CAAwC,SACxE,yBAAKA,UAAU,YACX,4BAAQA,UAAU,6JAA6JpF,GAAG,OAAOsM,SAAU8T,EAAY1qB,MAAO2qB,KAClN,4BAAQ3qB,MAAM,MAAI,qBAClB,4BAAQA,MAAM,MAAI,gBAEtB,yBAAK0P,UAAU,uFACX,kBAAC,KAAW,CAAC8K,MAAM,cAG1BoQ,GAAU,KAAM,eAAgB,WAAY,MAAO,aACnDA,GAAU,QAAS,cAAe,cAAe,QACjDA,GAAU,OAAQ,oCAAqC,aAAc,OACtE,2BAAOlU,QAAQ,oBAAoBhH,UAAU,0CAAwC,gBACrF,8BAAUpF,GAAG,oBAAoB+R,KAAK,IAClC3M,UAAU,uJASViH,YAAY,gDAChB,2BAAOD,QAAQ,iBAAiBhH,UAAU,0CAAwC,aAClF,yBAAKA,UAAU,YACX,4BAAQA,UAAU,6JAA6JpF,GAAG,kBAC9K,yCACA,yCACA,0CACA,0CACA,uCACA,0CACA,2CAEJ,yBAAKoF,UAAU,uFACX,kBAAC,KAAW,CAAC8K,MAAM,cAInC,EAEMoQ,GAAY,SAAC1O,EAAOvF,EAAarM,EAAI+H,EAAM8J,GAC7C,OAAO,yBAAKlZ,IAAKqH,EAAIoF,UAAU,QAC3B,2BAAOgH,QAASpM,EAAIoF,UAAU,0CAA0CwM,EAAK,KAC7E,2BACI9c,KAAMkL,EACNA,GAAIA,EACJoF,UAAU,4HACViH,YAAaA,EACbtE,KAAMA,EACN8J,UAAyB,cAAdA,IAGvB,EAEMsO,GAAc,SAACpY,GACjB,IAAI/H,EAAK5F,SAASC,eAAe,YAAY3E,MACzChD,EAAQ0H,SAASC,eAAe,eAAe3E,MAC/C6qB,EAAOnmB,SAASC,eAAe,cAAc3E,MAE7C8qB,EAAgBpmB,SAASC,eAAe,qBAAqB3E,MAC7D+qB,EAAarmB,SAASC,eAAe,kBAAkB3E,MAEvDgrB,EAAQ,CAEZA,WAAoB,qCACpBA,EAAa,MAAc,KAAVhuB,EAAeA,EAAQ,gBAE3B,OAATqV,IACA2Y,EAAM,SAAW,iBAGV,KAAP1gB,IACA0gB,EAAU,GAAW,KAAP1gB,EAAYA,EAAK,wBAGtB,KAATugB,IACAG,EAAY,KAAa,KAATH,EAAcA,EAAO,KAGnB,KAAlBC,IACAE,EAAmB,YAAIF,GAG3B,IAAIxvB,EAAsB,CAAC,EAU3B,OATAA,EAAoB,GAAD,OAAIyvB,EAAU,QAAS,CAAE7rB,OAAQ6rB,GAEpDC,EAA2B,oBAAI1vB,EAC/B0vB,EAAgB,SAAC,UAAMD,EAAU,OAEjCC,EAAkB,WAAI,CAAC,EACvBA,EAAe,QAAI,CAAC,EACpBA,EAAc,OAAI,CAAC,EAEZA,CACX,E,cClLA,26MAyBe,SAASC,KACtB,IAAMlnB,EAAU2R,qBAAWC,GAIrB6C,EAAcC,uBAAY,WAC9B,MACE,4BAA6B5T,QAAU,uBAAwBA,MAEnE,GAAG,IAEGqmB,EAAgBzS,sBAAW,uBAAC,kFAC3B1U,EAAQ7C,WAAW,CAAD,yCACd,GAAI,OAGqD,MAAhE,iEAAiE,EAAD,OACrD2D,OAAOsmB,QADlB,kEAC+B,KAAD,8EAC/B,CAACpnB,EAAQ7C,aAQN0X,EAAOH,uBAAY,SAAClU,GACxB,OAAOA,EAAKC,KAAOD,EAAKC,OAASqB,EAAetB,EAClD,GAAG,IAEG6mB,EAAW3S,sBAAW,wCAC1B,WAAOlU,EAAMnD,GAAU,qGAEJwX,EAAKrU,GAAK,OAArBxK,EAAE,QACFuH,EAAW,CAAC,GAEL,KAAOiD,EAAKnF,WADJyB,IAAfO,EAC2BA,EAGApH,KAAKF,MAAMC,GAE1CmW,EAAYnW,EAAIqK,QAAQmR,IAAK,CAAC,GAAGtQ,MAAK,SAAAkB,GACpCpC,EAAQrB,oBAAe7B,GACvBkD,EAAQtB,YAAYnB,GACpByC,EAAQpC,cAAcP,GAAcmD,EAAKnF,MACzC2E,EAAQtC,kBAAiB,GACzBsC,EAAQpB,wBAAwBwD,GAChCpC,EAAQvC,gBAAgBzH,EAC1B,IAAG,SAAAyX,GACDpN,QAAQmR,IAAI,SACZnR,QAAQmR,IAAI/D,EACd,IAAE,gDAGIkG,EAAG,mCAA+B3T,EAAQ/C,WAChDoD,QAAQ1J,MAAMgd,EAAI,EAAD,IAEjBoB,MAAMpB,GAAK,yDAEd,qDA7ByB,GA8B1B,CAAC3T,EAAS6U,IASNC,EAAWJ,sBAAW,wCAC1B,WAAOjB,GAAC,8FACM0T,IAAe,qEAItB1S,IAAc,CAAD,gCACGpT,IAAe,KAAD,EAAvB,KAAJb,EAAI,QACD,CAAD,iCACA6mB,EAAS7mB,GAAM,KAAD,gEAMHK,IAAgB,KAAD,GAAxB,OAAVxD,EAAU,iBACSA,EAAWkD,UAAU,KAAD,GAA7B,OAAJC,EAAI,iBACJ6mB,EAAS7mB,EAAMnD,GAAY,KAAD,sDAE1BsW,EAAM,+CACZtT,QAAQ1J,MAAMgd,EAAI,EAAD,IACjBoB,MAAMpB,GAAK,2DAEd,mDAvByB,GAwB1B,CAAC0T,EAAUF,EAAe1S,IAGtB6S,EAAY5S,sBAAW,wCAC3B,WAAOrX,EAAYkqB,GAAQ,8EACrBlqB,EAAWmqB,aAAa,CAAD,+BACJnqB,EAAWmqB,eAAe,KAAD,EAAlC,OAANC,EAAM,gBACNA,EAAOtnB,MAAM,EAAGonB,GAAU,KAAD,kBACzBE,EAAOrnB,QAAQ,KAAD,oDAIC/C,EAAW4C,iBAAiB,KAAD,GAApC,OAARC,EAAQ,iBACRA,EAASC,MAAMonB,GAAU,KAAD,oBACxBrnB,EAASE,QAAQ,KAAD,GAGtB+jB,YAAW,WACTnkB,EAAQvC,gBAAgB8pB,EAAU,aAClCvnB,EAAQtC,kBAAiB,EAC3B,GAAG,KAAK,4CACT,qDAlB0B,GAmB3B,CAACsC,IAGG0nB,EAAchT,uBAAY,SAACiT,EAAUJ,GACzC,IAEIK,EAFEC,EAAYlnB,SAASC,eAAe,aACtCoT,EAAS,CAAC,EAEd,IAGE4T,GADAA,GADA5T,EAAS/d,KAAKF,MAAMwxB,IACC,IAAKvT,EAAc,OACtB5c,QAAQ,MAAO,IAAM,SAGzC,CAFE,MAAO6C,GACPoG,QAAQ1J,MAAMsD,EAChB,CACA0tB,EAAWA,GAAYC,EACvB,IACMpnB,EAAO,IAAIsnB,KAAK,CAACP,GAAW,GADrB,CAAEjZ,KAAM,wBAErBuZ,EAAUlsB,KAAOmF,OAAO2U,IAAIsS,gBAAgBvnB,GAC5CqnB,EAAUG,aAAa,WAAYL,GACnCE,EAAUhmB,OACZ,GAAG,IAEGomB,EAAavT,sBAAW,uBAAC,gGACxBD,IAAc,CAAD,eAC6B,OAA7CiT,EAAY1nB,EAAQ3E,KAAM2E,EAAQ/C,WAAW,mDAM1BirB,IAAmB,KAAD,EAArC7qB,EAAU,8BAGa,OAHb,yBAEJsW,EAAM,+CACZtT,QAAQ1J,MAAMgd,EAAI,EAAD,IAAM,kBAChBoB,MAAMpB,IAAI,mCAIX2T,EAAUjqB,EAAY2C,EAAQ/C,WAAW,KAAD,GAC1C0D,SAASC,eAAe,cACtBjF,EAAOgF,SAASC,eAAe,YAAY3E,MACb,kBAAvB+D,EAAQ3C,cACbE,EAAWyC,EAAQzC,UACd5B,GAAQ0B,EACjB2C,EAAQrB,eAAepB,KAG3ByC,EAAQpC,cAAcP,GACtB2C,EAAQtC,kBAAiB,GAAO,mDAE1BiW,EAAM,gDACZtT,QAAQ1J,MAAMgd,EAAI,EAAD,IACjBoB,MAAMpB,GAAK,iEAEZ,CAAC+T,EAAajT,EAAazU,EAASsnB,IAEjCa,EAAWzT,sBAAW,uBAAC,iGAEpB1U,EAAQ3C,WAAW,CAAD,+BACR4qB,IAAa,KAAD,0DAErBX,EAAUtnB,EAAQ3C,WAAY2C,EAAQ/C,WAAW,KAAD,EACtD8X,MAAM,cAAa,kDAEbpB,EAAM,gDACZtT,QAAQ1J,MAAMgd,EAAI,EAAD,IACjBoB,MAAMpB,GAAK,0DAEZ,CAAC3T,EAASioB,EAAYX,IAEnBY,EAAgB,wCAAG,4FAEnB,uBAAwBpnB,QAAM,gBAQ/B,OAPKsnB,EAAO,CACXpnB,MAAO,CACL,CACE3H,YAAa,oBACb4H,OAAQ,CAAE,sBAAuB,CAAC,UAAW,aAGjD,EAAD,OAEYH,OAAOunB,mBAAmBD,GAAM,KAAD,EAeI,KAAD,mCAfH,OAa7C,OATKA,EAAO,CACX9Z,KAAM,YACNga,QAAS,CACP,CACEjvB,YAAa,oBACbkvB,WAAY,CAAC,UAAW,SACxBC,UAAW,CAAC,0BAGhB,EAAD,OAEY1nB,OAAOM,wBAAwBgnB,GAAK,2CAClD,kBA5BqB,mCA+BtBlW,qBAAU,WACR,GAAIpR,OAAO6iB,SAAS8E,OAAO1xB,QAAQ,OAAS,EAAG,CAC7C,IACMf,EADM,IAAIyf,IAAI3U,OAAO6iB,SAAShoB,MACrB+sB,aAAalY,IAAI,MAChC,IACE,IAAMkT,EAAWztB,KAAKF,MAAMC,GACF,kBAAtB0tB,EAAS,UACX1jB,EAAQrC,oBAAmB,GAE7BqC,EAAQvC,gBAAgBxH,KAAK2D,UAAU8pB,EAAU,KAAM,GAGzD,CAFE,MAAO/sB,GACPoe,MAAM,yDACR,CACF,CAGF,GAAG,IAEH7C,qBAAU,WACR,IAAMyW,EAAkB,SAAC1uB,IAEpB6G,OAAOkjB,UAAU4E,SAAStY,MAAM,OAASrW,EAAE4uB,QAAU5uB,EAAE6uB,UAC9C,MAAV7uB,EAAEiF,MAEFjF,EAAE8uB,iBACF9uB,EAAE+uB,kBACFb,MAGCrnB,OAAOkjB,UAAU4E,SAAStY,MAAM,OAASrW,EAAE4uB,QAAU5uB,EAAE6uB,UAC9C,MAAV7uB,EAAEiF,MAEFjF,EAAE8uB,iBACF9uB,EAAE+uB,kBACFlU,MAGChU,OAAOkjB,UAAU4E,SAAStY,MAAM,OAASrW,EAAE4uB,QAAU5uB,EAAE6uB,UAC9C,MAAV7uB,EAAEiF,MAEFjF,EAAE8uB,iBACF9uB,EAAE+uB,kBACFC,IAEJ,EAeA,OAZAtoB,SAASsB,iBAAiB,UAAW0mB,GAAiB,GACtD7nB,OAAOooB,eAAiB,SAAUhnB,GAChC,IAAI5B,EACF,+DAOF,MANoB,oBAAT4B,IACTA,EAAQpB,OAAOoB,OAEbA,IACFA,EAAMinB,YAAc7oB,GAEfA,CACT,EACO,WAELK,SAASyoB,oBAAoB,UAAWT,GAAiB,EAC3D,CACF,GAAG,CAAC7T,EAAUqT,EAAUnoB,IAExB,IAAMqpB,EAAkBtsB,IAAM2c,SAGxB4P,EAAcvsB,IAAM2c,SAGpB6P,EAAiBxsB,IAAM2c,SACvBuP,EAAqB,WAAQM,EAAe1P,QAAQzH,WAAY,EAEtE,OACE,oCACE,4BAAQzG,UAAU,sDAChB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,YAAY6d,IAAKC,KAAKC,IAAI,QACzC,yBAAK/d,UAAU,QACf,gCACA,yBAAKA,UAAU,WAAW6d,IAAKG,KAAMD,IAAI,OAAO9d,QAAS,kBAAM9K,OAAOuR,KAAK,qCAAqC,SAAS,MAG3H,yBAAK1G,UAAU,uBACb,kBAACqU,GAAM,CAACpU,QAhBQ,WAAQ0d,EAAYzP,QAAQzH,WAAY,GAgBvB,SACjC,kBAAC4N,GAAM,CAACpU,QAASqd,GAAmB,OACpC,kBAACjJ,GAAM,CAACpU,QAASkJ,GAAS,QACxBL,KAAkB,kBAACuL,GAAM,CAACpU,QAASuc,GAAS,QAC9C,kBAACnI,GAAM,CAACpU,QAASqc,GAAW,YAC1BjoB,EAAQ1C,gBAAkB0C,EAAQ5C,eAAiB,kBAAC4iB,GAAM,CAACpU,QAxBzC,WAAQyd,EAAgBxP,QAAQzH,WAAY,GAwB0B,mBAG9F,kBAACiS,GAAe,CAAC/S,IAAK+X,IACtB,kBAACjG,GAAW,CAAC9R,IAAKgY,IAClB,kBAAChD,GAAc,CAAChV,IAAKiY,IACrB,2BACE5d,UAAU,MACV2C,KAAK,OACL/H,GAAG,YACH6O,MAAO,CAAEtD,QAAS,UAEpB,uBAAGnG,UAAU,MAAMpF,GAAG,YAAY5K,KAAK,IAAIyZ,MAAO,CAAEtD,QAAS,SAAS,YAK5E,CCvSe8X,OAvCG,SAAC3e,GACf,IA8BoB4e,EA9Bd7pB,EAAU2R,qBAAWC,GACvBkY,EAAY,EACZC,EAAkB,EAClBC,EAAe,EACfC,EAAc,EAClB,IACI,IAAMl0B,EAAQE,KAAKF,MAAMiK,EAAQ/C,WAC3BmT,GAAO,IAAI8Z,aAAcC,OAAOl0B,KAAK2D,UAAU7D,IAAQ6B,OAC7DkyB,GAsBgBD,EAtBWzZ,GAuBpB,KAAayZ,EAAQ,SACxBA,EAAQ,SAAgBA,EAAQ,MAAMO,QAAQ,GAAK,OACnDP,EAAQ,YAAmBA,EAAQ,SAASO,QAAQ,GAAK,QACrDP,EAAQ,YAAYO,QAAQ,GAAK,OAzBzCL,EAAkBh0B,EAAMQ,WAAaF,OAAOC,KAAKP,EAAMQ,YAAYqB,OAAS,EAC5EoyB,EAAej0B,EAAMQ,WAAaF,OAAOC,KAAKP,EAAMU,SAASmB,OAAS,EACtEqyB,EAAcl0B,EAAMQ,WAAaF,OAAOC,KAAKP,EAAMW,QAAQkB,OAAS,CAGpE,CADJ,MAAOqC,GACH,CAEJ,OAAQ,oCACJ,4BAAQ0R,UAAU,wEACd,yBAAKA,UAAU,mDACX,yBAAKA,UAAU,QAAM,eAAcoe,GACnC,yBAAKpe,UAAU,QAAM,YAAWqe,GAChC,yBAAKre,UAAU,QAAM,WAAUse,GAC/B,yBAAKte,UAAU,kBAAgB,SAAQme,GACvC,yBAAKne,UAAU,yBAAuB,YAAW0e,QAAyC,MAAI,2BAAG,uBAAG1uB,KAAK,qCAAqCqf,OAAO,SAASlgB,IAAI,uBAAqB,wBAKvM,EChCawvB,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAyB,yBACzBC,GAAuB,uBACvBC,GAAsB,sBACtBC,GAA+B,+BAC/BC,GAA0B,0BAC1BC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAA4B,4BA4KnCC,GAAiB,SAAC5I,EAAO5J,GAC7B,OAAQA,EAAOtK,MACb,KAAKgc,GACH,OA7KyB,SAACrtB,EAAWulB,GACzC,IAAIjlB,EAASilB,EAAMjlB,SACnB,IAEE,GAAIA,GAMC,GAAGA,GAAuC,kBAArBilB,EAAMnlB,WAAwB,CACtD,IAAI4Y,EAAShgB,KAAKF,MAAMkH,GACxB,GAAG0D,SAASC,eAAe,YAAY,CACrC,IAAIjF,EAAMgF,SAASC,eAAe,YAAY3E,MACpC,KAAPN,EACH4B,EAAS0Y,EAAgB,OAAG,iBAAiBA,EAG3C1Y,EAAS5B,GAAMsa,CAEnB,CACF,MAjBa,CACX,IAAIA,EAAShgB,KAAKF,MAAMkH,IACxBM,EAAS,CAAC,GACD0Y,EAAgB,OAAG,iBACbA,CACjB,CAgBF,CAHC,MAAMhc,GACL,IAAItD,EAAQsD,EAAEqG,QACdD,QAAQmR,IAAI7a,EACd,CACA,OAAO,2BAAK6rB,GAAK,IAAEvlB,YAAWE,YAAY,EAAMI,SAASA,GAC3D,CAkJa8tB,CAAuBzS,EAAO3b,UAAWulB,GAClD,KAAK+H,GACH,OA3BmB,SAACptB,EAAYqlB,GACpC,OAAO,2BAAKA,GAAK,IAAErlB,WAAYA,GACjC,CAyBaO,CAAiBkb,EAAOzb,WAAYqlB,GAC7C,KAAKgI,GACH,OAzBqB,SAACptB,EAAcolB,GACxC,OAAO,2BAAKA,GAAK,IAAEplB,aAAcA,GACnC,CAuBaO,CAAmBib,EAAOxb,aAAcolB,GACjD,KAAKiI,GACH,IAAMa,EAvBoB,SAACjuB,EAAYmlB,GAC3C,OAAO,2BAAKA,GAAK,IAAEnlB,WAAYA,GACjC,CAqBuBkuB,CAAwB3S,EAAOvb,WAAYmlB,GAC5D,OAAO8I,EACT,KAAKZ,GACH,OAzJoB,SAAC3sB,EAAMykB,GAC/B,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WAEjC,GADAoD,QAAQmR,IAAIzT,GACM,UAAdA,EAAKuQ,KACPrR,EAAUlF,MAAMsE,SAAQ,SAACjC,EAASzC,GACJ,kBAAhByC,EAAQmF,GAChBtC,EAAUlF,MAAMqqB,OAAOzqB,EAAG,IAExByC,EAAQuB,OAASoC,EAAKA,KAAKpC,OAA8C,IAAtCvB,EAAQmF,GAAGxI,QAAQgH,EAAKA,KAAKwB,KAClEnF,EAAQmF,GAAG6iB,OAAOhoB,EAAQmF,GAAGxI,QAAQgH,EAAKA,KAAKwB,IAAK,GAE5B,IAAtBnF,EAAQmF,GAAG3H,QACbqF,EAAUlF,MAAMqqB,OAAOzqB,EAAG,GAGhC,SAEA,IACEsF,EAAUc,EAAKuQ,MAAMvQ,EAAKuV,UAAUvb,MAAMsE,SAAQ,SAACjC,EAASzC,GAC9B,kBAAhByC,EAAQmF,GACdnF,EAAQuB,OAASoC,EAAKA,KAAKpC,MAC7BsB,EAAUc,EAAKuQ,MAAMvQ,EAAKuV,UAAUvb,MAAMqqB,OAAOzqB,EAAG,IAGlDyC,EAAQuB,OAASoC,EAAKA,KAAKpC,OAA8C,IAAtCvB,EAAQmF,GAAGxI,QAAQgH,EAAKA,KAAKwB,KAClEnF,EAAQmF,GAAG6iB,OAAOhoB,EAAQmF,GAAGxI,QAAQgH,EAAKA,KAAKwB,IAAK,GAE5B,IAAtBnF,EAAQmF,GAAG3H,QACbqF,EAAUc,EAAKuQ,MAAMvQ,EAAKuV,UAAUvb,MAAMqqB,OAAOzqB,EAAG,GAG1D,GAGF,CAFE,MAAOsC,GACP8a,MAAM,2CACR,CAEF,OAAO,2BAAKyN,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,IAChE,CAoHauuB,CAAkB5S,EAAO7a,KAAMykB,GACxC,KAAKmI,GACD,OApHkB,SAAC5wB,EAAOyoB,GAChC,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WAC/B,IACEA,EAAiB,MAAEmlB,OAAOroB,EAAM,EAGlC,CAFE,MAAOE,GACP8a,MAAM,2CACR,CACF,IAAIxX,EAASilB,EAAMjlB,SACnB,GAAGA,GAAuC,kBAArBilB,EAAMnlB,YACtBsD,SAASC,eAAe,YAAY,CACrC,IAAIjF,EAAMgF,SAASC,eAAe,YAAY3E,MACpC,KAAPN,EACH4B,EAASN,EAAiB,OAAG,iBAAiBA,EAG5CM,EAAS5B,GAAMsB,CAEnB,CAEF,OAAO,2BAAKulB,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,GAAGM,SAASA,GAC5E,CAgGekuB,CAAkB7S,EAAO1a,KAAMskB,GAC1C,KAAKuI,GACH,OAhG0B,SAACxsB,EAAMmtB,EAAgBlJ,GACrD,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WACjC,WACSA,EAAUsB,GAAMmtB,EAGzB,CAFE,MAAOzxB,GACP8a,MAAM,2CACR,CACA,OAAO,2BAAKyN,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,IAChE,CAwFaqB,CAAwBsa,EAAOra,KAAMqa,EAAO8S,eAAgBlJ,GACrE,KAAKoI,GACH,OAxFyB,SAAC7sB,EAAMykB,GACpC,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WAC3Bmc,EAAWnc,EAAU1G,WAAWwH,EAAKuV,UAK3C,YAJuBxW,IAAnBsc,EAASrhB,QACXqhB,EAASrhB,MAAQ,IAEnBqhB,EAASrhB,MAAMvB,KAAKuH,EAAKA,MAClB,2BAAKykB,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,IAChE,CAgFa0uB,CAAuB/S,EAAO7a,KAAMykB,GAC7C,KAAKqI,GACH,OA/DuB,SAACzsB,EAAQokB,GACpC,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WAC3B2b,EAAS3b,EAAUxG,QAAQ2H,EAAOmV,YAMxC,OALAlT,QAAQmR,IAAI,cAAeoH,EAAO7gB,YACb+E,IAAjB8b,EAAO7gB,QACT6gB,EAAO7gB,MAAQ,IAEjB6gB,EAAO7gB,MAAMvB,KAAK4H,EAAOL,MAClB,2BAAKykB,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,IAChE,CAsDa2uB,CAAqBhT,EAAOxa,OAAQokB,GAC7C,KAAKsI,GACH,OAtDsB,SAAC1sB,EAAQokB,GACnC,IAAIvlB,EAAYhH,KAAKF,MAAMysB,EAAMvlB,WAC3BiF,EAAQjF,EAAUvG,OAAO0H,EAAOoV,WAKtC,YAJoB1W,IAAhBoF,EAAMnK,QACRmK,EAAMnK,MAAQ,IAEhBmK,EAAMnK,MAAMvB,KAAK4H,EAAOL,MACjB,2BAAKykB,GAAK,IAAEvlB,UAAWhH,KAAK2D,UAAUqD,EAAW,KAAM,IAChE,CA8Ca4uB,CAAoBjT,EAAOxa,OAAQokB,GAC5C,KAAKwI,GACH,OAlCuB,SAAC1tB,EAAgBklB,GAC5C,OAAO,2BAAKA,GAAK,IAAEllB,eAAgBA,GACrC,CAgCamB,CAAqBma,EAAOtb,eAAgBklB,GACrD,KAAKyI,GACH,OAtFc,SAACj1B,EAAIwsB,GACvB,IAAIsJ,EAAmB,CAAC,EACpBvuB,EAAUilB,EAAMjlB,SAQpB,OALGuuB,OADahvB,IAAbS,EACkBvH,EAGDK,OAAO01B,OAAOxuB,EAAUvH,GAErC,2BAAKwsB,GAAK,IAAEjlB,SAAUuuB,GAC/B,CA2EaptB,CAAYka,EAAOrb,SAASilB,GACrC,KAAK0I,GACH,OA3EiB,SAACl1B,EAAIwsB,GAC1B,OAAO,2BAAKA,GAAK,IAAEjlB,SAAUvH,GAC/B,CAyEa2I,CAAeia,EAAOrb,SAASilB,GACxC,KAAK2I,GACH,OApC0B,SAAC3tB,EAAmBglB,GAClD,OAAO,2BAAKA,GAAK,IAAEhlB,qBAErB,CAiCaoB,CAAwBga,EAAOpb,kBAAmBglB,GAC3D,QACE,OAAOA,EAEb,EC3HewJ,GA1FK,SAAA/gB,GAClB,MAAiCghB,qBAAWb,GAAgB,CAAEnuB,UAAW,GAAIC,MAAO,OAASM,kBAAmB,KAAI,mBAA7G0uB,EAAY,KAAEC,EAAQ,KAuD7B,OACE,kBAAC,EAAeC,SAAQ,CACtBnwB,MAAO,CACLgB,UAAWivB,EAAajvB,UACxBC,MAAOgvB,EAAahvB,MACpBC,WAAY+uB,EAAa/uB,WACzBC,aAAc8uB,EAAa9uB,aAC3B/B,KAAM6wB,EAAa7wB,KACnBgC,WAAY6uB,EAAa7uB,WACzBC,eAAgB4uB,EAAa5uB,eAC7BC,SAAU2uB,EAAa3uB,SACvBC,kBAAmB0uB,EAAa1uB,kBAChCC,gBAjEkB,SAACR,EAAWgO,GAClCkhB,EAAS,CAAE7d,KAAMgc,GAAmBrtB,UAAWA,GACjD,EAgEMS,iBA9DmB,SAAAP,GACvBgvB,EAAS,CAAE7d,KAAMic,GAAmBptB,WAAYA,GAClD,EA6DMQ,mBA3DqB,SAAAP,GACzB+uB,EAAS,CAAE7d,KAAMkc,GAAsBptB,aAAcA,GACvD,EA0DMQ,cAxDgB,SAAAP,GACpB8uB,EAAS,CAAE7d,KAAMmc,GAAiBptB,WAAYA,GAChD,EAuDMS,WArDa,SAAAC,GACjBouB,EAAS,CAAE7d,KAAMoc,GAAqB3sB,KAAMA,GAC9C,EAoDME,WAlDa,SAAAC,GACjBiuB,EAAS,CAAE7d,KAAMqc,GAAqBzsB,KAAMA,GAC9C,EAiDMF,QA/CU,SAAAD,GACdouB,EAAS,CAAE7d,KAAMsc,GAAwB7sB,KAAMA,GACjD,EA8CMI,cA5CgB,SAAAC,GACpB+tB,EAAS,CAAE7d,KAAMuc,GAAsBzsB,OAAQA,GACjD,EA2CMC,aA1Ce,SAAAD,GACnB+tB,EAAS,CAAE7d,KAAMwc,GAAqB1sB,OAAQA,GAChD,EAyCME,wBAxC0B,SAACC,EAAMmtB,GACrCS,EAAS,CAAE7d,KAAMyc,GAA8BxsB,OAAMmtB,kBACvD,EAuCMjtB,qBAtCuB,SAAAnB,GAC3B6uB,EAAS,CAAE7d,KAAM0c,GAAyB1tB,eAAgBA,GAC5D,EAqCMoB,YAnCc,SAAAnB,GAClB4uB,EAAS,CAAE7d,KAAM2c,GAAe1tB,SAAUA,GAC5C,EAkCMoB,eAhCiB,SAAApB,GACrB4uB,EAAS,CAAE7d,KAAM4c,GAAkB3tB,SAAUA,GAC/C,EA+BMqB,wBA7ByB,SAAApB,GAC3B2uB,EAAS,CAAC7d,KAAM6c,GAA2B3tB,kBAAmBA,GAClE,IA+BKyN,EAAMC,SAGb,EC1DMmhB,GAAc,SAACjyB,EAASqI,GAC1B,IAAI6pB,EACEC,EAAQ5rB,SAASC,eAAe,SAChC4rB,EAAS7rB,SAASC,eAAe,UAEjC6rB,EAAc,SAACxyB,GACjB,IAAIyyB,EAAQ,CACRna,EAAGtY,EAAE0yB,QAAUL,EAAGryB,EAAE0yB,QACpB7sB,EAAG7F,EAAE2yB,QAAUN,EAAGryB,EAAE2yB,SAGN,MAAdnqB,IACAiqB,EAAMna,EAAIsa,KAAKC,IAAID,KAAKE,IAAIL,EAAMna,GAAI+Z,EAAGU,YACrCV,EAAGW,aAEP7yB,EAAQgb,MAAM8X,KAAOZ,EAAGa,WAAaT,EAAMna,EAAI,KAC/Cga,EAAMnX,MAAMyG,MAASyQ,EAAGU,WAAaN,EAAMna,EAAK,KAChDia,EAAOpX,MAAMyG,MAASyQ,EAAGW,YAAcP,EAAMna,EAAK,KAE1D,EAgBAnY,EAAQgzB,YAdY,SAACnzB,GACjBqyB,EAAK,CACDryB,IACAkzB,WAAY/yB,EAAQ+yB,WACpBE,UAAWjzB,EAAQizB,UACnBL,WAAYT,EAAMe,YAClBL,YAAaT,EAAOc,aAExB3sB,SAAS4sB,YAAcd,EACvB9rB,SAAS6sB,UAAY,WACjB7sB,SAAS4sB,YAAc5sB,SAAS6sB,UAAY,IAChD,CACJ,CAGJ,EAEeC,GAhEH,SAACxiB,GAET,OADAiH,qBAAU,WAAQma,GAAY1rB,SAASC,eAAe,aAAc,IAAM,GAAG,CAACqK,IAE1E,kBAAC,GAAW,KACR,0BAAMU,UAAU,iCACZ,kBAACub,GAAS,MACV,yBAAKvb,UAAU,yDACX,yBAAKA,UAAU,SAASpF,GAAG,UAAS,kBAAC6W,GAAQ,OAC7C,yBAAK7W,GAAG,cACR,yBAAKoF,UAAU,SAASpF,GAAG,SAAQ,kBAAC,GAAmB,QAE3D,kBAAC,GAAS,MACV,yBAAKA,GAAG,gBAIxB,ECdMmnB,GAAcC,QACW,cAA7B7sB,OAAO6iB,SAASiK,UAEe,UAA7B9sB,OAAO6iB,SAASiK,UAEhB9sB,OAAO6iB,SAASiK,SAAStd,MACvB,2DAsCN,SAASud,GAAgBC,EAAOC,GAC9B/J,UAAUgK,cACPC,SAASH,GACT5sB,MAAK,SAAAgtB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5L,QACfwB,UAAUgK,cAAcO,YAI1BluB,QAAQmR,IACN,iHAKEuc,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlB7tB,QAAQmR,IAAI,sCAGRuc,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,IAIzB,EACF,CACF,IACCQ,OAAM,SAAA/3B,GACL0J,QAAQ1J,MAAM,4CAA6CA,EAC7D,GACJ,CC3FAjB,EAAQ,KAAoBi5B,QAE5B5b,IAAS6b,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,GAAG,OAENluB,SAASC,eAAe,SDSnB,SAAkBmtB,GACvB,GAA6C,kBAAmB/J,UAAW,CAGzE,GADkB,IAAIvO,IAAI4U,WAAwBvpB,OAAO6iB,SAAShoB,MACpDioB,SAAW9iB,OAAO6iB,SAASC,OAIvC,OAGF9iB,OAAOmB,iBAAiB,QAAQ,WAC9B,IAAM6rB,EAAK,UAAMzD,WAAsB,sBAEnCqD,KAgEV,SAAiCI,EAAOC,GAEtCzL,MAAMwL,EAAO,CACXgB,QAAS,CAAE,iBAAkB,YAE5B5tB,MAAK,SAAA8U,GAEJ,IAAM+Y,EAAc/Y,EAAS8Y,QAAQte,IAAI,gBAEnB,MAApBwF,EAASgZ,QACO,MAAfD,IAA8D,IAAvCA,EAAYh4B,QAAQ,cAG5CitB,UAAUgK,cAAciB,MAAM/tB,MAAK,SAAAgtB,GACjCA,EAAagB,aAAahuB,MAAK,WAC7BJ,OAAO6iB,SAASwL,QAClB,GACF,IAGAtB,GAAgBC,EAAOC,EAE3B,IACCW,OAAM,WACLruB,QAAQmR,IACN,gEAEJ,GACJ,CA1FQ4d,CAAwBtB,EAAOC,GAI/B/J,UAAUgK,cAAciB,MAAM/tB,MAAK,WACjCb,QAAQmR,IACN,4GAGJ,KAGAqc,GAAgBC,EAAOC,EAE3B,GACF,CACF,CCjCAC,E","file":"static/js/main.8a896035.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/editdor.6cac600d.png\";","module.exports = __webpack_public_path__ + \"static/media/WoT.89768410.png\";"," /**\n  * This file contains functions, which are required by the core package as\n  * well as by the assertions package\n  */\n\n// A special JSON validator that is used only to check whether the given object has duplicate keys.\n// The standard library doesn't detect duplicate keys and overwrites the first one with the second one.\n// TODO: replace with jsonlint ??\nconst jsonValidator = require('json-dup-key-validator')\n\n// This is used to validate if the multi language JSON keys are valid according to the BCP47 spec\nconst bcp47pattern = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\\d{3}))?((?:-(?:[\\da-z]{5,8}|\\d[\\da-z]{3}))*)?((?:-[\\da-wy-z](?:-[\\da-z]{2,8})+)*)?(-x(?:-[\\da-z]{1,8})+)?$|^(x(?:-[\\da-z]{1,8})+)$/i // eslint-disable-line max-len\n\n\nexport {\n    checkPropUniqueness,\n    checkSecurity,\n    checkMultiLangConsistency,\n    checkLinksRelTypeCount,\n    checkUriSecurity,\n    checkTmOptionalPointer\n}\n\n/**\n * This function returns part of the object given in param with the value found when resolving the path. Similar to JSON Pointers.\n * In case no path is found, the param defaultValue is echoed back\n * Taken from\n * https://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-and-arrays-by-string-path/6491621#6491621\n * @param {object} object\n * @param {string} path\n * @param {any} defaultValue\n * @return {object}\n **/\nconst resolvePath = (object, path, defaultValue) => path\n    //eslint-disable-next-line\n    .split(/[\\.\\[\\]\\'\\\"]/)\n    .filter(p => p)\n    .reduce((o, p) => o ? o[p] : defaultValue, object)\n\n// -------------------------------------------------- checkPropUniqueness\n\n/**\n *  Checking whether in one interaction pattern there are duplicate names, e.g. two properties called temp\n *  However, if there are no properties then it is not-impl\n *\n * @param {string} tdString The Td under test as string\n */\nfunction checkPropUniqueness(tdString) {\n\n    const results = []\n\n    // jsonvalidator throws an error if there are duplicate names in the interaction level\n    try {\n        jsonValidator.parse(tdString, false)\n\n        const td = JSON.parse(tdString)\n\n        // no problem in interaction level\n        //eslint-disable-next-line\n        let tdInteractions = []\n\n        // checking whether there are properties at all, if not uniqueness is not impl\n        if (td.hasOwnProperty(\"properties\")) {\n            tdInteractions = tdInteractions.concat(Object.keys(td.properties))\n            // then we can add unique properties pass\n            results.push({\n                \"ID\": \"td-properties_uniqueness\",\n                \"Status\": \"pass\",\n                \"Comment\": \"\"\n            })\n        } else {\n            // then we add unique properties as not impl\n            results.push({\n                \"ID\": \"td-properties_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no properties\"\n            })\n        }\n\n        // similar to just before, checking whether there are actions at all, if not uniqueness is not impl\n        if (td.hasOwnProperty(\"actions\")) {\n            tdInteractions = tdInteractions.concat(Object.keys(td.actions))\n            results.push({\n                \"ID\": \"td-actions_uniqueness\",\n                \"Status\": \"pass\",\n                \"Comment\": \"\"\n            })\n        } else {\n            // then we add unique actions as not impl\n            results.push({\n                \"ID\": \"td-actions_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no actions\"\n            })\n        }\n\n        // similar to just before, checking whether there are events at all, if not uniqueness is not impl\n        if (td.hasOwnProperty(\"events\")) {\n            tdInteractions = tdInteractions.concat(Object.keys(td.events))\n            results.push({\n                \"ID\": \"td-events_uniqueness\",\n                \"Status\": \"pass\",\n                \"Comment\": \"\"\n            })\n        } else {\n            // then we add unique events as not impl\n            results.push({\n                \"ID\": \"td-events_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no events\"\n            })\n        }\n\n        return results\n\n    } catch (error) {\n        // there is a duplicate somewhere\n\n        // convert it into string to be able to process it\n        // error is of form = Error: Syntax error: duplicated keys \"overheating\" near ting\": {\n        const errorString = error.toString()\n        // to get the name, we need to remove the quotes around it\n        const startQuote = errorString.indexOf('\"')\n        // slice to remove the part before the quote\n        const restString = errorString.slice(startQuote + 1)\n        // find where the interaction name ends\n        const endQuote = restString.indexOf('\"')\n        // finally get the interaction name\n        const interactionName = restString.slice(0, endQuote)\n\n        // trying to find where this interaction is and put results accordingly\n        const td = JSON.parse(tdString)\n\n        if (td.hasOwnProperty(\"properties\")) {\n            const tdProperties = td.properties\n            if (tdProperties.hasOwnProperty(interactionName)) {\n                // duplicate was at properties but that fails the td-unique identifiers as well\n                results.push({\n                    \"ID\": \"td-properties_uniqueness\",\n                    \"Status\": \"fail\",\n                    \"Comment\": \"duplicate property names\"\n                })\n                // since JSON.parse removes duplicates, we replace the duplicate name with duplicateName\n                tdString = tdString.replace(interactionName, \"duplicateName\")\n\n            } else {\n                // there is duplicate but not here, so pass\n                results.push({\n                    \"ID\": \"td-properties_uniqueness\",\n                    \"Status\": \"pass\",\n                    \"Comment\": \"\"\n                })\n            }\n        } else {\n            results.push({\n                \"ID\": \"td-properties_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no properties\"\n            })\n        }\n\n        if (td.hasOwnProperty(\"actions\")) {\n            const tdActions = td.actions\n            if (tdActions.hasOwnProperty(interactionName)) {\n                // duplicate was at actions but that fails the td-unique identifiers as well\n                results.push({\n                    \"ID\": \"td-actions_uniqueness\",\n                    \"Status\": \"fail\",\n                    \"Comment\": \"duplicate action names\"\n                })\n                // since JSON.parse removes duplicates, we replace the duplicate name with duplicateName\n                tdString = tdString.replace(interactionName, \"duplicateName\")\n            } else {\n                results.push({\n                    \"ID\": \"td-actions_uniqueness\",\n                    \"Status\": \"pass\",\n                    \"Comment\": \"\"\n                })\n            }\n        } else {\n            results.push({\n                \"ID\": \"td-actions_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no actions\"\n            })\n        }\n\n        if (td.hasOwnProperty(\"events\")) {\n            const tdEvents = td.events\n            if (tdEvents.hasOwnProperty(interactionName)) {\n                // duplicate was at events but that fails the td-unique identifiers as well\n                results.push({\n                    \"ID\": \"td-events_uniqueness\",\n                    \"Status\": \"fail\",\n                    \"Comment\": \"duplicate event names\"\n                })\n                // since JSON.parse removes duplicates, we replace the duplicate name with duplicateName\n                tdString = tdString.replace(interactionName, \"duplicateName\")\n            } else {\n                results.push({\n                    \"ID\": \"td-events_uniqueness\",\n                    \"Status\": \"pass\",\n                    \"Comment\": \"\"\n                })\n            }\n        } else {\n            results.push({\n                \"ID\": \"td-events_uniqueness\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no events\"\n            })\n        }\n\n        return results\n    }\n}\n\n\n// -------------------------------------------------- checkSecurity\n\n/**\n * check if used Security definitions are properly defined previously\n * @param {object} td The TD to do assertion tests\n */\nfunction checkSecurity(td) {\n\n    const results = []\n    if (td.hasOwnProperty(\"securityDefinitions\")) {\n        const securityDefinitionsObject = td.securityDefinitions\n        const securityDefinitions = Object.keys(securityDefinitionsObject)\n\n\n        const rootSecurity = td.security\n\n        if (securityContains(securityDefinitions, rootSecurity)) {\n            // all good\n        } else {\n            results.push({\n                \"ID\": \"td-security-scheme-name\",\n                \"Status\": \"fail\",\n                \"Comment\": \"used a non defined security scheme in root level\"\n            })\n            return results\n        }\n\n        if (td.hasOwnProperty(\"properties\")) {\n            // checking security in property level\n            let tdProperties = Object.keys(td.properties)\n            for (let i = 0; i < tdProperties.length; i++) {\n                const curPropertyName = tdProperties[i]\n                const curProperty = td.properties[curPropertyName]\n\n                // checking security in forms level\n                const curForms = curProperty.forms\n                for (let j = 0; j < curForms.length; j++) {\n                    const curForm = curForms[j]\n                    if (curForm.hasOwnProperty(\"security\")) {\n                        const curSecurity = curForm.security\n                        if (securityContains(securityDefinitions, curSecurity)) {\n                            // all good\n                        } else {\n                            results.push({\n                                \"ID\": \"td-security-scheme-name\",\n                                \"Status\": \"fail\",\n                                \"Comment\": \"used a non defined security scheme in a property form\"\n                            })\n                            return results\n                        }\n                    }\n                }\n            }\n        }\n\n        if (td.hasOwnProperty(\"actions\")) {\n            // checking security in action level\n            let tdActions = Object.keys(td.actions)\n            for (let i = 0; i < tdActions.length; i++) {\n                const curActionName = tdActions[i]\n                const curAction = td.actions[curActionName]\n\n                // checking security in forms level\n                const curForms = curAction.forms\n                for (let j = 0; j < curForms.length; j++) {\n                    const curForm = curForms[j]\n                    if (curForm.hasOwnProperty(\"security\")) {\n                        const curSecurity = curForm.security\n                        if (securityContains(securityDefinitions, curSecurity)) {\n                            // all good\n                        } else {\n                            results.push({\n                                \"ID\": \"td-security-scheme-name\",\n                                \"Status\": \"fail\",\n                                \"Comment\": \"used a non defined security scheme in an action form\"\n                            })\n                            return results\n                        }\n                    }\n                }\n\n            }\n        }\n\n        if (td.hasOwnProperty(\"events\")) {\n            // checking security in event level\n            let tdEvents = Object.keys(td.events)\n            for (let i = 0; i < tdEvents.length; i++) {\n                const curEventName = tdEvents[i]\n                const curEvent = td.events[curEventName]\n\n                // checking security in forms level\n                const curForms = curEvent.forms\n                for (let j = 0; j < curForms.length; j++) {\n                    const curForm = curForms[j]\n                    if (curForm.hasOwnProperty(\"security\")) {\n                        const curSecurity = curForm.security\n                        if (securityContains(securityDefinitions, curSecurity)) {\n                            // all good\n                        } else {\n                            results.push({\n                                \"ID\": \"td-security-scheme-name\",\n                                \"Status\": \"fail\",\n                                \"Comment\": \"used a non defined security scheme in an event form\"\n                            })\n                            return results\n                        }\n                    }\n                }\n\n            }\n        }\n\n        // no security used non defined scheme, passed test\n        results.push({\n            \"ID\": \"td-security-scheme-name\",\n            \"Status\": \"pass\"\n        })\n        return results\n\n    }\n    return results\n}\n\n/**\n * subfunction of checkSecurity\n * security anywhere could be a string or array. Convert string to array\n *\n * @param {*} parent\n * @param {string|Array<string>} child\n */\nfunction securityContains(parent, child) {\n\n    if (typeof child === \"string\") {\n        child = [child]\n    }\n    return child.every(elem => parent.indexOf(elem) > -1)\n}\n\n\n// -------------------------------------------------- checkMultiLangConsistency\n\n/**\n *  this checks whether all titles and descriptions have the same language fields\n *  so the object keys of a titles and of a descriptions should be the same already,\n *  then everywhere else they should also be the same\n *\n *  first collect them all, and then compare them\n *\n * @param {object} td The TD to do assertion tests\n */\nfunction checkMultiLangConsistency(td) {\n\n    const results = []\n    const multiLang = [] // an array of arrays where each small array has the multilang keys\n    const isTdTitlesDescriptions = [] // an array of boolean values to check td-titles-descriptions assertion\n\n    // checking root\n    if (td.hasOwnProperty(\"titles\")) {\n        const rootTitlesObject = td.titles\n        const rootTitles = Object.keys(rootTitlesObject)\n        multiLang.push(rootTitles)\n        // checking for td-titles-descriptions\n        //eslint-disable-next-line\n        isTdTitlesDescriptions.push({[\"root_title\"]: isStringObjectKeyValue(td.title, rootTitlesObject)})\n    }\n\n    if (td.hasOwnProperty(\"descriptions\")) {\n        const rootDescriptionsObject = td.descriptions\n        const rootDescriptions = Object.keys(rootDescriptionsObject)\n        multiLang.push(rootDescriptions)\n        // check whether description exists in descriptions\n        if (td.hasOwnProperty(\"description\")) {\n            //eslint-disable-next-line\n            isTdTitlesDescriptions.push({[\"root_description\"]: isStringObjectKeyValue(td.description, rootDescriptionsObject)})\n        }\n    }\n\n    // checking inside each interaction\n    if (td.hasOwnProperty(\"properties\")) {\n        // checking security in property level\n        let tdProperties = Object.keys(td.properties)\n        for (let i = 0; i < tdProperties.length; i++) {\n            const curPropertyName = tdProperties[i]\n            const curProperty = td.properties[curPropertyName]\n\n            if (curProperty.hasOwnProperty(\"titles\")) {\n                const titlesKeys = Object.keys(curProperty.titles)\n                multiLang.push(titlesKeys)\n                // checking if title exists in titles\n                if (curProperty.hasOwnProperty(\"title\")) {\n                    isTdTitlesDescriptions.push({\n                        [\"property_\"+curPropertyName + \"_title\"]: isStringObjectKeyValue(curProperty.title, curProperty.titles)\n                    })\n                }\n            }\n\n            if (curProperty.hasOwnProperty(\"descriptions\")) {\n                const descriptionsKeys = Object.keys(curProperty.descriptions)\n                multiLang.push(descriptionsKeys)\n                // checking if description exists in descriptions\n                if (curProperty.hasOwnProperty(\"description\")) {\n                    isTdTitlesDescriptions.push({\n                    [\"property_\" + curPropertyName + \"_desc\"]: isStringObjectKeyValue(curProperty.description,curProperty.descriptions)\n                    })\n                }\n            }\n        }\n    }\n\n    if (td.hasOwnProperty(\"actions\")) {\n        // checking security in action level\n        let tdActions = Object.keys(td.actions)\n        for (let i = 0; i < tdActions.length; i++) {\n            const curActionName = tdActions[i]\n            const curAction = td.actions[curActionName]\n\n            if (curAction.hasOwnProperty(\"titles\")) {\n                const titlesKeys = Object.keys(curAction.titles)\n                multiLang.push(titlesKeys)\n                // checking if title exists in titles\n                if (curAction.hasOwnProperty(\"title\")) {\n                    isTdTitlesDescriptions.push({\n                        [\"action_\" + curActionName + \"_title\"]: isStringObjectKeyValue(curAction.title, curAction.titles)\n                    })\n                }\n            }\n\n            if (curAction.hasOwnProperty(\"descriptions\")) {\n                const descriptionsKeys = Object.keys(curAction.descriptions)\n                multiLang.push(descriptionsKeys)\n                // checking if description exists in descriptions\n                if (curAction.hasOwnProperty(\"description\")) {\n                    isTdTitlesDescriptions.push({\n                         [\"action_\" + curActionName + \"_desc\"]: isStringObjectKeyValue(curAction.description, curAction.descriptions)\n                    })\n                }\n            }\n\n        }\n    }\n\n    if (td.hasOwnProperty(\"events\")) {\n        // checking security in event level\n        let tdEvents = Object.keys(td.events)\n        for (let i = 0; i < tdEvents.length; i++) {\n            const curEventName = tdEvents[i]\n            const curEvent = td.events[curEventName]\n\n            if (curEvent.hasOwnProperty(\"titles\")) {\n                const titlesKeys = Object.keys(curEvent.titles)\n                multiLang.push(titlesKeys)\n                // checking if title exists in titles\n                if (curEvent.hasOwnProperty(\"title\")) {\n                    isTdTitlesDescriptions.push({\n                        [\"event_\" + curEventName + \"_title\"]: isStringObjectKeyValue(curEvent.title, curEvent.titles)\n                    })\n                }\n            }\n\n            if (curEvent.hasOwnProperty(\"descriptions\")) {\n                const descriptionsKeys = Object.keys(curEvent.descriptions)\n                multiLang.push(descriptionsKeys)\n                // checking if description exists in descriptions\n                if (curEvent.hasOwnProperty(\"description\")) {\n                    isTdTitlesDescriptions.push({\n                        [\"event_\" + curEventName + \"_desc\"]: isStringObjectKeyValue(curEvent.description, curEvent.descriptions)\n                    })\n                }\n            }\n\n        }\n    }\n    if(arrayArraysItemsEqual(multiLang)){\n        results.push({\n            \"ID\": \"td-multi-languages-consistent\",\n            \"Status\": \"pass\"\n        })\n    } else {\n        results.push({\n            \"ID\": \"td-multi-languages-consistent\",\n            \"Status\": \"fail\",\n            \"Comment\": \"not all multilang objects have same language tags\"\n        })\n    }\n\n    const flatArray = [] // this is multiLang but flat, so just a single array.\n    // This way we can have scan the whole thing at once and then find the element that is not bcp47\n\n    for (let index = 0; index < multiLang.length; index++) {\n        let arrayElement = multiLang[index]\n        arrayElement=JSON.parse(arrayElement)\n        for (let e = 0; e < arrayElement.length; e++) {\n            const stringElement = arrayElement[e]\n            flatArray.push(stringElement)\n        }\n    }\n    const isBCP47 = checkBCP47array(flatArray)\n    if(isBCP47 === \"ok\"){\n        results.push({\n            \"ID\": \"td-multilanguage-language-tag\",\n            \"Status\": \"pass\"\n        })\n    } else {\n        results.push({\n            \"ID\": \"td-multilanguage-language-tag\",\n            \"Status\": \"fail\",\n            \"Comment\":isBCP47+\" is not a BCP47 tag\"\n        })\n    }\n\n    // // checking td-context-default-language-direction-script assertion\n    // results.push({\n    //     \"ID\": \"td-context-default-language-direction-script\",\n    //     \"Status\": checkAzeri(flatArray)\n    // })\n\n    // checking td-titles-descriptions assertion\n    // if there are no multilang, then it is not impl\n    if(isTdTitlesDescriptions.length === 0){\n        results.push({\n            \"ID\": \"td-titles-descriptions\",\n            \"Status\": \"not-impl\",\n            \"Comment\": \"no multilang objects in the td\"\n        })\n        return results\n    }\n\n    // if at some point there was a false result, it is a fail\n    for (let index = 0; index < isTdTitlesDescriptions.length; index++) {\n        const element = isTdTitlesDescriptions[index]\n        const elementName = Object.keys(element)\n\n        if(element[elementName]){\n            // do nothing it is correct\n        } else {\n            results.push({\n                \"ID\": \"td-titles-descriptions\",\n                \"Status\": \"fail\",\n                \"Comment\": elementName+\" is not on the multilang object at the same level\"\n            })\n            return results\n        }\n    }\n    // there was no problem, so just put pass\n    results.push({\n        \"ID\": \"td-titles-descriptions\",\n        \"Status\": \"pass\"\n    })\n\n    // ? nothing after this, there is return above\n    return results\n}\n\n/**\n * subfunction of checkMultiLangConsistency\n * checks if an array that contains only arrays as items is composed of same items\n *\n * @param {Array<object>} myArray The array to check\n */\nfunction arrayArraysItemsEqual(myArray) {\n    if(myArray.length === 0) return true\n    // first stringify each array item\n    for (let i = myArray.length; i--;) {\n        myArray[i] = JSON.stringify(myArray[i])\n    }\n\n    for (let i = myArray.length; i--;) {\n        if (i === 0) {\n            return true\n        }\n        if (myArray[i] !== myArray[i - 1]){\n            return false\n        }\n    }\n}\n\n/**\n * subfunction of checkMultiLangConsistency\n * checks whether the items of an array, which must be strings, are valid language tags\n *\n * @param {Array<string>} myArray The array, which items are to be checked\n */\nfunction checkBCP47array(myArray){\n    // return tag name if one is not valid during the check\n\n    for (let index = 0; index < myArray.length; index++) {\n        const element = myArray[index]\n        if (bcp47pattern.test(element)) {\n            // keep going\n        } else {\n            return element\n        }\n    }\n\n    // return true if reached the end\n    return \"ok\"\n}\n\n/**\n * subfunction of checkMultiLangConsistency\n * checks whether a given string exist as the value of key in an object\n *\n * @param {string} searchedString\n * @param {object} searchedObject\n */\nfunction isStringObjectKeyValue(searchedString, searchedObject){\n    const objKeys = Object.keys(searchedObject)\n    if(objKeys.length === 0) return false // if the object is empty, then the string cannot exist here\n    for (let index = 0; index < objKeys.length; index++) {\n        const element = objKeys[index]\n        if (searchedObject[element] === searchedString) {\n            return true // found where the string is in the object\n        } else {\n            // nothing keep going, maybe in another key\n        }\n    }\n    return false\n}\n\n\n/**\n * subfunction of checkMultiLangConsistency\n * checks whether an azeri language tag also specifies the version (Latn or Arab).\n * basically if the language is called \"az\", it is invalid, if it is az-Latn or az-Arab it is valid.\n *\n * @param {Array<string>} myMultiLangArray The language array to check\n */\n// function checkAzeri(myMultiLangArray){\n//     for (let index = 0; index < myMultiLangArray.length; index++) {\n//         const element = myMultiLangArray[index]\n//         if (element ===\"az\"){\n//             return \"fail\"\n//         } else if ((element === \"az-Latn\") || (element === \"az-Arab\")){\n//             return \"pass\"\n//         }\n//     }\n//     // no azeri, so it is not implemented\n//     return \"not-impl\"\n// }\n\n// --------------------------------------------------\n\n// -------------------------------------------------- checkLinksRelTypeCount\n\n/**\n *  this checks whether rel:type appears only once in the links array\n *\n * @param {object} td The TD to do assertion tests\n */\nfunction checkLinksRelTypeCount(td){\n\n    const results = []\n\n    if (td.hasOwnProperty(\"links\")){\n        // links exist, check if there is rel type\n        let typeCount = 0\n        for (let i = 0; i < td.links.length; i++) {\n            const element = td.links[i]\n            if(element.hasOwnProperty(\"rel\")){\n                if (element.rel === \"type\"){\n                    typeCount++\n                }\n            }\n        }\n        if (typeCount === 0){\n            results.push({\n                \"ID\": \"tm-rel-type-maximum\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no rel:type in any link\"\n            })\n        } else if (typeCount === 1){\n            results.push({\n                \"ID\": \"tm-rel-type-maximum\",\n                \"Status\": \"pass\",\n                \"Comment\": \"\"\n            })\n        } else {\n            results.push({\n                \"ID\": \"tm-rel-type-maximum\",\n                \"Status\": \"fail\",\n                \"Comment\": \"too many rel:type in links array\"\n            })\n        }\n    } else {\n        results.push({\n            \"ID\": \"tm-rel-type-maximum\",\n            \"Status\": \"not-impl\",\n            \"Comment\": \"no links array in the td\"\n        })\n    }\n    return results\n}\n\n/**\n * When you have apikey security with the key in uri, you put the name of the urivariable in the name field in\n * securityDefinitions. Ideally, that name appears in href as a uriVariable. See uriSecurity example\n * td-security-in-uri-variable: The URIs provided in interactions where a security scheme using uri as the value for\n * in MUST be a URI template including the defined variable.\n * Additionally, this also checks that the uriVariable used in the security does not conflict with ones for the TD\n * td-security-uri-variables-distinct: The names of URI variables declared in a SecurityScheme MUST be distinct from\n * all other URI variables declared in the TD.\n * @param {object} td The TD to do assertion tests\n */\nfunction checkUriSecurity(td) {\n\n    const results = []\n    if (td.hasOwnProperty(\"securityDefinitions\")) {\n        const securityDefinitionsObject = td.securityDefinitions\n        const securityDefinitionsNames = Object.keys(securityDefinitionsObject)\n\n        const securityUriVariables = [];\n        for (let index = 0; index < securityDefinitionsNames.length; index++) {\n            const curSecurityDefinition = securityDefinitionsObject[securityDefinitionsNames[index]];\n            if (curSecurityDefinition.scheme === \"apikey\"){\n                if (curSecurityDefinition.hasOwnProperty(\"in\")){\n                    if (curSecurityDefinition.in === \"uri\"){\n                        if (curSecurityDefinition.hasOwnProperty(\"name\")){\n                            securityUriVariables.push(curSecurityDefinition.name)\n                        }\n                    }\n                }\n            }\n        }\n\n        if (securityUriVariables.length === 0){ // we could not find any\n            results.push({\n                \"ID\": \"td-security-in-uri-variable\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no use of name in a uri apikey scheme\"\n            })\n            results.push({\n                \"ID\": \"td-security-uri-variables-distinct\",\n                \"Status\": \"not-impl\",\n                \"Comment\": \"no use of name in a uri apikey scheme\"\n            })\n            return results\n        } else {\n            let uriVariablesResult = \"not-impl\"\n            let uriVariablesDistinctResult = \"not-impl\"\n            let rootUriVariables = [];\n            if (td.hasOwnProperty(\"uriVariables\")) {\n                rootUriVariables = Object.keys(td.uriVariables)\n            }\n            if (td.hasOwnProperty(\"properties\")) {\n                // checking security in property level\n                let tdProperties = Object.keys(td.properties)\n                for (let i = 0; i < tdProperties.length; i++) {\n                    const curPropertyName = tdProperties[i]\n                    const curProperty = td.properties[curPropertyName]\n                    // checking href with uriVariable in forms level\n                    const curForms = curProperty.forms\n                    for (let j = 0; j < curForms.length; j++) {\n                        const curForm = curForms[j]\n                        if (curForm.hasOwnProperty(\"href\")){\n                            const curHref = curForm.href\n                            // bottom thing is taken from https://stackoverflow.com/a/5582621/3806426\n                            if (securityUriVariables.some(v => curHref.includes(v))) {\n                                // There's at least one\n                                if(uriVariablesResult !== \"fail\"){\n                                    uriVariablesResult = \"pass\"\n                                }\n                            }\n                        }\n                    }\n                    // part for the check of td-security-uri-variables-distinct\n                    if (curProperty.hasOwnProperty(\"uriVariables\")){\n                        let curPropertyUriVariables = Object.keys(curProperty.uriVariables)\n                        curPropertyUriVariables.push(...rootUriVariables)\n                        if (curPropertyUriVariables.length>0){ // there are urivariables somewhere at least\n                            // below is from https://stackoverflow.com/a/1885569/3806426\n                            const filteredArray = curPropertyUriVariables.filter(value => securityUriVariables.includes(value))\n                            // console.log(curPropertyUriVariables,\"\\n\",securityUriVariables,\"\\n\",filteredArray)\n                            if(filteredArray.length>0){\n                                uriVariablesDistinctResult = \"fail\"\n                            } else {\n                                if (uriVariablesDistinctResult !== \"fail\"){\n                                    uriVariablesDistinctResult = \"pass\"\n                                }\n                            }\n                        } // otherwise not-impl stays\n                    }\n                }\n            }\n\n            if (td.hasOwnProperty(\"actions\")) {\n                // checking security in property level\n                let tdActions = Object.keys(td.actions)\n                for (let i = 0; i < tdActions.length; i++) {\n                    const curActionName = tdActions[i]\n                    const curAction = td.actions[curActionName]\n                    // checking href with uriVariable in forms level\n                    const curForms = curAction.forms\n                    for (let j = 0; j < curForms.length; j++) {\n                        const curForm = curForms[j]\n                        if (curForm.hasOwnProperty(\"href\")){\n                            const curHref = curForm.href\n                            // bottom thing is taken from https://stackoverflow.com/a/5582621/3806426\n                            if (securityUriVariables.some(v => curHref.includes(v))) {\n                                // There's at least one\n                                if(uriVariablesResult !== \"fail\"){\n                                    uriVariablesResult = \"pass\"\n                                }\n                            }\n                        }\n                    }\n                    // part for the check of td-security-uri-variables-distinct\n                    if (curAction.hasOwnProperty(\"uriVariables\")){\n                        let curActionUriVariables = Object.keys(curAction.uriVariables)\n                        curActionUriVariables.push(...rootUriVariables)\n                        if (curActionUriVariables.length>0){ // there are urivariables somewhere at least\n                            // below is from https://stackoverflow.com/a/1885569/3806426\n                            const filteredArray = curActionUriVariables.filter(value => securityUriVariables.includes(value))\n                            // console.log(curActionUriVariables,\"\\n\",securityUriVariables,\"\\n\",filteredArray)\n                            if(filteredArray.length>0){\n                                uriVariablesDistinctResult = \"fail\"\n                            } else {\n                                if (uriVariablesDistinctResult !== \"fail\"){\n                                    uriVariablesDistinctResult = \"pass\"\n                                }\n                            }\n                        } // otherwise not-impl stays\n                    }\n                }\n            }\n\n            if (td.hasOwnProperty(\"events\")) {\n                // checking security in property level\n                let tdEvents = Object.keys(td.events)\n                for (let i = 0; i < tdEvents.length; i++) {\n                    const curEventName = tdEvents[i]\n                    const curEvent = td.events[curEventName]\n                    // checking href with uriVariable in forms level\n                    const curForms = curEvent.forms\n                    for (let j = 0; j < curForms.length; j++) {\n                        const curForm = curForms[j]\n                        if (curForm.hasOwnProperty(\"href\")){\n                            const curHref = curForm.href\n                            // bottom thing is taken from https://stackoverflow.com/a/5582621/3806426\n                            if (securityUriVariables.some(v => curHref.includes(v))) {\n                                // There's at least one\n                                if(uriVariablesResult !== \"fail\"){\n                                    uriVariablesResult = \"pass\"\n                                }\n                            }\n                        }\n                    }\n                    // part for the check of td-security-uri-variables-distinct\n                    if (curEvent.hasOwnProperty(\"uriVariables\")){\n                        let curEventUriVariables = Object.keys(curEvent.uriVariables)\n                        curEventUriVariables.push(...rootUriVariables)\n                        if (curEventUriVariables.length>0){ // there are urivariables somewhere at least\n                            // below is from https://stackoverflow.com/a/1885569/3806426\n                            const filteredArray = curEventUriVariables.filter(value => securityUriVariables.includes(value))\n                            // console.log(curEventUriVariables,\"\\n\",securityUriVariables,\"\\n\",filteredArray)\n                            if(filteredArray.length>0){\n                                uriVariablesDistinctResult = \"fail\"\n                            } else {\n                                if (uriVariablesDistinctResult !== \"fail\"){\n                                    uriVariablesDistinctResult = \"pass\"\n                                }\n                            }\n                        } // otherwise not-impl stays\n                    }\n                }\n            }\n\n            results.push({\n                \"ID\": \"td-security-in-uri-variable\",\n                \"Status\": uriVariablesResult\n            })\n            results.push({\n                \"ID\": \"td-security-in-uri-variable-distinct\",\n                \"Status\": uriVariablesDistinctResult\n            })\n            return results\n\n        }\n\n        // // no security used non defined scheme, passed test\n        // results.push({\n        //     \"ID\": \"td-security-scheme-name\",\n        //     \"Status\": \"pass\"\n        // })\n        // return results\n\n    }\n    return results\n}\n\n/**\n * When tm:optional uses a pointer, it should point to an actual affordance and only to an affordance, as said by\n * tm-tmOptional-resolver: The JSON Pointers of tm:optional MUST resolve to an entire interaction affordance Map definition.\n * JSON Schema checks for the syntax but cannot know if the pointed affordance exists.\n * This function checks that programmatically\n * @param {object} td The TD to do assertion tests\n */\nfunction checkTmOptionalPointer(td){\n    const results = []\n    if(td.hasOwnProperty(\"tm:optional\")){\n        td[\"tm:optional\"].forEach(element => {\n            // However, tm: optional values start with / so it should be removed first\n            element = element.substring(1)\n            element = element.replace(\"/\",\".\") // since the resolvePath uses . instead of /\n            const pathTarget = resolvePath(td,element,\"noTarget\")\n            if (pathTarget === \"noTarget\" || pathTarget === undefined) {\n                results.push({\n                    \"ID\": \"tm-tmOptional-resolver\",\n                    \"Status\": \"fail\",\n                    \"Comment\": \"tm:optional does not resolve to an affordance\"\n                })\n            } else {\n                results.push({\n                    \"ID\": \"tm-tmOptional-resolver\",\n                    \"Status\": \"pass\",\n                    \"Comment\": \"\"\n                })\n            }\n        });\n    } else {\n        results.push({\n            \"ID\": \"tm-tmOptional-resolver\",\n            \"Status\": \"not-impl\",\n            \"Comment\": \"no use of tm:optional\"\n        })\n    }\n\n    return results\n }\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\n\nexport default React.createContext({\n  offlineTD: '',\n  theme: 'dark',\n  isModified: false,\n  isThingModel: undefined,\n  name: '',\n  fileHandle:'',\n  showConvertBtn: false,\n  linkedTd:{},\n  validationMessage: '',\n  updateOfflineTD: td => {},\n  updateIsModified: isModified => {},\n  updateIsThingModel: isThingModel => {},\n  setFileHandle: handle => {},\n  removeForm: form => {},\n  addForm: form => {},\n  removeLink: link => {},\n  addActionForm: params => {},\n  addEventForm: params => {},\n  removeOneOfAKindReducer: (kind, oneOfAKind) => {},\n  updateShowConvertBtn: showConvertBtn => {},\n  addLinkedTd: linkedTd => {},\n  updateLinkedTd: linkedTd => {},\n  updateValidationMessage: validationMessage => {}\n});\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n/**\n * \n * @param {*} firstAttribute \n * @param {*} object \n * @param {*} dontRender is a list of keys that shouldn't be packed into the attribute list.\n * \n * @description\n * Parses all key-value pairs of an object into an object'. \n * \n */\nexport const buildAttributeListObject = (firstAttribute, object, dontRender) => {\n    let attributeListObject = { ...firstAttribute }\n\n    for (const [key, value] of Object.entries(object)) {\n        if (!dontRender.includes(key)) {\n            attributeListObject[key] = value\n        }\n    }\n\n    return attributeListObject;\n}\n\n/**\n * \n * @param {*} forms \n * \n * @description\n * Converts Forms that have an array as the \"op\" value into multiple separate Forms \n * which only have a string as \"op\" value.\n */\nexport const separateForms = (forms) => {\n    if (forms === undefined && !forms) {\n        return []\n    }\n\n    const newForms = [];\n\n    for (let i = 0; i < forms.length; i++) {\n        const form = forms[i];\n\n        if (!Array.isArray(form.op)) {\n            newForms.push(form);\n            continue;\n        }\n\n        for (let i = 0; i < form.op.length; i++) {\n            const temp = { ...form };\n            temp.op = form.op[i];\n            newForms.push(temp);\n        }\n    }\n\n    return newForms;\n}\n\n\n\n\n/**\n * \n * @param {itemToCheck} itemToCheck \n * \n * Checks if item contains Forms\n * \n */\nexport const hasForms = (itemToCheck) => {\n    return itemToCheck.forms ? true : false;\n}\n\n/**   \n  *Check if link exists in the links section of iteamToCheck  \n*/\nexport const hasLinks = (itemToCheck) => {\n    return itemToCheck.links ? true : false;\n}\n\n/**  \n  *Check if link exists in the links section of iteamToCheck \n*/\nexport const checkIfLinkIsInItem = (link, itemToCheck) => {\n    for (const element of itemToCheck.links) {\n        if (element.href === link.href) {\n            return true;\n        }\n    }\n    return false;\n\n}\nexport const checkIfFormIsInItem = (form, itemToCheck) => {\n    for (const element of itemToCheck.forms) {\n        if (typeof (form.op) === \"string\") {\n            return checkIfFormIsInElement(form, element)\n        } else {\n            for (const x of form.op) {\n                if (typeof (element.op) === 'string') {\n                    if (element.op === x) {\n                        return true;\n                    }\n                } else {\n                    if (element.op.includes(x)) {\n                        let deepCompare = true;\n                        for (const y in form) {\n                            if (y !== 'op') {\n                                if (element[y] !== form[y]) {\n                                    deepCompare = false;\n                                }\n                            }\n                        }\n                        if (deepCompare)\n                            return true\n                    }\n                }\n            }\n        }\n    }\n    return false\n}\n\nconst checkIfFormIsInElement = (form, element) => {\n    if (typeof (element.op) === 'string') {\n        if (element.op === form.op) {\n            return true;\n        }\n    } else {\n        if (element.op.includes(form.op)) {\n            let deepCompare = true;\n            for (const y in form) {\n                if (y !== 'op') {\n                    if (element[y] !== form[y]) {\n                        deepCompare = false;\n                    }\n                }\n            }\n            if (deepCompare)\n                return true\n        }\n    }\n}\n\n/**\n    * Display the selected Thing description \n    * Save the current Thing Description if wanted\n    * Method supports both fileHandler and jsonld file\n*/\nexport const changeBetweenTd = async (context, href) => {\n    var writable\n    if (context.linkedTd[href][\"kind\"] === \"file\") {\n        try {\n            if (context.isModified && context.fileHandle) {\n                writable = await context.fileHandle.createWritable();\n                await writable.write(context.offlineTD);\n                await writable.close();\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n        let fileHandle = context.linkedTd[href];\n        const file = await fileHandle.getFile();\n        const td = JSON.parse(await file.text());\n        let offlineTd = JSON.stringify(td, null, 2);\n        context.setFileHandle(fileHandle);\n        context.updateOfflineTD(offlineTd);\n        context.updateIsModified(false);\n        document.getElementById(\"linkedTd\").value = href;\n    }\n    // If we create a TD using the New button then we don't have a file handler\n    // In that case the entry in linkedTd is not a file handler but a Thing Description Json \n    else if (Object.keys(context.linkedTd[href]).length) {\n        try {\n            if (context.isModified && context.fileHandle) {\n                writable = await context.fileHandle.createWritable();\n                await writable.write(context.offlineTD);\n                await writable.close();\n            }\n        } catch (e) {\n            console.error(e.message);\n        }\n        context.setFileHandle(undefined);\n        const td = context.linkedTd[href];\n        let offlineTd = JSON.stringify(td, null, 2);\n        context.updateOfflineTD(offlineTd);\n        context.updateIsModified(false);\n        document.getElementById(\"linkedTd\").value = href;\n\n    }\n}\n\n/**\n   * File Handle from native filesystem api\n   * Only JSON/JSON+LD Files are supported\n*/\nexport const getFileHandle = () => {\n    const opts = {\n        types: [\n            {\n                description: \"Thing Description\",\n                accept: { \"application/ld+json\": [\".jsonld\", \".json\"] },\n            },\n        ],\n    };\n    if (\"showOpenFilePicker\" in window) {\n        return window.showOpenFilePicker(opts).then((handles) => handles[0]);\n    }\n    return window.chooseFileSystemEntries();\n};\n\n/**\n   * Reading files with HTML5 input\n*/\nexport const getFileHTML5 = async () => {\n    return new Promise((resolve, reject) => {\n        const fileInput = document.getElementById(\"fileInput\");\n        fileInput.onchange = (e) => {\n            const file = fileInput.files[0];\n            if (file) {\n                return resolve(file);\n            }\n            return reject(new Error(\"AbortError\"));\n        };\n        fileInput.click();\n    });\n};\n\nexport const _readFileHTML5 = (file) => {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"loadend\", (event) => {\n            const text = event.srcElement.result;\n            return resolve(text);\n        });\n        reader.readAsText(file);\n    });\n}\n\n/**\n * @param {*} source Source object\n * @param {string} key Source key\n * @param {*} atContext Respective @context value\n * \n * @returns {string} String value of source[key] with prepended LRI or RLI symbol\n *\n * @description\n * Returns the value of source[key] with the direction information (rtl/ltr).\n */\nexport const getDirectedValue = (source, key, atContext) => {\n    const LRI = '\\u2066';\n    const RLI = '\\u2067';\n    const TABLE = {\n      ar: 'rtl',\n      fa: 'rtl',\n      ps: 'rtl',\n      ur: 'rtl',\n      hy: 'ltr',\n      as: 'ltr',\n      bn: 'ltr',\n      zb: 'ltr',\n      ab: 'ltr',\n      be: 'ltr',\n      bg: 'ltr',\n      kk: 'ltr',\n      mk: 'ltr',\n      ru: 'ltr',\n      uk: 'ltr',\n      hi: 'ltr',\n      mr: 'ltr',\n      ne: 'ltr',\n      ko: 'ltr',\n      ma: 'ltr',\n      am: 'ltr',\n      ti: 'ltr',\n      ka: 'ltr',\n      el: 'ltr',\n      gu: 'ltr',\n      pa: 'ltr',\n      he: 'rtl',\n      iw: 'rtl',\n      yi: 'rtl',\n      ja: 'ltr',\n      km: 'ltr',\n      kn: 'ltr',\n      lo: 'ltr',\n      af: 'ltr',\n      ay: 'ltr',\n      bs: 'ltr',\n      ca: 'ltr',\n      ch: 'ltr',\n      cs: 'ltr',\n      cy: 'ltr',\n      da: 'ltr',\n      de: 'ltr',\n      en: 'ltr',\n      eo: 'ltr',\n      es: 'ltr',\n      et: 'ltr',\n      eu: 'ltr',\n      fi: 'ltr',\n      fj: 'ltr',\n      fo: 'ltr',\n      fr: 'ltr',\n      fy: 'ltr',\n      ga: 'ltr',\n      gl: 'ltr',\n      gn: 'ltr',\n      gv: 'ltr',\n      hr: 'ltr',\n      ht: 'ltr',\n      hu: 'ltr',\n      id: 'ltr',\n      in: 'ltr',\n      is: 'ltr',\n      it: 'ltr',\n      kl: 'ltr',\n      la: 'ltr',\n      lb: 'ltr',\n      ln: 'ltr',\n      lt: 'ltr',\n      lv: 'ltr',\n      mg: 'ltr',\n      mh: 'ltr',\n      mo: 'ltr',\n      ms: 'ltr',\n      mt: 'ltr',\n      na: 'ltr',\n      nb: 'ltr',\n      nd: 'ltr',\n      nl: 'ltr',\n      nn: 'ltr',\n      no: 'ltr',\n      nr: 'ltr',\n      ny: 'ltr',\n      om: 'ltr',\n      pl: 'ltr',\n      pt: 'ltr',\n      qu: 'ltr',\n      rm: 'ltr',\n      rn: 'ltr',\n      ro: 'ltr',\n      rw: 'ltr',\n      sg: 'ltr',\n      sk: 'ltr',\n      sl: 'ltr',\n      sm: 'ltr',\n      so: 'ltr',\n      sq: 'ltr',\n      ss: 'ltr',\n      st: 'ltr',\n      sv: 'ltr',\n      sw: 'ltr',\n      tl: 'ltr',\n      tn: 'ltr',\n      to: 'ltr',\n      tr: 'ltr',\n      ts: 'ltr',\n      ve: 'ltr',\n      vi: 'ltr',\n      xh: 'ltr',\n      zu: 'ltr',\n      ds: 'ltr',\n      gs: 'ltr',\n      hs: 'ltr',\n      me: 'ltr',\n      ni: 'ltr',\n      ns: 'ltr',\n      te: 'ltr',\n      tk: 'ltr',\n      tm: 'ltr',\n      tp: 'ltr',\n      tv: 'ltr',\n      ml: 'ltr',\n      my: 'ltr',\n      nq: 'ltr',\n      or: 'ltr',\n      si: 'ltr',\n      ta: 'ltr',\n      dv: 'rtl',\n      th: 'ltr',\n      dz: 'ltr'\n    };\n\n    const getDirectionSymbol = dir => (dir === 'ltr') ? LRI : RLI;\n\n    // title, description and language tags (like \"en\" or \"en-US\") are treated differently\n    if (!['title', 'description'].includes(key) && !/^[A-Za-z]{2}(-[A-Za-z]{2})?$/.test(key)) {\n      return getDirectionSymbol(source[key].toString().getDirection()) + source[key];\n    }\n\n    if (/^[A-Za-z]{2}(-[A-Za-z]{2})?$/.test(key)) {\n      // Language tags can be compound like ar-EG or en-US, split when needed\n      // Also, we ignore the case for language tags\n      const lookupKey = (key.includes('-')) ? key.split('-')[0] : key.toLowerCase();\n      const dir = TABLE[lookupKey];\n      if (dir) return getDirectionSymbol(dir) + source[key];\n      return getDirectionSymbol('ltr') + source[key];\n    }\n\n    let direction;\n    let lang;\n\n    if (!Array.isArray(atContext)) {\n      atContext = [atContext];\n    }\n\n    atContext.forEach(e => {\n      if (typeof e === 'object') {\n        if (e['@direction']) direction = e['@direction'];\n        if (e['@language']) lang = e['@language'];\n      }\n    });\n\n    if (key === 'title' || key === 'description') {\n      if (direction) return getDirectionSymbol(direction) + source[key];\n      if (lang) {\n        const lookupKey = (lang.includes('-')) ? lang.split('-')[0] : lang.toLowerCase();\n        const dir = TABLE[lookupKey];\n        if (dir) return getDirectionSymbol(dir) + source[key];\n        return getDirectionSymbol('ltr') + source[key];\n      }\n    }\n\n    return getDirectionSymbol(source[key].toString().getDirection()) + source[key];\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\n\nexport const DialogTemplate = (props) => {\n    const title = props.title ?? \"Default Title\";\n    const description = props.description ?? \"Default description, please override.\";\n    const children = props.children ?? <></>;\n\n    const cancelText = props.cancelText ?? \"Cancel\";\n    const onCancel = props.onCancel ?? (() => { });\n\n    const submitText = props.submitText ?? \"Submit\";\n    const onSubmit = props.onSubmit ?? (() => { });\n    const hasSubmit=props.hasSubmit ?? true\n    let keysDown = {};\n    window.onkeydown = function (e) {\n        keysDown[e.key] = true;\n        if (keysDown[\"Control\"] && keysDown[\"Enter\"]) {\n            document.getElementById(\"submitButton\").click();\n        }\n    }\n\n    window.onkeyup = function (e) {\n        keysDown[e.key] = false;\n    }\n\n    return (<div className=\"flex bg-gray-400 bg-opacity-50 w-full h-full absolute top-0 left-0 justify-center items-center z-10 text-white\">\n        <div className=\"bg-gray-500 w-1/3 flex flex-col justify-start rounded-xl shadow-xl p-4 max-h-screen\">\n            <div className=\"flex flex-row justify-start items-center  \">\n                <h1 className=\"text-xl font-bold flex-grow pl-2\">{title}</h1>\n            </div>\n            <h2 className=\"text-gray-400 py-2 pl-2\">{description}</h2>\n            <div className=\"overflow-auto p-2\">\n                {children}\n            </div>\n            <div className=\"flex justify-end pt-4 p-2\">\n                <button className=\"text-white bg-gray-500 p-2 mr-1 rounded-md\" onClick={() => { onCancel(); }}>{cancelText}</button>\n                {hasSubmit&& <button id=\"submitButton\" className=\"flex text-white bg-blue-500 p-2 rounded-md\" onClick={() => onSubmit()}>{submitText}</button>}\n            </div>\n        </div>\n    </div>);\n};\n\n","const jsonld = require(\"jsonld\")\nconst Ajv = require(\"ajv\")\nconst addFormats = require(\"ajv-formats\")\nconst apply = require('ajv-formats-draft2019')\nconst lzs = require('lz-string')\n\nconst coreAssertions = require(\"./shared\")\nconst tdSchema = require(\"./td-schema.json\")\nconst fullTdSchema = require(\"./td-schema-full.json\")\nconst tmSchema = require(\"./tm-schema.json\")\n\nconst jsonValidator = require('json-dup-key-validator')\n\n\nexport { tdValidator, tmValidator, coreAssertions , compress, decompress, checkTypos }\n\n/**\n * A function that provides the core functionality of the TD Playground.\n * @param {string} tdString The Thing Description to check as a string.\n * @param {function} logFunc (string) => void; Callback used to log the validation progress.\n * @param {object} options additional options, which checks should be executed\n * @returns {Promise<object>} Results of the validation as {report, details, detailComments} object\n */\nfunction tdValidator(tdString, logFunc, {checkDefaults = true, checkJsonLd = true})\n{\n    return new Promise((res, rej) => {\n\n        // check input\n        if (typeof tdString !== \"string\") {\n            rej(\"Thing Description input should be a String\")\n        }\n\n        if (checkDefaults === undefined) {\n            checkDefaults = true\n        }\n        if (checkJsonLd === undefined) {\n            checkJsonLd = true\n        }\n        if (typeof logFunc !== \"function\") {\n            rej(\"Expected logFunc to be a function\")\n        }\n\n        // report that is returned by the function, possible values for every property:\n        // null -> not tested, \"passed\", \"failed\", \"warning\"\n        const report = {\n            json: null,\n            schema: null,\n            defaults: null,\n            jsonld: null,\n            additional: null\n        }\n        // changing the two following objects implies adjusting the tests accordingly\n        const details = {\n            enumConst: null,\n            propItems: null,\n            security: null,\n            propUniqueness: null,\n            multiLangConsistency: null,\n            linksRelTypeCount: null,\n            readWriteOnly: null,\n            uriVariableSecurity: null\n        }\n\n        const detailComments = {\n            enumConst: \"Checking whether a data schema has enum and const at the same time.\",\n            propItems: \"Checking whether a data schema has an object but not properties or array but no items.\",\n            security: \"Check if used Security definitions are properly defined previously.\",\n            propUniqueness: \"Checking whether in one interaction pattern there are duplicate names, e.g. two properties called temp.\",\n            multiLangConsistency: \"Checks whether all titles and descriptions have the same language fields.\",\n            linksRelTypeCount: \"Checks whether rel:type is used more than once in the links array\",\n            readWriteOnly: \"Warns if a property has readOnly or writeOnly set to true conflicting with another property.\",\n            uriVariableSecurity: \"Checks if the name of an APIKey security scheme with in:uri show up in href and does not conflict with normal uriVariables\"\n        }\n\n        const validationErrors ={\n            json: null,\n            schema: null\n        }\n\n        let tdJson\n        try {\n            tdJson = JSON.parse(tdString)\n            report.json = \"passed\"\n        } catch (err) {\n            report.json = \"failed\"\n            logFunc(\"X JSON validation failed:\")\n            validationErrors.json = err.message;\n            logFunc(err)\n\n            res({report, details, detailComments, validationErrors})\n        }\n\n        let ajv = new Ajv({strict: false}) // options can be passed, e.g. {allErrors: true}\n\n        // ajv = addFormats(ajv) // ajv does not support formats by default anymore\n        ajv = apply(ajv) // new formats that include iri\n\n\n        ajv.addSchema(tdSchema, 'td')\n        const valid = ajv.validate('td', tdJson)\n        // used to be var valid = ajv.validate('td', e.detail);\n        if (valid) {\n\n            report.schema = \"passed\"\n\n            // check with full schema\n            if (checkDefaults) {\n                ajv.addSchema(fullTdSchema, 'fulltd')\n                const fullValid = ajv.validate('fulltd', tdJson)\n                if (fullValid) {\n                    report.defaults = \"passed\"\n                } else {\n                    report.defaults = \"warning\"\n                    logFunc(\"Optional validation failed:\")\n                    logFunc(\"> \" + ajv.errorsText(filterErrorMessages(ajv.errors)))\n                    res({report, details, detailComments, validationErrors})\n                }\n            }\n\n            // do additional checks\n            checkEnumConst(tdJson)\n            checkPropItems(tdJson)\n            checkReadWriteOnly(tdJson)\n            details.security = evalAssertion(coreAssertions.checkSecurity(tdJson))\n            details.propUniqueness = evalAssertion(coreAssertions.checkPropUniqueness(tdString))\n            if (details.propUniqueness === \"passed\") {\n                details.propUniqueness = checkSecPropUniqueness(tdString, tdJson)\n            } else {\n                checkSecPropUniqueness(tdString, tdJson)\n            }\n            details.multiLangConsistency = evalAssertion(coreAssertions.checkMultiLangConsistency(tdJson))\n            details.linksRelTypeCount = evalAssertion(coreAssertions.checkLinksRelTypeCount(tdJson))\n            details.uriVariableSecurity = evalAssertion(coreAssertions.checkUriSecurity(tdJson))\n\n            // determine additional check state\n            // passed + warning -> warning\n            // passed AND OR warning + error -> error\n            report.additional = \"passed\"\n            Object.keys(details).forEach(prop => {\n                if (details[prop] === \"warning\" && report.additional === \"passed\") {\n                    report.additional = \"warning\"\n                } else if (details[prop] === \"failed\" && report.additional !== \"failed\") {\n                    report.additional = \"failed\"\n                }\n            })\n\n        } else {\n\n            report.schema = \"failed\"\n            logFunc(\"X JSON Schema validation failed:\")\n            validationErrors.schema=  ajv.errorsText(filterErrorMessages(ajv.errors))\n            logFunc('> ' + validationErrors.schema)\n\n            res({report, details, detailComments, validationErrors })\n        }\n\n        // json ld validation\n        if (checkJsonLd) {\n            jsonld.toRDF(tdJson, {\n                format: 'application/nquads'\n            }).then(nquads => {\n                report.jsonld = \"passed\"\n                res({report, details, detailComments})\n            }, err => {\n                report.jsonld = \"failed\"\n                logFunc(\"X JSON-LD validation failed:\")\n                logFunc(\"Hint: Make sure you have internet connection available.\")\n                logFunc('> ' + err)\n                res({report, details, detailComments})\n            })\n        } else {\n            res({report, details, detailComments})\n        }\n\n\n        // ************ functions ***************\n\n        /** checking whether a data schema has enum and const at the same and displaying a warning in case there are */\n        function checkEnumConst(td) {\n            details.enumConst = \"passed\"\n            if (td.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tdProperties = Object.keys(td.properties)\n                for (let i = 0; i < tdProperties.length; i++) {\n                    const curPropertyName = tdProperties[i]\n                    const curProperty = td.properties[curPropertyName]\n                    if (curProperty.hasOwnProperty(\"enum\") && curProperty.hasOwnProperty(\"const\")) {\n                        details.enumConst = \"warning\"\n                        logFunc('! Warning: In property ' + curPropertyName +\n                            ' enum and const are used at the same time, the values in enum' +\n                            ' can never be valid in the received JSON value')\n                    }\n                }\n            }\n            // checking actions\n            if (td.hasOwnProperty(\"actions\")) {\n                let tdActions = Object.keys(td.actions)\n                for (let i = 0; i < tdActions.length; i++) {\n                    const curActionName = tdActions[i]\n                    const curAction = td.actions[curActionName]\n                    if (curAction.hasOwnProperty(\"input\")) {\n                        const curInput = curAction.input\n                        if (curInput.hasOwnProperty(\"enum\") && curInput.hasOwnProperty(\"const\")) {\n                            details.enumConst = \"warning\"\n                            logFunc('! Warning: In the input of action ' + curActionName +\n                                ' enum and const are used at the same time, the values in enum can' +\n                                ' never be valid in the received JSON value')\n                        }\n                    }\n                    if (curAction.hasOwnProperty(\"output\")) {\n                        const curOutput = curAction.output\n                        if (curOutput.hasOwnProperty(\"enum\") && curOutput.hasOwnProperty(\"const\")) {\n                            details.enumConst = \"warning\"\n                            logFunc('! Warning: In the output of action ' + curActionName +\n                                ' enum and const are used at the same time, the values in enum can' +\n                                ' never be valid in the received JSON value')\n\n                        }\n                    }\n                }\n            }\n            // checking events\n            if (td.hasOwnProperty(\"events\")) {\n                let tdEvents = Object.keys(td.events)\n                for (let i = 0; i < tdEvents.length; i++) {\n                    const curEventName = tdEvents[i]\n                    const curEvent = td.events[curEventName]\n                    if (curEvent.hasOwnProperty(\"enum\") && curEvent.hasOwnProperty(\"const\")) {\n                        details.enumConst = \"warning\"\n                        logFunc('! Warning: In event ' + curEventName +\n                            ' enum and const are used at the same time, the' +\n                            ' values in enum can never be valid in the received JSON value')\n                    }\n                }\n            }\n            return\n        }\n\n        /**\n         * checking whether a data schema has object but not properties, array but no items\n         * @param {object} td The TD under test\n         */\n        function checkPropItems(td) {\n            details.propItems = \"passed\"\n\n            if (td.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tdProperties = Object.keys(td.properties)\n                for (let i = 0; i < tdProperties.length; i++) {\n                    const curPropertyName = tdProperties[i]\n                    const curProperty = td.properties[curPropertyName]\n\n                    if (curProperty.hasOwnProperty(\"type\")) {\n                        if ((curProperty.type === \"object\") && !(curProperty.hasOwnProperty(\"properties\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', the type is object but its properties are not specified')\n                        }\n                        if ((curProperty.type === \"array\") && !(curProperty.hasOwnProperty(\"items\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', the type is array but its items are not specified')\n                        }\n                    }\n                }\n            }\n            // checking actions\n            if (td.hasOwnProperty(\"actions\")) {\n                let tdActions = Object.keys(td.actions)\n                for (let i = 0; i < tdActions.length; i++) {\n                    const curActionName = tdActions[i]\n                    const curAction = td.actions[curActionName]\n\n                    if (curAction.hasOwnProperty(\"input\")) {\n                        const curInput = curAction.input\n                        if (curInput.hasOwnProperty(\"type\")) {\n                            if ((curInput.type === \"object\") && !(curInput.hasOwnProperty(\"properties\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the input of action ' + curActionName +\n                                    ', the type is object but its properties are not specified')\n                            }\n                            if ((curInput.type === \"array\") && !(curInput.hasOwnProperty(\"items\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is array but its items are not specified')\n                            }\n                        }\n                    }\n                    if (curAction.hasOwnProperty(\"output\")) {\n                        const curOutput = curAction.output\n                        if (curOutput.hasOwnProperty(\"type\")) {\n                            if ((curOutput.type === \"object\") && !(curOutput.hasOwnProperty(\"properties\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is object but its properties are not specified')\n                            }\n                            if ((curOutput.type === \"array\") && !(curOutput.hasOwnProperty(\"items\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is array but its items are not specified')\n                            }\n                        }\n                    }\n                }\n            }\n            // checking events\n            if (td.hasOwnProperty(\"events\")) {\n                let tdEvents = Object.keys(td.events)\n                for (let i = 0; i < tdEvents.length; i++) {\n                    const curEventName = tdEvents[i]\n                    const curEvent = td.events[curEventName]\n\n                    if (curEvent.hasOwnProperty(\"type\")) {\n                        if ((curEvent.type === \"object\") && !(curEvent.hasOwnProperty(\"properties\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In event ' + curEventName +\n                                ', the type is object but its properties are not specified')\n                        }\n                        if ((curEvent.type === \"array\") && !(curEvent.hasOwnProperty(\"items\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In event ' + curEventName +\n                                ', the type is array but its items are not specified')\n\n                        }\n                    }\n\n                }\n            }\n            return\n        }\n\n        /**\n         * Warns if a property has readOnly or writeOnly set to true conflicting with another property.\n         * @param {object} td The TD under test\n         */\n        function checkReadWriteOnly(td) {\n            details.readWriteOnly = \"passed\"\n\n            if (td.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tdProperties = Object.keys(td.properties)\n                for (let i = 0; i < tdProperties.length; i++) {\n                    const curPropertyName = tdProperties[i]\n                    const curProperty = td.properties[curPropertyName]\n\n                    // if readOnly is set\n                    if (curProperty.hasOwnProperty(\"readOnly\") && curProperty.readOnly === true) {\n                        // check if both readOnly and writeOnly are true\n                        if (curProperty.hasOwnProperty(\"writeOnly\") && curProperty.writeOnly === true) {\n                            details.readWriteOnly = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', both readOnly and writeOnly are set to true!')\n                        }\n\n                        // check forms if op writeProperty is set\n                        if (curProperty.hasOwnProperty(\"forms\")) {\n                            for (const formElIndex in curProperty.forms) {\n                                if (curProperty.forms.hasOwnProperty(formElIndex)) {\n                                    const formEl = curProperty.forms[formElIndex]\n                                    if (formEl.hasOwnProperty(\"op\")) {\n                                        if ((typeof formEl.op === \"string\" && formEl.op === \"writeproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some(el => (el === \"writeproperty\")))) {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], readOnly is set but the op property contains \"writeproperty\"')\n                                        }\n                                    } else {\n                                        details.readWriteOnly = \"warning\"\n                                        logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                            '], readOnly is set but a form op property defaults to [\"writeproperty\", \"readproperty\"]')\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    // if writeOnly is set\n                    if (curProperty.hasOwnProperty(\"writeOnly\") && curProperty.writeOnly === true) {\n\n                        // check forms if op readProperty is set\n                        if (curProperty.hasOwnProperty(\"forms\")) {\n                            for (const formElIndex in curProperty.forms) {\n                                if (curProperty.forms.hasOwnProperty(formElIndex)) {\n                                    const formEl = curProperty.forms[formElIndex]\n                                    if (formEl.hasOwnProperty(\"op\")) {\n                                        if ((typeof formEl.op === \"string\" && formEl.op === \"readproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some(el => (el === \"readproperty\")))) {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], writeOnly is set but the op property contains \"readproperty\"')\n                                        } else if ((typeof formEl.op === \"string\" && formEl.op === \"observeproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some(el => (el === \"observeproperty\")))) {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], writeOnly is set but the op property contains \"observeproperty\"')\n                                        }\n                                    } else {\n                                        details.readWriteOnly = \"warning\"\n                                        logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                            '], writeOnly is set but a form op property defaults to [\"writeproperty\", \"readproperty\"]')\n                                    }\n                                }\n                            }\n                        }\n\n                        // check if observable is also set\n                        if (curProperty.hasOwnProperty(\"observable\") && curProperty.observable === true) {\n                            details.readWriteOnly = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', both writeOnly and observable are set to true!')\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Warns if security Definitions has no unique keys\n         * @param {object} tdStr The TD under test as string\n         */\n        function checkSecPropUniqueness(tdStr, td) {\n\n            let result = \"passed\"\n            try {\n                // checking whether there are securityDefinitions at all\n                jsonValidator.parse(tdStr, false)\n            } catch (error) {\n                // there is a duplicate somewhere\n\n                // convert it into string to be able to process it\n                // error is of form = Error: Syntax error: duplicated keys \"overheating\" near ting\": {\n                const errorString = error.toString()\n                // to get the name, we need to remove the quotes around it\n                const startQuote = errorString.indexOf('\"')\n                // slice to remove the part before the quote\n                const restString = errorString.slice(startQuote + 1)\n                // find where the interaction name ends\n                const endQuote = restString.indexOf('\"')\n                // finally get the interaction name\n                const securitySchemeName = restString.slice(0, endQuote)\n\n                if (td.securityDefinitions.hasOwnProperty(securitySchemeName)) {\n                    result = \"failed\"\n                    logFunc(\"KO Error: The securityDefinitions contain a duplicate\")\n                }\n            }\n\n            return result\n        }\n\n        /**\n         * Evaluates whether an assertion function contains a failed check\n         * Whether assertions are not-implemented or passed does not matter\n         * Logs the comment\n         * @param {Array} results Array of objects with props \"ID\", \"Status\" and optionally \"Comment\"\n         * @returns \"passed\" if no check failed, \"failed\" if one or more checks failed\n         */\n        function evalAssertion(results) {\n            let out = \"passed\"\n            results.forEach(resultobj => {\n                if (resultobj.Status === \"fail\") {\n                    out = \"failed\"\n                    logFunc(\"KO Error: Assertion: \" + resultobj.ID)\n                    logFunc(resultobj.Comment)\n                }\n            })\n            return out\n        }\n\n        /**\n         * Removes duplicate error messages, as these are produced\n         * otherwise, especially for \"oneOf\" schemes\n         * @param {ajv.ErrorObject[]} errors\n         */\n        function filterErrorMessages(errors) {\n\n            const output = []\n            errors.forEach(el => {\n                if (!output.some(ce => (ce.dataPath === el.dataPath && ce.message === el.message))) {\n                    output.push(el)\n                }\n            })\n            return output\n        }\n    })\n}\n/**\n * A function that provides the core functionality of the TD Playground.\n * @param {string} tmString The Thing Model to check as a string.\n * @param {function} logFunc (string) => void; Callback used to log the validation progress.\n * @param {object} options additional options, which checks should be executed\n * @returns {Promise<object>} Results of the validation as {report, details, detailComments} object\n */\nfunction tmValidator(tmString, logFunc, { checkDefaults=true, checkJsonLd=true }) {\n    return new Promise( (res, rej) => {\n\n        // check input\n        if (typeof tmString !== \"string\") {rej(\"Thing Model input should be a String\")}\n\n        if (checkDefaults === undefined) {\n            checkDefaults = true\n        }\n        if (checkJsonLd === undefined) {\n            checkJsonLd = true\n        }\n        if (typeof logFunc !== \"function\") {rej(\"Expected logFunc to be a function\")}\n\n        // report that is returned by the function, possible values for every property:\n        // null -> not tested, \"passed\", \"failed\", \"warning\"\n        const report = {\n            json: null,\n            schema: null,\n            defaults: null,\n            jsonld: null,\n            additional: null\n        }\n        // changing the two following objects implies adjusting the tests accordingly\n        const details = {\n            enumConst: null,\n            propItems: null,\n            propUniqueness: null,\n            multiLangConsistency: null,\n            linksRelTypeCount: null,\n            readWriteOnly: null,\n            tmOptionalPointer: null\n        }\n\n        const detailComments = {\n            enumConst: \"Checking whether a data schema has enum and const at the same time.\",\n            propItems: \"Checking whether a data schema has an object but not properties or array but no items.\",\n            propUniqueness: \"Checking whether in one interaction pattern there are duplicate names, e.g. two properties called temp.\",\n            multiLangConsistency: \"Checks whether all titles and descriptions have the same language fields.\",\n            linksRelTypeCount: \"Checks whether rel:type is used more than once in the links array\",\n            readWriteOnly: \"Warns if a property has readOnly or writeOnly set to true conflicting with another property.\",\n            tmOptionalPointer: \"Checking whether tm:optional points to an actual affordance\"\n        }\n\n        let tmJson\n        try {\n            tmJson = JSON.parse(tmString)\n            report.json = \"passed\"\n        }\n        catch (err) {\n            report.json = \"failed\"\n            logFunc(\"X JSON validation failed:\")\n            logFunc(err)\n\n            res({report, details, detailComments})\n        }\n\n        let ajv = new Ajv({strict: false}) // options can be passed, e.g. {allErrors: true}\n        ajv = addFormats(ajv) // ajv does not support formats by default anymore\n        ajv = apply(ajv) // new formats that include iri\n\n        ajv.addSchema(tmSchema, 'tm')\n        const valid = ajv.validate('tm', tmJson)\n        // used to be var valid = ajv.validate('td', e.detail);\n        if (valid) {\n\n            report.schema = \"passed\"\n\n            // do additional checks\n            checkEnumConst(tmJson)\n            checkPropItems(tmJson)\n            checkReadWriteOnly(tmJson)\n            // ! no need to do security checking\n            // details.security = evalAssertion(coreAssertions.checkSecurity(tmJson))\n            details.propUniqueness = evalAssertion(coreAssertions.checkPropUniqueness(tmString))\n            if (details.propUniqueness === \"passed\") {\n                details.propUniqueness = checkSecPropUniqueness(tmString, tmJson)\n            }\n            else {\n                checkSecPropUniqueness(tmString, tmJson)\n            }\n            details.multiLangConsistency = evalAssertion(coreAssertions.checkMultiLangConsistency(tmJson))\n            details.linksRelTypeCount = evalAssertion(coreAssertions.checkLinksRelTypeCount(tmJson))\n            details.tmOptionalPointer = evalAssertion(coreAssertions.checkTmOptionalPointer(tmJson))\n\n            // determine additional check state\n            // passed + warning -> warning\n            // passed AND OR warning + error -> error\n            report.additional = \"passed\"\n            Object.keys(details).forEach( prop => {\n                if (details[prop] === \"warning\" && report.additional === \"passed\") {\n                    report.additional = \"warning\"\n                }\n                else if (details[prop] === \"failed\" && report.additional !== \"failed\") {\n                    report.additional = \"failed\"\n                }\n            })\n\n        } else {\n\n            report.schema = \"failed\"\n            logFunc(\"X JSON Schema validation failed:\")\n\n            logFunc('> ' + ajv.errorsText(filterErrorMessages(ajv.errors)))\n\n            res({report, details, detailComments})\n        }\n\n        // json ld validation\n        if(checkJsonLd) {\n            jsonld.toRDF(tmJson, {\n                format: 'application/nquads'\n            }).then( nquads => {\n                report.jsonld = \"passed\"\n                res({report, details, detailComments})\n            }, err => {\n                report.jsonld =  \"failed\"\n                logFunc(\"X JSON-LD validation failed:\")\n                logFunc(\"Hint: Make sure you have internet connection available.\")\n                logFunc('> ' + err)\n                res({report, details, detailComments})\n            })\n        }\n        else {\n            res({report, details, detailComments})\n        }\n\n\n        // ************ functions ***************\n\n        /** checking whether a data schema has enum and const at the same and displaying a warning in case there are */\n        function checkEnumConst(tm) {\n            details.enumConst = \"passed\"\n            if (tm.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tmProperties = Object.keys(tm.properties)\n                for (let i = 0; i < tmProperties.length; i++) {\n                    const curPropertyName = tmProperties[i]\n                    const curProperty = tm.properties[curPropertyName]\n                    if (curProperty.hasOwnProperty(\"enum\") && curProperty.hasOwnProperty(\"const\")) {\n                        details.enumConst = \"warning\"\n                        logFunc('! Warning: In property ' + curPropertyName +\n                            ' enum and const are used at the same time, the values in enum' +\n                            ' can never be valid in the received JSON value')\n                    }\n                }\n            }\n            // checking actions\n            if (tm.hasOwnProperty(\"actions\")) {\n                let tmActions = Object.keys(tm.actions)\n                for (let i = 0; i < tmActions.length; i++) {\n                    const curActionName = tmActions[i]\n                    const curAction = tm.actions[curActionName]\n                    if (curAction.hasOwnProperty(\"input\")) {\n                        const curInput = curAction.input\n                        if (curInput.hasOwnProperty(\"enum\") && curInput.hasOwnProperty(\"const\")) {\n                            details.enumConst = \"warning\"\n                            logFunc('! Warning: In the input of action ' + curActionName +\n                                ' enum and const are used at the same time, the values in enum can' +\n                                ' never be valid in the received JSON value')\n                        }\n                    }\n                    if (curAction.hasOwnProperty(\"output\")) {\n                        const curOutput = curAction.output\n                        if (curOutput.hasOwnProperty(\"enum\") && curOutput.hasOwnProperty(\"const\")) {\n                            details.enumConst = \"warning\"\n                            logFunc('! Warning: In the output of action ' + curActionName +\n                                ' enum and const are used at the same time, the values in enum can' +\n                                ' never be valid in the received JSON value')\n\n                        }\n                    }\n                }\n            }\n            // checking events\n            if (tm.hasOwnProperty(\"events\")) {\n                let tmEvents = Object.keys(tm.events)\n                for (let i = 0; i < tmEvents.length; i++) {\n                    const curEventName = tmEvents[i]\n                    const curEvent = tm.events[curEventName]\n                    if (curEvent.hasOwnProperty(\"enum\") && curEvent.hasOwnProperty(\"const\")) {\n                        details.enumConst = \"warning\"\n                        logFunc('! Warning: In event ' + curEventName +\n                            ' enum and const are used at the same time, the' +\n                            ' values in enum can never be valid in the received JSON value')\n                    }\n                }\n            }\n            return\n        }\n\n        /**\n         * checking whether a data schema has object but not properties, array but no items\n         * @param {object} tm The TD under test\n         */\n        function checkPropItems(tm) {\n            details.propItems = \"passed\"\n\n            if (tm.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tmProperties = Object.keys(tm.properties)\n                for (let i = 0; i < tmProperties.length; i++) {\n                    const curPropertyName = tmProperties[i]\n                    const curProperty = tm.properties[curPropertyName]\n\n                    if (curProperty.hasOwnProperty(\"type\")) {\n                        if ((curProperty.type === \"object\") && !(curProperty.hasOwnProperty(\"properties\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', the type is object but its properties are not specified')\n                        }\n                        if ((curProperty.type === \"array\") && !(curProperty.hasOwnProperty(\"items\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', the type is array but its items are not specified')\n                        }\n                    }\n                }\n            }\n            // checking actions\n            if (tm.hasOwnProperty(\"actions\")) {\n                let tmActions = Object.keys(tm.actions)\n                for (let i = 0; i < tmActions.length; i++) {\n                    const curActionName = tmActions[i]\n                    const curAction = tm.actions[curActionName]\n\n                    if (curAction.hasOwnProperty(\"input\")) {\n                        const curInput = curAction.input\n                        if (curInput.hasOwnProperty(\"type\")) {\n                            if ((curInput.type === \"object\") && !(curInput.hasOwnProperty(\"properties\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the input of action ' + curActionName +\n                                    ', the type is object but its properties are not specified')\n                            }\n                            if ((curInput.type === \"array\") && !(curInput.hasOwnProperty(\"items\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is array but its items are not specified')\n                            }\n                        }\n                    }\n                    if (curAction.hasOwnProperty(\"output\")) {\n                        const curOutput = curAction.output\n                        if (curOutput.hasOwnProperty(\"type\")) {\n                            if ((curOutput.type === \"object\") && !(curOutput.hasOwnProperty(\"properties\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is object but its properties are not specified')\n                            }\n                            if ((curOutput.type === \"array\") && !(curOutput.hasOwnProperty(\"items\"))) {\n                                details.propItems = \"warning\"\n                                logFunc('! Warning: In the output of action ' + curActionName +\n                                    ', the type is array but its items are not specified')\n                            }\n                        }\n                    }\n                }\n            }\n            // checking events\n            if (tm.hasOwnProperty(\"events\")) {\n                let tmEvents = Object.keys(tm.events)\n                for (let i = 0; i < tmEvents.length; i++) {\n                    const curEventName = tmEvents[i]\n                    const curEvent = tm.events[curEventName]\n\n                    if (curEvent.hasOwnProperty(\"type\")) {\n                        if ((curEvent.type === \"object\") && !(curEvent.hasOwnProperty(\"properties\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In event ' + curEventName +\n                                ', the type is object but its properties are not specified')\n                        }\n                        if ((curEvent.type === \"array\") && !(curEvent.hasOwnProperty(\"items\"))) {\n                            details.propItems = \"warning\"\n                            logFunc('! Warning: In event ' + curEventName +\n                                ', the type is array but its items are not specified')\n\n                        }\n                    }\n\n                }\n            }\n            return\n        }\n\n        /**\n         * Warns if a property has readOnly or writeOnly set to true conflicting with another property.\n         * @param {object} tm The TD under test\n         */\n        function checkReadWriteOnly(tm) {\n            details.readWriteOnly = \"passed\"\n\n            if (tm.hasOwnProperty(\"properties\")) {\n                // checking properties\n                let tmProperties = Object.keys(tm.properties)\n                for (let i = 0; i < tmProperties.length; i++) {\n                    const curPropertyName = tmProperties[i]\n                    const curProperty = tm.properties[curPropertyName]\n\n                    // if readOnly is set\n                    if (curProperty.hasOwnProperty(\"readOnly\") && curProperty.readOnly === true) {\n                        // check if both readOnly and writeOnly are true\n                        if (curProperty.hasOwnProperty(\"writeOnly\") && curProperty.writeOnly === true) {\n                            details.readWriteOnly = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', both readOnly and writeOnly are set to true!')\n                        }\n\n                        // check forms if op writeProperty is set\n                        if (curProperty.hasOwnProperty(\"forms\")) {\n                            for(const formElIndex in curProperty.forms) {\n                                if (curProperty.forms.hasOwnProperty(formElIndex)) {\n                                    const formEl = curProperty.forms[formElIndex]\n                                    if(formEl.hasOwnProperty(\"op\")) {\n                                        if ((typeof formEl.op === \"string\" && formEl.op === \"writeproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some( el => (el === \"writeproperty\"))))\n                                        {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], readOnly is set but the op property contains \"writeproperty\"')\n                                        }\n                                    }\n                                    else {\n                                        details.readWriteOnly = \"warning\"\n                                        logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                            '], readOnly is set but a form op property defaults to [\"writeproperty\", \"readproperty\"]')\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    // if writeOnly is set\n                    if (curProperty.hasOwnProperty(\"writeOnly\") && curProperty.writeOnly === true) {\n\n                        // check forms if op readProperty is set\n                        if (curProperty.hasOwnProperty(\"forms\")) {\n                            for(const formElIndex in curProperty.forms) {\n                                if (curProperty.forms.hasOwnProperty(formElIndex)) {\n                                    const formEl = curProperty.forms[formElIndex]\n                                    if(formEl.hasOwnProperty(\"op\")) {\n                                        if ((typeof formEl.op === \"string\" && formEl.op === \"readproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some( el => (el === \"readproperty\"))))\n                                        {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], writeOnly is set but the op property contains \"readproperty\"')\n                                        }\n                                        else if ((typeof formEl.op === \"string\" && formEl.op === \"observeproperty\") ||\n                                            (typeof formEl.op === \"object\" && formEl.op.some( el => (el === \"observeproperty\"))))\n                                        {\n                                            details.readWriteOnly = \"warning\"\n                                            logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                                '], writeOnly is set but the op property contains \"observeproperty\"')\n                                        }\n                                    }\n                                    else {\n                                        details.readWriteOnly = \"warning\"\n                                        logFunc('! Warning: In property ' + curPropertyName + \" in forms[\" + formElIndex +\n                                            '], writeOnly is set but a form op property defaults to [\"writeproperty\", \"readproperty\"]')\n                                    }\n                                }\n                            }\n                        }\n\n                        // check if observable is also set\n                        if (curProperty.hasOwnProperty(\"observable\") && curProperty.observable === true) {\n                            details.readWriteOnly = \"warning\"\n                            logFunc('! Warning: In property ' + curPropertyName +\n                                ', both writeOnly and observable are set to true!')\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Warns if security Definitions has no unique keys\n         * @param {object} tmStr The TD under test as string\n         */\n        function checkSecPropUniqueness(tmStr, tm) {\n\n            let result = \"passed\"\n            try {\n                // checking whether there are securityDefinitions at all\n                jsonValidator.parse(tmStr, false)\n            }\n            catch (error) {\n                // there is a duplicate somewhere\n\n                // convert it into string to be able to process it\n                // error is of form = Error: Syntax error: duplicated keys \"overheating\" near ting\": {\n                const errorString = error.toString()\n                // to get the name, we need to remove the quotes around it\n                const startQuote = errorString.indexOf('\"')\n                // slice to remove the part before the quote\n                const restString = errorString.slice(startQuote + 1)\n                // find where the interaction name ends\n                const endQuote = restString.indexOf('\"')\n                // finally get the interaction name\n                const securitySchemeName = restString.slice(0, endQuote)\n\n                if (tm.securityDefinitions.hasOwnProperty(securitySchemeName)) {\n                    result = \"failed\"\n                    logFunc(\"KO Error: The securityDefinitions contain a duplicate\")\n                }\n            }\n\n            return result\n        }\n\n        /**\n         * Evaluates whether an assertion function contains a failed check\n         * Whether assertions are not-implemented or passed does not matter\n         * Logs the comment\n         * @param {Array} results Array of objects with props \"ID\", \"Status\" and optionally \"Comment\"\n         * @returns \"passed\" if no check failed, \"failed\" if one or more checks failed\n         */\n        function evalAssertion(results) {\n            let out = \"passed\"\n            results.forEach( resultobj => {\n                if (resultobj.Status === \"fail\") {\n                    out = \"failed\"\n                    logFunc(\"KO Error: Assertion: \" + resultobj.ID)\n                    logFunc(resultobj.Comment)\n                }\n            })\n            return out\n        }\n\n        /**\n         * Removes duplicate error messages, as these are produced\n         * otherwise, especially for \"oneOf\" schemes\n         * @param {ajv.ErrorObject[]} errors\n         */\n        function filterErrorMessages(errors) {\n\n            const output = []\n            errors.forEach( el => {\n                if(!output.some(ce => (ce.dataPath === el.dataPath && ce.message === el.message))) {\n                    output.push(el)\n                }\n            })\n            return output\n        }\n    })\n}\n\n/**\n * Transform an arbitrary string to another compressed URL-encoded string.\n * @param {string} data String to compress.\n * @returns {string} Compressed URL-encoded string.\n */\nfunction compress(data) {\n    return lzs.compressToEncodedURIComponent(data);\n}\n\n/**\n * Decompress a string compressed with the {@link compress} method.\n * @param {string} data Compressed URL-encoded string.\n * @returns {string} Original string.\n */\nfunction decompress(data) {\n    return lzs.decompressFromEncodedURIComponent(data);\n}\n\n// --------------------------------------------------\n\n// -------------------------------------------------- checkTypos\n\nconst REF = \"$ref\"\nconst PROPERTIES = \"properties\"\nconst ADDITONAL_PROPERTIES = \"additional_properties\"\nconst DATA_SCHEMA = \"dataSchema\"\nconst PATH = \"#/\"\nconst TYPO_LOOKUP_TABLE = createSchemaLookupTable(tdSchema)\n\n/**\n * Checks possible typos in a TD\n * @param {object} td The TD to apply typo check on\n * @returns List of possible typos where the typo consists of string value of typo itself and the message, another string value, to be prompted to the user for the fix\n */\nfunction checkTypos(td) {\n    const typos = []\n\n    const lookupTable = TYPO_LOOKUP_TABLE\n    const searchDepth = 1\n    const searchPath = PATH\n    let tdJson = {}\n\n    try {\n        tdJson = JSON.parse(td)\n    } catch(err) {\n        console.log(\"Error occurred while parsing JSON!\")\n    }\n\n    searchTypos(typos, tdJson, lookupTable, searchDepth, searchPath)\n\n    return typos\n}\n\n/**\n * Searching typos on a specific path and depth\n * @param {Array} typos The list that typo objects are stored\n * @param {object} tdJson JSON object of the TD\n * @param {Map} lookupTable The map that stores paths and their available word list according to their path depth\n * @param {integer} searchDepth The integer that decides the depth of the typo check search\n * @param {string} searchPath The string that decided the path of the typo check search\n */\nfunction searchTypos(typos, tdJson, lookupTable, searchDepth, searchPath) {\n    for (const key in tdJson) {\n        if (tdJson.hasOwnProperty(key)) {\n            const pathMap = lookupTable.get(searchDepth)\n            const wordSet = pathMap.get(searchPath)\n\n            if (wordSet.has(key)) {\n                continue\n            }\n\n            wordSet.forEach(word => {\n                if (doesTypoExist(key, word)) {\n                    typos.push({\n                        word: key,\n                        message: `Did you mean ${word}?`\n                    })\n\n                    return\n                }\n            })\n        }\n    }\n}\n\n/**\n * Creates a lookup table using JSON schema\n * @param {object} jsonSchema JSON Schema to create a lookup table from\n * @returns The map that constructs lookup table for typo check using TD Schema\n */\nfunction createSchemaLookupTable(jsonSchema) {\n    const lookupTable = new Map()\n    const filteredLookupTable = new Map()\n\n    findPathsInSchema(lookupTable, jsonSchema, PATH)\n\n    lookupTable.forEach((value, key) => {\n        if (value.size > 0) {\n            const pathDepth = (key.match(/\\//ig) || []).length\n\n            let pathDepthMap = filteredLookupTable.get(pathDepth)\n\n            if (pathDepthMap) {\n                pathDepthMap.set(key.replace(/^r/g, ''), value)\n                filteredLookupTable.set(pathDepth, pathDepthMap)\n            } else {\n                pathDepthMap = new Map()\n                pathDepthMap.set(key.replace(/^r/g, ''), value)\n                filteredLookupTable.set(pathDepth, pathDepthMap)\n            }\n        }\n    })\n\n    return filteredLookupTable\n}\n\n/**\n * Finds the paths under a parent path by parsing schema and adds them to a lookup table\n * @param {Map} lookupTable The map that stores the paths in the schema\n * @param {object} schema The schema to find the paths from\n * @param {string} path The parent path that search is going under\n */\nfunction findPathsInSchema(lookupTable, schema, path) {\n    const keys = new Set()\n\n    if (schema[REF]) {\n        if (path[0] === 'r' && schema[REF].includes(DATA_SCHEMA)) {\n            return\n        }\n\n        if (schema[REF].includes(DATA_SCHEMA)) {\n            path = 'r' + path\n        }\n\n        findPathsInSchema(getRefObjectOfSchema(tdSchema, schema[REF]), path)\n        return\n    }\n\n    if (schema['type'] === 'object') {\n        const properties = schema[PROPERTIES]\n        for (const key in properties) {\n            if (properties.hasOwnProperty(key)) {\n                if (key === REF) {\n                    if (path[0] === 'r' && properties[key].includes(DATA_SCHEMA)) {\n                        continue\n                    }\n\n                    if (properties[key].includes(DATA_SCHEMA)) {\n                        path = 'r' + path\n                    }\n\n                    findPathsInSchema(getRefObjectOfSchema(tdSchema, properties[key]), path)\n                    return\n                } else {\n                    findPathsInSchema(properties[key], `${path}${key}/`)\n                    keys.add(key)\n                }\n            }\n        }\n\n        const additionalProperties = schema[ADDITONAL_PROPERTIES]\n        for (const key in additionalProperties) {\n            if (additionalProperties.hasOwnProperty(key)) {\n                if (key === REF) {\n                    if (path[0] === 'r' && additionalProperties[key].includes(DATA_SCHEMA)) {\n                        continue\n                    }\n\n                    if (additionalProperties[key].includes(DATA_SCHEMA)) {\n                        path = 'r' + path\n                    }\n\n                    findPathsInSchema(getRefObjectOfSchema(tdSchema, additionalProperties[key]), `${path}*/`)\n                    return\n                }\n            }\n        }\n\n        putKeysToPath(lookupTable, path, keys)\n    }\n\n    if (schema['type'] === 'array') {\n        const items = schema['items']\n\n        for (const item in items) {\n            if (items.hasOwnProperty(item)) {\n                if (item === REF) {\n                    if (path[0] === 'r' && items[item].includes(DATA_SCHEMA)) {\n                        continue\n                    }\n\n                    if (items[item].includes(DATA_SCHEMA)) {\n                        path = 'r' + path\n                    }\n\n                    findPathsInSchema(getRefObjectOfSchema(tdSchema, items[item]), path)\n                    return\n                }\n            }\n        }\n\n        putKeysToPath(lookupTable, path, keys)\n    }\n\n    for (const key in schema) {\n        if (schema.hasOwnProperty(key)) {\n            if (['allOf', 'oneOf', 'anyOf'].includes(key)) {\n                if (Array.isArray(schema[key])) {\n                    schema[key].forEach(element => {\n                        findPathsInSchema(element, path)\n                    })\n                }\n            }\n        }\n    }\n}\n\n/**\n * Stores the keys under a specific path\n * @param {Map} lookupTable The map that stores the paths in the schema\n * @param {string} path The path that is owner of the current keys\n * @param {Set} keys The set of keys that is going to be put\n */\nfunction putKeysToPath(lookupTable, path, keys) {\n    let pathKeys = lookupTable.get(path)\n\n    if (pathKeys) {\n        const union = new Set(pathKeys)\n        keys.forEach(k => {\n            union.add(k)\n        })\n\n        lookupTable.set(path, union)\n    } else {\n        lookupTable.set(path, keys)\n    }\n}\n\n/**\n * Gets the reference object in the schema\n * @param {object} schema The object that represent the schema\n * @param {string} ref The reference value in the schema\n * @returns The reference object the ref maps to\n */\nfunction getRefObjectOfSchema(schema, ref) {\n    const splitRef = ref.split('/')\n    if (splitRef[0] !== '#') {\n        console.log('Parsing not implemented for between files')\n        return\n    }\n\n    let result = schema\n\n    for (let i = 1; i < splitRef.length; i++) {\n        result = result[splitRef[i]]\n    }\n\n    return result\n}\n\n// Minimum similarity value to be able to say that two words are similar\nconst SIMILARITY_THRESHOLD = 0.85\n\n// Maximum value of length difference between two words\nconst MAX_LENGTH_DIFFERENCE = 2\n\n/**\n * Checks whether typo exists or not by comparing similarity of the two words\n * @param {string} actual The property name of the TD entered by user\n * @param {string} desired The desired property name that is retrieved from TD Schema\n * @returns Boolean value that tell whether typo exists or not\n */\nfunction doesTypoExist(actual, desired) {\n    if (Math.abs(actual.length - desired.length) > MAX_LENGTH_DIFFERENCE) {\n        return false\n    }\n\n    const similarity = calculateSimilarity(actual, desired)\n    return similarity > SIMILARITY_THRESHOLD && similarity !== 1.0\n}\n\n/**\n * Similarity of words calculated using Jaro-Winkler algorithm\n * @param {string} actual The property name of the TD entered by user\n * @param {string} desired The desired propert name that is retrieved from TD Schema\n * @returns Similarity of value the two inputs\n */\nfunction calculateSimilarity(actual, desired) {\n    let m = 0\n\n    if (actual.length === 0 || desired.length === 0) {\n        return 0\n    }\n\n    if (actual === desired) {\n        return 1\n    }\n\n    const range = Math.floor(Math.max(actual.length, desired.length) / 2) - 1\n    const actualMatches = new Array(actual.length)\n    const desiredMatches = new Array(desired.length)\n\n    // check lower and upper bounds to find the matches\n    for (let i = 0; i < actual.length; i++) {\n        const lowerBound = (i >= range) ? i - range : 0\n        const upperBound = (i + range <= desired.length) ? (i + range) : (desired.length - 1)\n\n        for (let j = lowerBound; j <= upperBound; j++) {\n            if (actualMatches[i] !== true && desiredMatches[j] !== true && actual[i] === desired[j]) {\n                m++\n                actualMatches[i] = desiredMatches[j] = true\n                break\n            }\n        }\n    }\n\n    if (m === 0) {\n        return 0\n    }\n\n    let k = 0\n    let transpositionCount = 0\n\n    // count transpositions\n    for (let i = 0; i < actual.length; i++) {\n        if (actualMatches[i] === true) {\n            let j = 0\n            for (j = k; j < desired.length; j++) {\n                if (desiredMatches[j] === true) {\n                    k = j + 1\n                    break\n                }\n            }\n\n            if (actual[i] !== desired[j]) {\n                transpositionCount++\n            }\n        }\n    }\n\n    let similarity = ( (m / actual.length) + (m / desired.length) + ((m - (transpositionCount / 2) ) / m)) / 3\n    let l = 0\n    const p = 0.1\n\n    // strengthen the similarity if the words start with same letters\n    if (similarity < 0.7) {\n        while (actual[l] === desired[l] && l < 4) {\n            l++\n        }\n\n        similarity = similarity + l * p * (1 - similarity)\n    }\n\n    return similarity\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { checkIfFormIsInItem, hasForms } from \"../../util.js\";\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nexport const AddFormDialog = forwardRef((props, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    const type = props.type ?? \"\";\n    const name = type && type[0].toUpperCase() + type.slice(1);\n    const interaction = props.interaction ?? {};\n    const interactionName = props.interactionName ?? \"\";\n\n    useEffect(() => {\n    }, [display, context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const checkIfFormExists = (form) => {\n        if (hasForms(interaction)) {\n            return checkIfFormIsInItem(form, interaction)\n        }\n        return false\n    }\n\n    const addFormToInteraction = (form) => {\n        switch (type) {\n            case 'property':\n                context.addForm({ propName: interactionName, form: form });\n                break;\n            case 'action':\n                context.addActionForm({ actionName: interactionName, form: form });\n                break;\n            case 'event':\n                context.addEventForm({ eventName: interactionName, form: form });\n                break;\n            case 'thing':\n                let td = {}\n                try {\n                    td = JSON.parse(context.offlineTD);\n                } catch (_) { }\n                if (!hasForms(td)) {\n                    td.forms = [];\n                }\n                td.forms.push(form);\n                tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n                    context.updateValidationMessage(result);\n                    context.updateOfflineTD(JSON.stringify(td, null, 2));\n                }, err => {\n                    console.log(\"Error\");\n                    console.log(err);\n                })\n                break;\n            default: { }\n        }\n    }\n\n    const formSelection = operationsSelections(type);\n    const children = <>\n        <label className=\"text-sm text-gray-400 font-medium pl-3\">Operations:</label>\n        <div className=\"p-1\">\n            {formSelection}\n        </div>\n        <div className=\"p-1 pt-2\">\n            <label htmlFor=\"form-href\" className=\"text-sm text-gray-400 font-medium pl-2\">Href:</label>\n            <input\n                type=\"text\"\n                name=\"form-href\"\n                id=\"form-href\"\n                className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n                placeholder=\"http://example.com/href\"\n                onChange={() => { clearErrorMessage(); }}\n            />\n            <span id=\"form-href-info\" className=\"text-xs text-red-400 pl-2\"></span>\n        </div>\n    </>\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => {\n                    let form = {};\n                    form.op = operations(type).map(x => {\n                        return document.getElementById('form-' + x).checked ? document.getElementById('form-' + x).value : undefined\n                    }).filter(y => y !== undefined);\n\n                    const href = document.getElementById(\"form-href\").value;\n                    form.href = href !== \"\" ? href.trim() : \"/\";\n\n                    if (form.op.length === 0) {\n                        showErrorMessage(\"You have to select at least one operation ...\");\n                    } else if (checkIfFormExists(form)) {\n                        showErrorMessage(\"A Form for one of the selected operations already exists ...\");\n                    } else {\n                        addFormToInteraction(form);\n                        close();\n                    }\n                }}\n                submitText={\"Add\"}\n                children={children}\n                title={`Add ${name} Form`}\n                description={`Tell us how this ${name} can be interfaced by selecting operations below and providing an href.`}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\nconst showErrorMessage = (msg) => {\n    document.getElementById(\"form-href-info\").textContent = msg;\n    document.getElementById(\"form-href\").classList.remove(\"border-gray-600\");\n    document.getElementById(\"form-href\").classList.add(\"border-red-400\");\n}\n\nconst clearErrorMessage = () => {\n    document.getElementById(\"form-href\").classList.add(\"border-gray-600\");\n    document.getElementById(\"form-href\").classList.remove(\"border-red-400\");\n}\n\nconst operations = (type) => {\n    switch (type) {\n        case 'property': return [\n            \"writeproperty\",\n            \"readproperty\",\n            \"observeproperty\",\n            \"unobserveproperty\",\n        ];\n        case 'event': return [\n            \"subscribeevent\",\n            \"unsubscribeevent\",\n        ];\n        case 'action': return [\n            \"invokeaction\"\n        ];\n        case 'thing': return [\n            \"writeallproperties\",\n            \"readallproperties\",\n            \"writemultipleproperties\",\n            \"readmultipleproperties\",\n            \"observeallproperties\",\n            \"unobserveallproperties\"\n        ];\n        default: return [];\n    }\n}\n\nconst operationsSelections = (type) => {\n    return <div className=\"bg-gray-600 p-1 rounded-md\">\n        {operations(type).map((e) => formCheckbox(e))}\n    </div>\n};\n\nconst formCheckbox = (name) => {\n    const id = `form-${name}`;\n\n    return <div key={id} className=\"form-checkbox pl-2\">\n        {\n            name !== \"invokeaction\" ? <input id={id}\n                className=\"form-checkbox-input\"\n                type=\"checkbox\"\n                value={name}\n\n            /> : <input id={id}\n                className=\"form-checkbox-input\"\n                type=\"checkbox\"\n                value={name}\n                readOnly={name === 'invokeaction'}\n                checked={name === 'invokeaction'}\n                />\n        }\n        <label className=\"form-checkbox-label pl-2\" htmlFor={id}>{name}</label>\n    </div>;\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useImperativeHandle, useCallback } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { hasLinks, checkIfLinkIsInItem, getFileHandle, getFileHTML5, _readFileHTML5 } from \"../../util.js\";\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nlet error = \"\";\nlet tdJSON = {};\nlet oldtdJSON = {};\n\nexport const AddLinkTdDialog = forwardRef((props, ref) => {\n  const context = useContext(ediTDorContext);\n  const [display, setDisplay] = React.useState(() => { return false });\n  const [linkingMethod, setlinkingMethod] = React.useState(() => { return \"url\" });\n  const [currentLinkedTd, setCurrentLinkedTd] = React.useState(() => { return {} });\n\n\n  const interaction = props.interaction ?? {};\n  try {\n    oldtdJSON = tdJSON;\n    tdJSON = JSON.parse(context.offlineTD);\n    error = '';\n  } catch (e) {\n    error = e.message;\n    console.error(error);\n    tdJSON = oldtdJSON;\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      openModal: () => open(),\n      close: () => close()\n    }\n  });\n\n  const open = () => {\n    setDisplay(true);\n  };\n\n  const close = () => {\n    setDisplay(false);\n  };\n\n\n  const checkIfLinkExists = (link) => {\n    if (hasLinks(interaction)) {\n      return checkIfLinkIsInItem(link, interaction);\n    }\n    return false;\n  }\n\n  const addLinksToTd = (link) => {\n    let td = {};\n    try {\n      td = JSON.parse(context.offlineTD);\n    } catch (_) { }\n    if (!hasLinks(td)) {\n      td.links = [];\n    }\n    td.links.push(link);\n    tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n      context.updateOfflineTD(JSON.stringify(td, null, 2));\n      context.updateValidationMessage(result);\n    }, err => {\n      console.log(\"Error\");\n      console.log(err);\n    })\n  }\n\n  const hasNativeFS = useCallback(() => {\n    return (\n      \"chooseFileSystemEntries\" in window || \"showOpenFilePicker\" in window\n    );\n  }, []);\n\n  const linkingMethodChange = (linkingOption) => {\n    setlinkingMethod(linkingOption);\n    if (currentLinkedTd && linkingOption === 'url') {\n      setCurrentLinkedTd({});\n    }\n  }\n\n  const read = useCallback((file) => {\n    return file.text ? file.text() : _readFileHTML5(file);\n  }, []);\n\n  const openFile = useCallback(\n    async (_) => {\n\n      if (!hasNativeFS()) {\n        const file = await getFileHTML5();\n        if (file) {\n          document.getElementById(\"link-href\").value = \"./\" + file.name;\n          let td = await read(file);\n          setCurrentLinkedTd(JSON.parse(await td));\n        }\n        return;\n      }\n\n      let fileHandle;\n      try {\n        fileHandle = await getFileHandle();\n        const file = await fileHandle.getFile();\n        const href = \"./\" + file.name;\n        setCurrentLinkedTd(fileHandle);\n        document.getElementById(\"link-href\").value = href;\n      } catch (ex) {\n        const msg = \"We ran into an error trying to open your TD.\";\n        console.error(msg, ex);\n        alert(msg);\n      }\n    },\n    [hasNativeFS, read]\n  );\n\n  const RelationType = () => {\n    const relations = [\"icon\", \"service-doc\", \"alternate\", \"type\", \"tm:extends\",\n      \"proxy-to\", \"collection\", \"item\", \"predecessor-version\", \"controlledBy\"];\n    let index = 0;\n    const relationsHtml = relations.map((currentRelation) => {\n      index++;\n      return <option value={currentRelation} key={index} />\n    })\n    return relationsHtml\n  }\n\n  const children = <>\n    <label className=\"text-sm text-gray-400 font-medium pl-3\">Thing Description:</label>\n    <div className=\"p-1\">\n      {tdJSON[\"title\"]}\n    </div>\n    <div className=\"p-1 pt-2\">\n      <label htmlFor=\"rel\" className=\"text-sm text-gray-400 font-medium pl-2\">Relation:(select one of the proposed relations or type your custom relation)</label>\n      <input\n        list=\"relationType\"\n        type=\"text\"\n        name=\"rel\"\n        id=\"rel\"\n        className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n        placeholder=\"relation name\"\n      />\n      <datalist id=\"relationType\">\n        <RelationType></RelationType>\n      </datalist>\n\n      <span id=\"link-rel-info\" className=\"text-xs text-red-400 pl-2\"></span>\n    </div>\n    <div className=\"p-1 pt-2\">\n      <label htmlFor=\"link-href\" className=\"text-sm text-gray-400 font-medium pl-2 pr-2\" >Target ressource:</label>\n      <button className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2 h-9\" disabled={linkingMethod === 'upload'} onClick={() => { linkingMethodChange(\"upload\"); }}>From local machine</button>\n      <button className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2 h-9\" style={{ marginLeft: \"2%\" }} disabled={linkingMethod === 'url'} onClick={() => { linkingMethodChange(\"url\"); }}>Ressource url</button>\n      <div className=\"p-1 pt-4\" >\n        <input\n          type=\"text\"\n          name=\"link-href\"\n          id=\"link-href\"\n          className=\"border-gray-600 bg-gray-600 p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n          placeholder=\"The target ressource\"\n          onChange={() => { clearHrefErrorMessage(); }}\n          disabled={linkingMethod !== 'url'}\n        />\n        {linkingMethod === 'upload' && <button className=\"text-white bg-blue-500 cursor-pointer rounded-md p-2 h-9\" onClick={openFile} disabled={linkingMethod !== 'upload'} >\n          Open TD\n        </button>}\n      </div>\n      <span id=\"link-href-info\" className=\"text-xs text-red-400 pl-2\"></span>\n      <div>\n        <label htmlFor=\"type\" className=\"text-sm text-gray-400 font-medium pl-2\">Type:(select one of the proposed types or tape your custom type)</label>\n        <input\n          list=\"mediaType\"\n          type=\"text\"\n          name=\"type\"\n          id=\"type\"\n          className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n          placeholder=\"media type\"\n        />\n        <datalist id=\"mediaType\">\n          <option value=\"application/td+json\" />\n          <option value=\"image/jpeg\" />\n          <option value=\"text/csv\" />\n          <option value=\"video/mp4\" />\n        </datalist>\n      </div>\n    </div>\n  </>\n  if (display) {\n    return ReactDOM.createPortal(\n      <DialogTemplate\n        onCancel={close}\n        onSubmit={() => {\n          let link = {}\n          let linkedTd = {}\n          const rel = document.getElementById(\"rel\").value;\n          const href = document.getElementById(\"link-href\").value;\n          const type = document.getElementById(\"type\").value;\n          link.href = href !== \"\" ? href.trim() : \"/\";\n          let isValidUrl = true\n          try {\n            var url = new URL(href);\n          } catch (_) {\n            isValidUrl = false;\n          }\n          if (linkingMethod === \"url\" && isValidUrl && (url.protocol === \"http:\" || url.protocol === \"https:\")) {\n            try {\n              var httpRequest = new XMLHttpRequest();\n              httpRequest.open('GET', href, false);\n              httpRequest.send();\n              if (httpRequest.getResponseHeader('content-type').includes(\"application/td+json\")) {\n                const thingDescription = httpRequest.response;\n                let parsedTd = JSON.parse(thingDescription);\n                linkedTd[href] = parsedTd;\n              }\n            } catch (ex) {\n              const msg = \"We ran into an error trying to fetch your TD.\";\n              console.error(msg, ex);\n              linkedTd[href] = currentLinkedTd;\n            }\n          }\n          else {\n            linkedTd[href] = currentLinkedTd;\n          }\n          if (rel !== \"\") {\n            link.rel = rel.trim();\n          }\n          if (type !== \"\") {\n            link.type = type.trim();\n          }\n\n          if (href === \"\") {\n            showHrefErrorMessage(\"The href field is mandatory ...\");\n          }\n          else if (checkIfLinkExists(link)) {\n            showHrefErrorMessage(\"A Link with the target Thing Description already exists ...\");\n          }\n          else {\n            addLinksToTd(link);\n            context.addLinkedTd(linkedTd);\n            setCurrentLinkedTd({});\n            close();\n          }\n        }}\n\n        submitText={\"Add\"}\n        children={children}\n        title={`Add Link `}\n        description={`Tell us how this ${tdJSON.title} can interact with other ressources`}\n      />,\n      document.getElementById(\"modal-root\"));\n  }\n\n  return null;\n});\n\nconst showHrefErrorMessage = (msg) => {\n  document.getElementById(\"link-href-info\").textContent = msg;\n  document.getElementById(\"link-href\").classList.remove(\"border-gray-600\");\n  document.getElementById(\"link-href\").classList.add(\"border-red-400\");\n}\n\nconst clearHrefErrorMessage = () => {\n  document.getElementById(\"link-href\").classList.add(\"border-gray-600\");\n  document.getElementById(\"link-href\").classList.remove(\"border-red-400\");\n}\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\nimport { Info } from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\n/**\n * Display an info icon that shows a information text when hovered\n * next to the child.\n *\n * The parameter tooltip a TooltipContent object containing HTML on how\n * the tooltip is rendered and a link that gets called onClick.\n * @param {TooltipContent} tooltip\n * @param {Object} children\n */\nexport const InfoIconWrapper = (props) => {\n    return (\n        <div className=\"flex flex-row items-center\">\n            <div className=\"pr-0.5\">\n                {props.children}\n            </div>\n            <button onClick={() => window.open(props.tooltip.href, \"_blank\")}>\n                <InfoIcon html={props.tooltip.html} />\n            </button>\n            <div className=\"p-1\"></div>\n        </div >\n    );\n}\n\n/**\n * Display an info icon that shows a information text when hovered.\n *\n * The parameter html is a String containing HTML for the tooltips layout.\n * @param {String} html\n */\nexport const InfoIcon = (props) => {\n    return (\n        <>\n            <Info color=\"grey\"\n                size=\"16\"\n                data-html={true}\n                data-type=\"info\"\n                data-tip={props.html}\n                data-background-color=\"#2c2c2e\"\n            />\n            <ReactTooltip html={true} type=\"info\" />\n        </ >\n    );\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n\nclass TooltipContent {\n    constructor(html, href) {\n        this.html = html;\n        this.href = href;\n    }\n}\n\nexport const getPropertiesTooltipContent = () => {\n    const html = `<h2 class='text-lg'>Web of Things Properties</h2>\n                    <p>A Property is a simple attribute of a device. The value of a Property can be readable.</p>\n                    <p>writable or observable. E.g. a Property for a lamp could indicate if it is on or off.</p>\n                    <br />\n                    <p>Click to get more information about Properties.</p> \n                `\n    const href = \"https://www.w3.org/TR/wot-thing-description/#propertyaffordance\";\n    return new TooltipContent(html, href);\n}\n\nexport const getActionsTooltipContent = () => {\n    const html = `<h2 class='text-lg'>Web of Things Actions</h2>\n                    <p>An Action is some kind of procedure that can be triggered on a device. An Action can</p>\n                    <p>be started or cancelled. E.g. an Action for a lamp could be turning it on or off.</p>\n                    <br />\n                    <p>Click to get more information about Actions.</p>\n                `\n    const href = \"https://www.w3.org/TR/wot-thing-description/#actionaffordance\";\n    return new TooltipContent(html, href);\n}\n\nexport const getEventsTooltipContent = () => {\n    const html = `<h2 class='text-lg'>Web of Things Events</h2>\n                <p>An Event is an asynchronously happening information flow. An Event is observable.</p>\n                <p>E.g. an Event for a lamp could fire if it gets turned on or off.</p>\n                <br />\n                <p>Click to get more information about Events.</p>\n            `\n\n    const href = \"https://www.w3.org/TR/wot-thing-description/#eventaffordance\";\n    return new TooltipContent(html, href);\n}\n\nexport const getFormsTooltipContent = () => {\n    const html = `<h2 class='text-lg'>Web of Things Forms</h2>\n                    <p>A Form contains all information needed to make a request to a device.</p>\n                    <p>It can accompany a Property, Action, Event or a Thing itself.</p>\n                    <br />\n                    <p>Click to get more information about Forms.</p>\n                `\n    const href = \"https://www.w3.org/TR/wot-thing-description/#form\";\n\n    return new TooltipContent(html, href);\n}\n\nexport const getLinksTooltipContent = () => {\n    const html = `<h2 class='text-lg'>Web of Things Link</h2>\n                    <p>A link can be viewed as a statement of the form link context has a relation type resource at link target</p>\n                    <p>Used to link Thing Description with other ressources.</p>\n                    <br />\n                    <p>Click to get more information about Links.</p>\n                `\n    const href = \"https://www.w3.org/TR/wot-thing-description/#link\";\n\n    return new TooltipContent(html, href);\n}\n\nexport const tooltipMapper = {\n    \"properties\": getPropertiesTooltipContent(),\n    \"actions\": getActionsTooltipContent(),\n    \"events\": getEventsTooltipContent(),\n    \"forms\": getFormsTooltipContent(),\n    \"links\": getLinksTooltipContent(),\n};","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { Trash2 } from \"react-feather\";\n\nexport default function Form(props) {\n\n    const formChooser = {\n        \"observeproperty\": <ObserveForm type=\"properties\" form={props.form} propName={props.propName} />,\n        \"unobserveproperty\": <UnobserveForm type=\"properties\" form={props.form} propName={props.propName} />,\n        \"observeallproperties\": <ObserveAllForm type=\"forms\" form={props.form} propName={props.propName} />,\n        \"unobserveallproperties\": <UnobserveAllForm type=\"forms\" form={props.form} propName={props.propName} />,\n        \"readproperty\": <ReadForm type=\"properties\" form={props.form} propName={props.propName} />,\n        \"readmultipleproperties\": <ReadMultipleForm type=\"forms\" form={props.form} formIndex={props.propName} />,\n        \"readallproperties\": <ReadAllForm type=\"forms\" form={props.form} formIndex={props.propName} />,\n        \"writeproperty\": <WriteForm type=\"properties\" form={props.form} propName={props.propName} />,\n        \"writemultipleproperties\": <WriteMultipleForm type=\"forms\" form={props.form} formIndex={props.propName} />,\n        \"writeallproperties\": <WriteAllForm type=\"forms\" form={props.form} formIndex={props.propName} />,\n        \"invokeaction\": <InvokeForm type=\"actions\" form={props.form} propName={props.propName} />,\n        \"unsubscribeevent\": <UnobserveForm type=\"events\" form={props.form} propName={props.propName} />,\n    }\n\n    if (formChooser[props.form.op]) {\n        return formChooser[props.form.op];\n    }\n\n    if (props.interactionType === \"action\") {\n        return <InvokeForm type=\"actions\" form={props.form} propName={props.propName} />\n    } else if (props.interactionType === \"event\") {\n        return <ObserveForm type=\"events\" form={props.form} propName={props.propName} />\n    }\n\n    return <UndefinedForm form={props.form} propName={props.propName} />\n}\n\nexport function ObserveForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formOrange rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formOrange\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formOrange place-self-center text-center text-xs px-4\">Observe</div>\n            </div>\n            <div className=\"place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formOrange\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function UnobserveForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">Unobserve</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formRed\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function ObserveAllForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formOrange rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formOrange\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formOrange place-self-center text-center text-xs px-4\">ObserveAll</div>\n            </div>\n            <div className=\"place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formOrange\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function UnobserveAllForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">UnobserveAll</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formRed\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function ReadForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formGreen rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formGreen\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formGreen place-self-center text-center text-xs px-4\">Read</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formGreen\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function ReadMultipleForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formGreen rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formGreen\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formGreen place-self-center text-center text-xs px-4\">ReadMultiple</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formGreen\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function ReadAllForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formGreen rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formGreen\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formGreen place-self-center text-center text-xs px-4\">ReadAll</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formGreen\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function WriteForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formBlue rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formBlue\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formBlue place-self-center text-center text-xs px-4\">Write</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function WriteMultipleForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formBlue rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formBlue\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formBlue place-self-center text-center text-xs px-4\">WriteMultiple</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function WriteAllForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formBlue rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formBlue\">\n            <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formBlue place-self-center text-center text-xs px-4\">WriteAll</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\n\nexport function InvokeForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">Invoke</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formRed\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n\nexport function UndefinedForm(props) {\n    const context = useContext(ediTDorContext)\n    const deleteForm = (e) => {\n        context.removeForm(e)\n    }\n    return (\n        <div className=\"flex flex-row items-center justify-start h-10 w-full bg-gray-300 rounded-md px-4 mt-2 bg-opacity-75 border-2 border-gray-300\">\n            <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"place-self-center text-center text-xs px-4\">Undefined</div>\n            </div>\n            <div className=\" place-self-center pl-3 text-base overflow-hidden flex-grow\">{props.form.href}</div>\n            <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-white\" onClick={() => deleteForm(props)}>\n                <Trash2 size={16} color=\"black\" />\n            </button>\n        </div>\n    );\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport \"../../assets/main.css\"\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { Trash2, Info } from \"react-feather\";\nimport { changeBetweenTd } from '../../util';\n\nexport default function Link(props) {\n\n  const context = useContext(ediTDorContext)\n  const deleteLink = (e) => {\n    let currentLinkedTd = context.linkedTd;\n    //update the linkedTd after removing the current linked Td\n    if (currentLinkedTd[e.link.href]) {\n      delete currentLinkedTd[e.link.href];\n      context.updateLinkedTd(currentLinkedTd);\n    }\n    context.removeLink(e.propName);\n    context.updateIsModified(true);\n\n  }\n  const infoLink = async (e) => {\n    let href = e.link.href;\n    changeBetweenTd(context, href);\n  }\n  return (\n    <div className=\"flex flex-row items-center justify-start h-10 w-full bg-formBlue rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formBlue\">\n      <div className=\"flex h-6 w-18 bg-white rounded-md place-self-center justify-center\">\n        {props.link.rel && <div className=\"text-formBlue place-self-center text-center text-xs px-4\">{props.link.rel}</div>}\n      </div>\n      <div className=\" place-self-center pl-3 text-base text-white overflow-hidden flex-grow\">{props.link.href}</div>\n      <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => deleteLink(props)}>\n        <Trash2 size={16} color=\"black\" />\n      </button>\n      {context.linkedTd && context.linkedTd[props.link.href] && ((Object.keys(context.linkedTd[props.link.href]).length) || context.linkedTd[props.link.href][\"kind\"] === \"file\") &&\n        <button className=\"text-base w-6 h-6 p-1 m-1 shadow-md rounded-full bg-formBlue\" onClick={() => infoLink(props)}>\n          <Info size={16} color=\"black\" />\n        </button>}\n    </div>\n  );\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\nimport { ChevronDown } from 'react-feather';\n\nexport const DialogTextField = (props) => {\n    return <div key={props.id} className=\"py-1\">\n        <label htmlFor={props.id} className=\"text-sm text-gray-400 font-medium pl-2\">{props.label}:</label>\n        <input\n            name={props.id}\n            id={props.id}\n            className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n            placeholder={props.placeholder}\n            type={props.type ?? \"text\"}\n            autoFocus={props.autoFocus ?? false}\n            onChange={props.onChange ? () => props.onChange() : null}\n        />\n        <span id={`${props.id}-helper-text`} className=\"text-xs text-red-400 pl-2\"></span>\n    </div>;\n}\n\nexport const DialogTextArea = (props) => {\n    return <>\n        <label htmlFor={props.id} className=\"text-sm text-gray-400 font-medium pl-2\">{props.label}:</label>\n        <textarea\n            id={props.id}\n            rows=\"5\"\n            className=\"bg-gray-600\n                sm:text-sm\n                appearance-none \n                border-2 border-gray-600 rounded w-full \n                p-2\n                text-white \n                leading-tight \n                focus:outline-none \n                focus:border-blue-500\"\n            placeholder={props.placeholder}\n        />\n    </>;\n}\n\nexport const DialogDropdown = (props) => {\n    return <>\n        <label htmlFor={props.id} className=\"text-sm text-gray-400 font-medium pl-2\">{props.label}:</label>\n        <div className=\"relative\">\n            <select className=\"block appearance-none w-full bg-gray-600 border-2 border-gray-600 text-white py-3 px-4 pr-8 rounded leading-tight focus:border-blue-500 focus:outline-none\" id={props.id}>\n                {props.options.map((e) => { return <option key={e}>{e}</option> })}\n            </select>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <ChevronDown color=\"#cacaca\"></ChevronDown>\n            </div>\n        </div>\n    </>;\n\n}\n\nexport const DialogCheckbox = (props) => {\n    return <div key={props.id} className=\"form-checkbox pl-2\">\n        {\n            props.readOnly ?? true ?\n                <input id={props.id}\n                    className=\"form-checkbox-input\"\n                    type=\"checkbox\"\n                    value={props.label}\n                /> :\n                <input id={props.id}\n                    className=\"form-checkbox-input\"\n                    type=\"checkbox\"\n                    value={props.label}\n                    readOnly={props.readOnly}\n                    checked={true}\n                />\n        }\n        <label className=\"form-checkbox-label pl-2\" htmlFor={props.id}>{props.label}</label>\n    </div>;\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { DialogTextArea, DialogTextField } from './DialogComponents';\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nexport const AddActionDialog = forwardRef((_, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    const type = \"action\";\n    const key = \"actions\";\n    const name = type && type[0].toUpperCase() + type.slice(1);\n\n    useEffect(() => {\n    }, [display, context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const children = <>\n        <DialogTextField\n            id={`${type}-title`}\n            label=\"Title\"\n            placeholder={`${name} Title`}\n            autoFocus={true}\n            onChange={() => clearErrorMessage()}\n        />\n        <DialogTextArea\n            id={`${type}-description`}\n            label=\"Description\"\n            placeholder={`A short description about the new ${name}...`}\n        />\n    </>;\n\n    const onAddAction = () => {\n        let action = {};\n        action.title = document.getElementById(`${type}-title`).value;\n\n        const description = document.getElementById(`${type}-description`).value;\n        if (description !== \"\") {\n            action.description = description;\n        }\n        action.forms = [];\n\n        let td = JSON.parse(context.offlineTD);\n        if (td[key] && td[key][action.title]) {\n            showErrorMessage(`An ${name} with this title already exists...`);\n        } else {\n            addActionToTd(action);\n            close();\n        }\n    }\n\n    const addActionToTd = (action) => {\n        let td = JSON.parse(context.offlineTD);\n\n        if (!td[key]) {\n            td[key] = {};\n        }\n\n        td[key][action.title] = action;\n\n        tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n            context.updateValidationMessage(result);\n            context.updateOfflineTD(JSON.stringify(td, null, 2));\n        }, err => {\n            console.log(\"Error\");\n            console.log(err);\n        })\n        return;\n    }\n\n    const showErrorMessage = (msg) => {\n        document.getElementById(`${type}-title-helper-text`).textContent = msg;\n        document.getElementById(`${type}-title`).classList.remove(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.add(\"border-red-400\");\n    }\n\n    const clearErrorMessage = () => {\n        document.getElementById(`${type}-title-helper-text`).textContent = \"\";\n        document.getElementById(`${type}-title`).classList.add(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.remove(\"border-red-400\");\n    }\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => {\n                    onAddAction();\n                }}\n                submitText={`Add ${name}`}\n                children={children}\n                title={`Add New ${name}`}\n                description={`Tell us a little something about the ${name} you want to add.`}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { DialogTextArea, DialogTextField } from './DialogComponents';\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nexport const AddEventDialog = forwardRef((_, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    const type = \"event\";\n    const key = \"events\";\n    const name = type && type[0].toUpperCase() + type.slice(1);\n\n    useEffect(() => {\n    }, [display, context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const children = <>\n        <DialogTextField\n            id={`${type}-title`}\n            label=\"Title\"\n            placeholder={`${name} Title`}\n            autoFocus={true}\n            onChange={() => clearErrorMessage()}\n        />\n        <DialogTextArea\n            id={`${type}-description`}\n            label=\"Description\"\n            placeholder={`A short description about the new ${name}...`}\n        />\n    </>;\n\n    const onAddEvent = () => {\n        let event = {};\n        event.title = document.getElementById(`${type}-title`).value;\n\n        const description = document.getElementById(`${type}-description`).value;\n        if (description !== \"\") {\n            event.description = description;\n        }\n        event.forms = [];\n\n        let td = JSON.parse(context.offlineTD);\n        if (td[key] && td[key][event.title]) {\n            showErrorMessage(`An ${name} with this title already exists...`);\n        } else {\n            addEventToTd(event);\n            close();\n        }\n    }\n\n    const addEventToTd = (event) => {\n        let td = JSON.parse(context.offlineTD);\n\n        if (!td[key]) {\n            td[key] = {};\n        }\n\n        td[key][event.title] = event;\n        tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n            context.updateValidationMessage(result);\n            context.updateOfflineTD(JSON.stringify(td, null, 2));\n        }, err => {\n            console.log(\"Error\");\n            console.log(err);\n        })\n        return;\n    }\n\n    const showErrorMessage = (msg) => {\n        document.getElementById(`${type}-title-helper-text`).textContent = msg;\n        document.getElementById(`${type}-title`).classList.remove(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.add(\"border-red-400\");\n    }\n\n    const clearErrorMessage = () => {\n        document.getElementById(`${type}-title-helper-text`).textContent = \"\";\n        document.getElementById(`${type}-title`).classList.add(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.remove(\"border-red-400\");\n    }\n\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => {\n                    onAddEvent();\n                }}\n                submitText={`Add ${name}`}\n                children={children}\n                title={`Add New ${name}`}\n                description={`Tell us a little something about the ${name} you want to add.`}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { DialogCheckbox, DialogDropdown, DialogTextArea, DialogTextField } from './DialogComponents';\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nconst NO_TYPE = \"undefined\";\n\nexport const AddPropertyDialog = forwardRef((_, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    const type = \"property\";\n    const key = \"properties\";\n    const name = type && type[0].toUpperCase() + type.slice(1);\n\n    useEffect(() => {\n    }, [display, context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const children = <>\n        <DialogTextField\n            id={`${type}-title`}\n            label=\"Title\"\n            placeholder={`${name} Title`}\n            autoFocus={true}\n            onChange={() => clearErrorMessage()}\n        />\n        <DialogTextArea\n            id={`${type}-description`}\n            label=\"Description\"\n            placeholder={`A short description about the new ${name}...`}\n        />\n        <DialogDropdown\n            id={`${type}-type`}\n            label=\"Type\"\n            options={[NO_TYPE, \"number\", \"integer\", \"boolean\", \"string\", \"object\", \"array\",]}\n        />\n        <div className=\"h-2\"></div>\n        <label className=\"text-sm text-gray-400 font-medium pl-3\">Additional:</label>\n        <div id=\"additional\" className=\"bg-gray-600 p-1 rounded-md\">\n            <DialogCheckbox\n                id={`${type}-readOnly`}\n                label=\"Read Only\"\n            />\n            <DialogCheckbox\n                id={`${type}-observable`}\n                label=\"Observable\"\n            />\n        </div>\n    </>;\n\n    const onAddProperty = () => {\n        let property = {};\n        property.title = document.getElementById(`${type}-title`).value;\n        property.observable = document.getElementById(`${type}-observable`).checked;\n        property.readOnly = document.getElementById(`${type}-readOnly`).checked;\n\n        const description = document.getElementById(`${type}-description`).value;\n        if (description !== \"\") {\n            property.description = description;\n        }\n\n        const dataType = document.getElementById(`${type}-type`).value;\n        if (dataType !== NO_TYPE) {\n            property.type = dataType;\n        }\n        if (dataType === \"array\") {\n            property.items = {};\n        }\n        else if (dataType === \"object\") {\n            property.properties = {};\n        }\n\n        property.forms = [];\n\n        let td = JSON.parse(context.offlineTD);\n        if (td[key] && td[key][property.title]) {\n            showErrorMessage(`A ${name} with this title already exists...`);\n        } else {\n            addPropertyToTd(property);\n            close();\n        }\n    }\n\n    const addPropertyToTd = (property) => {\n        let td = JSON.parse(context.offlineTD);\n\n        if (!td[key]) {\n            td[key] = {};\n        }\n        td[key][property.title] = property;\n        tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n            context.updateValidationMessage(result);\n            context.updateOfflineTD(JSON.stringify(td, null, 2));\n        }, err => {\n            console.log(\"Error\");\n            console.log(err);\n        })\n        return;\n    }\n\n    const showErrorMessage = (msg) => {\n        document.getElementById(`${type}-title-helper-text`).textContent = msg;\n        document.getElementById(`${type}-title`).classList.remove(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.add(\"border-red-400\");\n    }\n\n    const clearErrorMessage = () => {\n        document.getElementById(`${type}-title-helper-text`).textContent = \"\";\n        document.getElementById(`${type}-title`).classList.add(\"border-gray-600\");\n        document.getElementById(`${type}-title`).classList.remove(\"border-red-400\");\n    }\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => {\n                    onAddProperty();\n                }}\n                submitText={`Add ${name}`}\n                children={children}\n                title={`Add New ${name}`}\n                description={`Tell us a little something about the ${name} you want to add.`}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport { PlusCircle, Trash2 } from \"react-feather\";\nimport \"../../assets/main.css\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\";\nimport { AddFormDialog } from \"../Dialogs/AddFormDialog\";\nimport { InfoIconWrapper } from \"../InfoIcon/InfoIcon\";\nimport { getFormsTooltipContent } from \"../InfoIcon/InfoTooltips\";\nimport Form from \"./Form\";\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\nexport default function Action(props) {\n    const context = useContext(ediTDorContext);\n\n    const addFormDialog = React.useRef();\n    const openAddFormDialog = () => { addFormDialog.current.openModal() }\n\n    if ((Object.keys(props.action).length === 0 && props.action.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Action could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const action = props.action;\n    const forms = separateForms(props.action.forms);\n    const attributeListObject = buildAttributeListObject({ name: props.actionName }, props.action, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const onDeleteActionClicked = () => {\n        context.removeOneOfAKindReducer('actions', props.actionName)\n    }\n\n    return (\n        <details>\n            <summary className=\"text-xl text-gray-400 flex flex-row justify-start items-center cursor-pointer p-0.5\">\n                <div className=\"flex-grow\">{action.title ?? props.actionName}</div>\n                <button className=\"text-base w-6 h-6 p-1 m-1 rounded-full bg-gray-400\" onClick={onDeleteActionClicked}>\n                    <Trash2 size={16} color=\"black\" />\n                </button>\n            </summary>\n            <div className=\"mb-4\">\n                <div className=\"text-lg text-gray-400 pb-2\">{action.description}</div>\n                <ul className=\"text-base text-gray-300 list-disc pl-8\">{attributes}</ul>\n                <div className=\"flex flex-row items-center \">\n                    <div className=\"flex flex-grow\">\n                        <InfoIconWrapper className=\" flex-grow\" tooltip={getFormsTooltipContent()}>\n                            <h4 className=\"text-lg text-gray-400 pr-1 text-bold\">Forms</h4>\n                        </InfoIconWrapper>\n                    </div>\n                    <button onClick={openAddFormDialog}>\n                        <PlusCircle color=\"#cacaca\" size=\"18\" />\n                    </button>\n                    <AddFormDialog type=\"action\"\n                        interaction={action}\n                        interactionName={props.actionName}\n                        ref={addFormDialog}\n                    />\n                </div>\n                {forms.map((form, i) => (\n                    <Form key={i} form={form} propName={props.actionName} interactionType={\"action\"}></Form>\n                ))}\n            </div>\n        </details>\n    )\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport { PlusCircle, Trash2 } from \"react-feather\";\nimport \"../../assets/main.css\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\";\nimport { AddFormDialog } from \"../Dialogs/AddFormDialog\";\nimport { InfoIconWrapper } from \"../InfoIcon/InfoIcon\";\nimport { getFormsTooltipContent } from \"../InfoIcon/InfoTooltips\";\nimport Form from \"./Form\";\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\nexport default function Event(props) {\n    const context = useContext(ediTDorContext);\n\n    const addFormDialog = React.useRef();\n    const openAddFormDialog = () => { addFormDialog.current.openModal() }\n\n    if ((Object.keys(props.event).length === 0 && props.event.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Event could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const event = props.event;\n    const forms = separateForms(props.event.forms);\n    const attributeListObject = buildAttributeListObject({ name: props.eventName }, props.event, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const onDeleteEventClicked = () => {\n        context.removeOneOfAKindReducer('events', props.eventName)\n    }\n\n    return (\n        <details>\n            <summary className=\"text-xl text-gray-400 flex flex-row justify-start items-center cursor-pointer p-0.5\">\n                <div className=\"flex-grow\">{event.title ?? props.eventName}</div>\n                <button className=\"text-base w-6 h-6 p-1 m-1 rounded-full bg-gray-400\" onClick={onDeleteEventClicked}>\n                    <Trash2 size={16} color=\"black\" />\n                </button>\n            </summary>\n            <div className=\"mb-4\">\n                <div className=\"text-lg text-gray-400 pb-2\">{event.description}</div>\n                <ul className=\"text-base text-gray-300 list-disc pl-8\">{attributes}</ul>\n                <div className=\"flex flex-row items-center \">\n                    <div className=\"flex flex-grow\">\n                        <InfoIconWrapper className=\" flex-grow\" tooltip={getFormsTooltipContent()}>\n                            <h4 className=\"text-lg text-gray-400 pr-1 text-bold\">Forms</h4>\n                        </InfoIconWrapper>\n                    </div>\n                    <button onClick={openAddFormDialog}>\n                        <PlusCircle color=\"#cacaca\" size=\"18\" />\n                    </button>\n                    <AddFormDialog type=\"event\"\n                        interaction={event}\n                        interactionName={props.eventName}\n                        ref={addFormDialog}\n                    />\n                </div>\n                {forms.map((form, i) => (\n                    <Form key={i} form={form} propName={props.eventName} interactionType={\"event\"}></Form>\n                ))}\n            </div>\n        </details>\n    )\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from \"react\";\nimport { PlusCircle, Trash2 } from \"react-feather\";\nimport \"../../assets/main.css\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { buildAttributeListObject, separateForms } from \"../../util.js\";\nimport { AddFormDialog } from \"../Dialogs/AddFormDialog\";\nimport { InfoIconWrapper } from \"../InfoIcon/InfoIcon\";\nimport { getFormsTooltipContent } from \"../InfoIcon/InfoTooltips\";\nimport Form from \"./Form\";\n\nconst alreadyRenderedKeys = [\"title\", \"forms\", \"description\"];\n\nexport default function Property(props) {\n    const context = useContext(ediTDorContext);\n\n    const addFormDialog = React.useRef()\n    const openAddFormDialog = () => { addFormDialog.current.openModal() }\n\n    if ((Object.keys(props.prop).length === 0 && props.prop.constructor !== Object)) {\n        return <div className=\"text-3xl text-white\">Property could not be rendered because mandatory fields are missing.</div>\n    }\n\n    const property = props.prop;\n    const forms = separateForms(props.prop.forms);\n\n    const attributeListObject = buildAttributeListObject({ name: props.propName }, props.prop, alreadyRenderedKeys);\n    const attributes = Object.keys(attributeListObject).map(x => {\n        return <li key={x}>{x} : {JSON.stringify(attributeListObject[x])}</li>\n    });\n\n    const onDeletePropertyClicked = () => {\n        context.removeOneOfAKindReducer('properties', props.propName)\n    }\n\n    return (\n        <details>\n            <summary className=\"text-xl text-gray-400 flex flex-row w-full justify-start items-center cursor-pointer p-0.5\">\n                <h3 className=\"flex-grow\">{property.title ?? props.propName}</h3>\n                <button className=\"text-base w-6 h-6 p-1 m-1 rounded-full bg-gray-400\" onClick={onDeletePropertyClicked}>\n                    <Trash2 size={16} color=\"black\" />\n                </button>\n            </summary>\n            <div className=\"mb-4\">\n                <div className=\"text-lg text-gray-400 pb-2\">{property.description}</div>\n                <ul className=\"list-disc text-base text-gray-300 pl-8\">{attributes}</ul>\n                <div className=\"flex justify-start items-center pt-2\">\n                    <div className=\"flex flex-grow\">\n                        <InfoIconWrapper className=\" flex-grow\" tooltip={getFormsTooltipContent()}>\n                            <h4 className=\"text-lg text-gray-400 pr-1 text-bold\">Forms</h4>\n                        </InfoIconWrapper>\n                    </div>\n                    <button onClick={openAddFormDialog}>\n                        <PlusCircle color=\"#cacaca\" size=\"18\" />\n                    </button>\n                    <AddFormDialog type=\"property\"\n                        interaction={property}\n                        interactionName={props.propName}\n                        ref={addFormDialog}\n                    />\n                </div>\n                {forms.map((form, i) => (\n                    <Form key={i} propName={props.propName} form={form} interactionType={\"property\"} className=\"last:pb-4\"></Form>\n                ))}\n            </div>\n        </details >\n    )\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from \"react\";\nimport { Search } from \"react-feather\";\n\nexport const SearchBar = (props) => {\n    return (\n        <div className=\"relative text-gray-600\">\n            <input type=\"search\"\n                autoComplete=\"on\"\n                className=\"caret-gray bg-gray-600 text-white px-5 pr-10 place-self-center rounded-lg text-sm focus:outline-none h-9\"\n                onKeyUp={props.onKeyUp}\n                placeholder={props.placeholder}\n                aria-label={props.ariaLabel}\n            />\n            <div disabled type=\"submit\" className=\"cursor-default absolute right-0 top-0 mt-1 mr-4\">\n                <Search color=\"#2c2c2e\"></Search>\n            </div>\n        </div>\n    );\n}\n","import React, { useContext, useState } from 'react';\nimport ediTDorContext from '../../context/ediTDorContext';\nimport { AddActionDialog } from '../Dialogs/AddActionDialog';\nimport { AddEventDialog } from '../Dialogs/AddEventDialog';\nimport { AddPropertyDialog } from '../Dialogs/AddPropertyDialog';\nimport { InfoIconWrapper } from '../InfoIcon/InfoIcon';\nimport { tooltipMapper } from '../InfoIcon/InfoTooltips';\nimport Action from './Action';\nimport Event from './Event';\nimport Property from './Property';\nimport { SearchBar } from './SearchBar';\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nconst SORT_ASC = \"asc\";\nconst SORT_DESC = \"desc\";\n\nlet td = {};\nlet oldTd = {};\n\n/**\n * Renders a section for an interaction (Property, Action, Event) with a\n * search bar, a sorting icon and a button to add a new interaction.\n *\n * The parameter interaction can be one of \"Properties\", \"Actions\" or \"Events\".\n * @param {String} interaction\n */\nexport const InteractionSection = (props) => {\n    const [filter, setFilter] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(SORT_ASC);\n\n    const interaction = props.interaction.toLowerCase();\n    const context = useContext(ediTDorContext);\n\n    try {\n        oldTd = td;\n        const parsedTd = JSON.parse(context.offlineTD);\n        td = parsedTd;\n    } catch (e) {\n        td = oldTd;\n    }\n\n    const updateFilter = (event) => setFilter(event.target.value);\n\n    /**\n    * Returns an Object containing all interactions with keys\n    * matching to the filter.\n    */\n    const applyFilter = () => {\n        if (!td[interaction]) {\n            return;\n        }\n\n        const filtered = {};\n        Object.keys(td[interaction]).filter(e => {\n            if (e.toLowerCase().indexOf(filter.toLowerCase()) > -1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }).forEach((key) => {\n            filtered[key] = td[interaction][key];\n        });\n\n        return filtered;\n    }\n\n    const sortKeysInObject = (kind) => {\n        if (!td[kind]) {\n            return;\n        }\n\n        const ordered = {};\n        const toSort = Object.keys(td[kind]).map(x => {\n            return { key: x, title: td[kind][x].title }\n        })\n        if (sortOrder === SORT_ASC) {\n            toSort.sort((a, b) => {\n                const nameA = a.title ? a.title : a.key;\n                const nameB = b.title ? b.title : b.key;\n                return nameA.localeCompare(nameB)\n            }).forEach(function (sortedObject) {\n                ordered[sortedObject.key] = td[kind][sortedObject.key];\n            });\n            setSortOrder(SORT_DESC);\n        } else {\n            toSort.sort((a, b) => {\n                const nameA = a.title ? a.title : a.key;\n                const nameB = b.title ? b.title : b.key;\n                return nameA.localeCompare(nameB)\n            }).reverse().forEach(function (sortedObject) {\n                ordered[sortedObject.key] = td[kind][sortedObject.key];\n            });\n            setSortOrder(SORT_ASC);\n        }\n        td[kind] = ordered\n        tdValidator(JSON.stringify(td, null, 2), console.log, {}).then(result => {\n            context.updateValidationMessage(result);\n            context.updateOfflineTD(JSON.stringify(td, null, 2));\n        }, err => {\n            console.log(\"Error\");\n            console.log(err);\n        })\n\n\n\n    }\n\n    const sortedIcon = () => {\n        if (sortOrder === SORT_ASC) {\n            return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#ffffff\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path d=\"M11 5h10M11 9h7M11 13h4M3 17l3 3 3-3M6 18V4\" />\n            </svg>\n        }\n\n        return (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#ffffff\" stroke=\"#ffffff\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <path d=\"M11 5h4M11 9h7M11 13h10M3 17l3 3 3-3M6 18V4\" />\n        </svg>)\n    }\n\n    const buildChildren = () => {\n        const filteredInteractions = applyFilter();\n\n        if (td.properties && interaction === \"properties\") {\n            return Object.keys(filteredInteractions).map((key, index) => {\n                return (<Property prop={filteredInteractions[key]} propName={key} key={index} />);\n            });\n        }\n        if (td.actions && interaction === \"actions\") {\n            return Object.keys(filteredInteractions).map((key, index) => {\n                return (<Action action={filteredInteractions[key]} actionName={key} key={index} />);\n            });\n        }\n        if (td.events && interaction === \"events\") {\n            return Object.keys(filteredInteractions).map((key, index) => {\n                return (<Event event={filteredInteractions[key]} eventName={key} key={index} />);\n            });\n        }\n    }\n\n    const createPropertyDialog = React.useRef();\n    const openCreatePropertyDialog = () => { createPropertyDialog.current.openModal() }\n\n    let addInteractionDialog;\n    switch (interaction) {\n        case 'properties': addInteractionDialog = <AddPropertyDialog ref={createPropertyDialog} />; break;\n        case 'actions': addInteractionDialog = <AddActionDialog ref={createPropertyDialog} />; break;\n        case 'events': addInteractionDialog = <AddEventDialog ref={createPropertyDialog} />; break;\n        default:\n    }\n\n    return (\n        <>\n            <div className=\"flex justify-start items-end pt-8 pb-4\">\n                <div className=\"flex flex-grow\">\n                    <InfoIconWrapper tooltip={tooltipMapper[interaction]}>\n                        <h2 className=\"text-2xl text-white pr-1 flex-grow\">{props.interaction}</h2>\n                    </InfoIconWrapper>\n                </div>\n                <SearchBar\n                    onKeyUp={(e) => updateFilter(e)}\n                    placeholder={`Search ${props.interaction}`}\n                    ariaLabel={`Search through all ${props.interaction}`}\n                />\n                <div className=\"w-2\"></div>\n                <button className=\"text-white bg-blue-500 cursor-pointer rounded-md p-2 h-9\" onClick={() => sortKeysInObject(interaction)}>\n                    {sortedIcon()}\n                </button>\n                <div className=\"w-2\"></div>\n                <button className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2 h-9\" onClick={openCreatePropertyDialog}>Add</button>\n                {addInteractionDialog}\n            </div>\n            {buildChildren() && <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">{buildChildren()}</div>}\n        </>\n    );\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext, useCallback, useState } from 'react';\nimport ediTDorContext from '../../context/ediTDorContext';\nimport \"../../assets/main.css\"\nimport { ChevronRight, ChevronDown } from 'react-feather';\nimport { getDirectedValue } from '../../util';\n\nfunction isObject(val) {\n    if (val === null) { return false; }\n    return ((typeof val === 'function') || (typeof val === 'object'));\n}\n\nexport const RenderedObject = (map) => {\n    const context = useContext(ediTDorContext);\n    const [showChildren, setShowChildren] = useState(new Array(Object.entries(map).length));\n    const handleClick = useCallback((i) => {\n        let temp = showChildren;\n        let x = showChildren[i];\n        temp[i] = x === null ? true : !x;\n        setShowChildren([...temp]);\n    }, [showChildren, setShowChildren])\n\n    return (\n        <>\n            {Object.entries(map).map(([k, v], i) => {\n                if (isObject(v)) {\n                    let indicator = (<button className=\"flex align-top\" onClick={() => handleClick(i)}>\n                        <div className=\"flex text-white font-bold bg-gray-600 py-1 px-2 rounded-md align-middle\">\n                            <h4>{k}</h4>\n                            {showChildren[i] === true ? <ChevronDown className=\"pl-1\" /> : <ChevronRight className=\"pl-1\" />}\n                        </div>\n                    </button>);\n\n                    let children = (<div className=\"flex\">\n                        <div className=\"flex w-1 rounded-lg bg-gray-400 ml-2 my-1\" />\n                        <div className=\"pl-8 mt-1\">\n                            {showChildren[i] === true && (Object.entries(v) ?? []).map(([k1, v1], i1) => {\n                                let m1 = {};\n                                m1[k1] = v1;\n                                return <RenderedObject {...m1} key={i1} />\n                            })}\n                        </div>\n                    </div>);\n\n                    return (\n                        <div className=\"mb-1\" key={i}>\n                            {indicator}\n                            {showChildren[i] === true && children}\n                        </div>\n                    )\n                }\n\n                const value = getDirectedValue(map, k,\n                    context.linkedTd[Object.keys(context.linkedTd)[0]]['@context']\n                );\n                return (\n                    <div className=\"flex mb-1\" key={i}>\n                        <h4 className=\"text-white font-bold bg-gray-600 py-1 px-2 rounded-md\">{k}</h4>\n                        <div className=\"text-gray-400 px-2 py-1\">{value}</div>\n                    </div>\n                )\n            })}\n        </ >\n    );\n}\n\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext, useEffect } from \"react\";\nimport \"../../assets/main.css\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport {\n  buildAttributeListObject,\n  separateForms,\n  changeBetweenTd,\n  getDirectedValue,\n} from \"../../util\";\nimport { AddFormDialog } from \"../Dialogs/AddFormDialog\";\nimport { AddLinkTdDialog } from \"../Dialogs/AddLinkTdDialog\";\nimport { InfoIconWrapper } from \"../InfoIcon/InfoIcon\";\nimport { getFormsTooltipContent } from \"../InfoIcon/InfoTooltips\";\nimport { getLinksTooltipContent } from \"../InfoIcon/InfoTooltips\";\nimport Form from \"./Form\";\nimport Link from \"./Link\";\nimport { InteractionSection } from \"./InteractionSection\";\nimport { RenderedObject } from \"./RenderedObject\";\nimport * as joint from \"jointjs\";\nimport { ImCheckmark, ImCross } from \"react-icons/im\";\n\nlet tdJSON = {};\nlet oldtdJSON = {};\nlet validationMessage = \"\";\nlet jsonValidation = \"\";\nlet jsonSchemaValidation = \"\";\nlet jsonValidationError = \"\";\nlet jsonSchemaValidationError = \"\";\n\nexport default function TDViewer() {\n  const context = useContext(ediTDorContext);\n\n  const addFormDialog = React.useRef();\n  const openAddFormDialog = () => {\n    addFormDialog.current.openModal();\n  };\n\n  const addLinkDialog = React.useRef();\n  const openAddLinkDialog = () => {\n    addLinkDialog.current.openModal();\n  };\n\n  const [graphHeight, setGraphHeight] = React.useState(() => {\n    return 0;\n  });\n  const [representationFormat, setRepresentationFormat] = React.useState(() => {\n    return \"list\";\n  });\n  const [isLinksOpen, setIsLinksOpen] = React.useState(() => {\n    return false;\n  });\n\n  const representationFormatChange = (representationFormat) => {\n    setRepresentationFormat(representationFormat);\n  };\n\n  useEffect(() => {\n    if (document.getElementsByTagName(\"details\")[1]) {\n      document.getElementsByTagName(\"details\")[1].addEventListener(\n        \"toggle\",\n        function (evt) {\n          if (document.getElementsByTagName(\"details\")[1].attributes.open) {\n            setIsLinksOpen(true);\n          } else {\n            setIsLinksOpen(false);\n          }\n        },\n        false\n      );\n    }\n    let posx = 100;\n    let posy = 30;\n    // This graph is used to draw the thing description elements\n    let graphTd = new joint.dia.Graph();\n    let paperTd = new joint.dia.Paper({\n      el: document.getElementById(\"tdGraph\"),\n      model: graphTd,\n      height: 270 + graphHeight,\n      width: 850,\n      gridSize: 10,\n      drawGrid: true,\n      restrictTranslate: true,\n    });\n    let offlineTD = {};\n    if (context.offlineTD) {\n      try {\n        offlineTD = JSON.parse(context.offlineTD);\n      } catch (e) {\n        let error = e.message;\n        console.error(error);\n      }\n    }\n    // Check if the links section exists to start drawing\n    //Update/refresh the content of the context.linkedTd whenever the the useEffect is triggered\n    if (offlineTD[\"links\"]) {\n      // Draw the links between Tds\n      var currentTdModel = new joint.shapes.standard.Rectangle();\n      currentTdModel.position(100, 10);\n      currentTdModel.resize(140, 40);\n      currentTdModel.attr({\n        body: {\n          fill: \"#005A9C\",\n        },\n        label: {\n          text: offlineTD[\"title\"],\n          fill: \"white\",\n        },\n      });\n      currentTdModel.set(\"td\", {});\n      currentTdModel.resize(\n        currentTdModel.attributes.attrs[\"label\"][\"text\"].length * 12,\n        40\n      );\n      graphTd.addCell(currentTdModel);\n      for (let i = 0; i < offlineTD[\"links\"].length; i++) {\n        posx = posx + 70;\n        posy = posy + 60;\n        let href = offlineTD[\"links\"][i][\"href\"];\n        let targetTdModel = new joint.shapes.standard.Rectangle();\n        //Draw as many rectangles as there are links in the links section\n        targetTdModel.position(posx, posy);\n        targetTdModel.attr({\n          body: {\n            fill: \"#005A9C\",\n          },\n          label: {\n            text: href,\n            fill: \"white\",\n          },\n        });\n        targetTdModel.resize(\n          targetTdModel.attributes.attrs[\"label\"][\"text\"].length * 12,\n          40\n        );\n        graphTd.addCell(targetTdModel);\n        targetTdModel.set(\"href\", href);\n        var removeButton = new joint.elementTools.Remove({\n          useModelGeometry: true,\n          y: \"0%\",\n          x: \"100%\",\n          action: async function (evt, elementView, buttonView) {\n            if (context.linkedTd) {\n              let currentLinkedTd = context.linkedTd;\n              //update the linkedTd after removing the current linked Td\n              if (currentLinkedTd[elementView.model.get(\"href\")]) {\n                delete currentLinkedTd[elementView.model.get(\"href\")];\n                context.updateLinkedTd(currentLinkedTd);\n              }\n            }\n            for (let i = 0; i < offlineTD[\"links\"].length; i++) {\n              if (\n                offlineTD[\"links\"][i][\"href\"] === elementView.model.get(\"href\")\n              ) {\n                context.removeLink(i);\n                context.updateIsModified(true);\n                break;\n              }\n            }\n          },\n        });\n        var toolsView = new joint.dia.ToolsView({\n          tools: [removeButton],\n        });\n        var elementView = targetTdModel.findView(paperTd);\n        elementView.addTools(toolsView);\n        if (\n          context.linkedTd &&\n          context.linkedTd[href] &&\n          (context.linkedTd[href][\"kind\"] === \"file\" ||\n            Object.keys(context.linkedTd[href]).length)\n        ) {\n          targetTdModel.set(\"td\", context.linkedTd[href]);\n          var infoButton = new joint.elementTools.Button({\n            markup: [\n              {\n                tagName: \"circle\",\n                selector: \"button\",\n                attributes: {\n                  r: 7,\n                  fill: \"#008FF5\",\n                  cursor: \"pointer\",\n                },\n              },\n              {\n                tagName: \"path\",\n                selector: \"icon\",\n                attributes: {\n                  d: \"M -2 4 2 4 M 0 3 0 0 M -2 -1 1 -1 M -1 -4 1 -4\",\n                  fill: \"none\",\n                  stroke: \"#FFFFFF\",\n                  \"stroke-width\": 2,\n                  \"pointer-events\": \"none\",\n                },\n              },\n            ],\n            x: \"0%\",\n            y: \"0%\",\n            rotate: true,\n            action: async function (evt, elementView, buttonView) {\n              let href = elementView.model.get(\"href\");\n              changeBetweenTd(context, href);\n            },\n          });\n          let toolsView = new joint.dia.ToolsView({\n            tools: [removeButton, infoButton],\n          });\n          elementView.addTools(toolsView);\n        }\n        let link = new joint.shapes.standard.Link({\n          attrs: {\n            line: {\n              stroke: \"#005A9C\",\n            },\n          },\n          labels: [\n            {\n              position: 0.6,\n              attrs: {\n                text: {\n                  text:\n                    offlineTD[\"links\"][i][\"rel\"] === undefined\n                      ? \"\"\n                      : offlineTD[\"links\"][i][\"rel\"],\n                  fill: \"grey\",\n                },\n              },\n            },\n          ],\n        });\n        link.source(currentTdModel);\n        link.target(targetTdModel);\n        link.addTo(graphTd);\n      }\n      setGraphHeight(posy + 30);\n    }\n    try {\n      validationMessage = context.validationMessage;\n      if (validationMessage.report) {\n        jsonValidation = validationMessage.report.json;\n      }\n      if (validationMessage.report) {\n        jsonSchemaValidation = validationMessage.report.schema;\n      }\n\n      if (validationMessage.validationErrors) {\n        jsonValidationError = validationMessage.validationErrors.json;\n        console.log(\"Error\", jsonValidationError);\n        jsonSchemaValidationError = validationMessage.validationErrors.schema;\n        console.log(\"SchemaError\", jsonSchemaValidationError);\n      } else {\n        jsonValidationError = null;\n        jsonSchemaValidationError = null;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [graphHeight, representationFormat, context]);\n\n  try {\n    oldtdJSON = tdJSON;\n    tdJSON = JSON.parse(context.offlineTD);\n  } catch (e) {\n    tdJSON = oldtdJSON;\n  }\n\n  if (!Object.keys(tdJSON).length) {\n    return (\n      <div className=\"flex h-full w-full bg-gray-500 justify-center align-center text-center \">\n        <div className=\"text-4xl text-white place-self-center\">\n          Start writing a new TD by clicking \"New TD\"\n        </div>\n      </div>\n    );\n  }\n\n  let forms;\n  let links;\n  let metaData;\n\n  if (tdJSON) {\n    if (tdJSON.forms) {\n      const formsSeparated = separateForms(tdJSON.forms);\n      forms = formsSeparated.map((key, index) => {\n        return <Form form={key} propName={index} key={index} />;\n      });\n    }\n    if (tdJSON.links) {\n      const linksfromTd = tdJSON.links;\n      links = linksfromTd.map((key, index) => {\n        return <Link link={key} propName={index} key={index} />;\n      });\n    }\n\n    metaData = tdJSON;\n\n    const alreadyRenderedKeys = [\n      \"id\",\n      \"properties\",\n      \"actions\",\n      \"events\",\n      \"forms\",\n      \"description\",\n      \"title\",\n      \"links\",\n    ];\n    const attributeListObject = buildAttributeListObject(\n      tdJSON.id ? { id: tdJSON.id } : {},\n      tdJSON,\n      alreadyRenderedKeys\n    );\n\n    return (\n      <div className=\"h-full w-full bg-gray-500 p-8 overflow-auto\">\n        <div className=\"container bg-white text-black rounded-md p-4 mb-4\">\n          <div className=\"flex\">\n            <h3>JSON Validation</h3>\n            {jsonValidation === \"passed\" && (\n              <ImCheckmark\n                style={{\n                  marginLeft: \"5px\",\n                  position: \"relative\",\n                  top: \"5px\",\n                }}\n              />\n            )}\n            {jsonValidation === \"failed\" && (\n              <ImCross\n                style={{\n                  marginLeft: \"5px\",\n                }}\n              />\n            )}\n          </div>\n          {jsonValidationError !== null && (\n            <div className=\"flex h-10 w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n              <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">\n                  Error\n                </div>\n              </div>\n              <div className=\" place-self-center pl-3 text-base text-white overflow-hidden\">\n                {jsonValidationError}\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex\">\n            <h2>JSON Schema Validation </h2>\n            {jsonSchemaValidation === \"passed\" && (\n              <ImCheckmark\n                style={{\n                  marginLeft: \"5px\",\n                }}\n              />\n            )}\n            {jsonSchemaValidation === \"failed\" && (\n              <ImCross\n                style={{\n                  marginLeft: \"5px\",\n                  position: \"relative\",\n                  top: \"5px\",\n                }}\n              />\n            )}\n          </div>\n          {jsonSchemaValidationError !== null && (\n            <div className=\"flex h-full w-full bg-formRed rounded-md px-4 mt-2 bg-opacity-75 border-2 border-formRed\">\n              <div className=\"flex h-6 w-16 bg-white rounded-md place-self-center justify-center\">\n                <div className=\"text-formRed place-self-center text-center text-xs px-4\">\n                  Error\n                </div>\n              </div>\n              <div className=\" place-self-center pl-3 text-base text-white overflow-hidden\">\n                {jsonSchemaValidationError}\n              </div>\n            </div>\n          )}\n        </div>\n        {metaData !== undefined && Object.keys(metaData).length > 0 && (\n          <div>\n            <div className=\"text-3xl text-white\">\n              {getDirectedValue(metaData, \"title\", metaData[\"@context\"])}\n            </div>\n            <RenderedObject {...attributeListObject}></RenderedObject>\n            {metaData.description ? (\n              <div className=\"text-xl text-white pt-4\">\n                {getDirectedValue(\n                  metaData,\n                  \"description\",\n                  metaData[\"@context\"]\n                )}\n              </div>\n            ) : (\n              <></>\n            )}\n          </div>\n        )}\n        <details className=\"pt-8\">\n          <summary className=\"flex justify-start items-center cursor-pointer\">\n            <div className=\"flex flex-grow\">\n              <InfoIconWrapper tooltip={getFormsTooltipContent()}>\n                <h2 className=\"text-2xl text-white p-1 flex-grow\">Forms</h2>\n              </InfoIconWrapper>\n            </div>\n            <button\n              className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2\"\n              onClick={openAddFormDialog}\n            >\n              Add Top Level Form\n            </button>\n            <AddFormDialog\n              type=\"thing\"\n              interaction={tdJSON}\n              ref={addFormDialog}\n            />\n          </summary>\n          {forms && (\n            <div className=\"pt-4\">\n              <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">\n                {forms}\n              </div>\n            </div>\n          )}\n        </details>\n\n        <details className=\"pt-8\">\n          <summary className=\"flex justify-start items-center cursor-pointer\">\n            <div className=\"flex flex-grow\">\n              <InfoIconWrapper tooltip={getLinksTooltipContent()}>\n                <h2 className=\"text-2xl text-white p-1 flex-grow\">Links</h2>\n              </InfoIconWrapper>\n\n              {isLinksOpen && (\n                <button\n                  className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2 h-9\"\n                  disabled={representationFormat === \"list\"}\n                  onClick={() => representationFormatChange(\"list\")}\n                >\n                  List\n                </button>\n              )}\n              {isLinksOpen && (\n                <button\n                  className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2 h-9\"\n                  style={{ marginLeft: \"10px\" }}\n                  disabled={representationFormat === \"graph\"}\n                  onClick={() => representationFormatChange(\"graph\")}\n                >\n                  Graph\n                </button>\n              )}\n            </div>\n            <button\n              className=\"text-white font-bold text-sm bg-blue-500 cursor-pointer rounded-md p-2\"\n              onClick={openAddLinkDialog}\n            >\n              Add Top Level Link\n            </button>\n            <AddLinkTdDialog\n              type=\"link\"\n              interaction={tdJSON}\n              ref={addLinkDialog}\n            />\n          </summary>\n          {links && representationFormat === \"graph\" && (\n            <div className=\"pt-4\">\n              <div\n                className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\"\n                id=\"tdGraph\"\n              ></div>\n            </div>\n          )}\n          {links && representationFormat === \"list\" && (\n            <div className=\"pt-4\">\n              <div className=\"rounded-lg bg-gray-600 px-6 pt-4 pb-4\">\n                {links}\n              </div>\n            </div>\n          )}\n        </details>\n\n        <InteractionSection interaction=\"Properties\"></InteractionSection>\n        <InteractionSection interaction=\"Actions\"></InteractionSection>\n        <InteractionSection interaction=\"Events\"></InteractionSection>\n      </div>\n    );\n  }\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext, useState, useRef, useEffect } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { changeBetweenTd } from '../../util';\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nconst mapping = require(\"../../assets/mapping.json\");\n\nconst tdSchema =\n  \"https://raw.githubusercontent.com/thingweb/thingweb-playground/%40thing-description-playground/web%401.0.0/packages/playground-core/td-schema.json\";\nconst tmSchema =\n  \"https://raw.githubusercontent.com/w3c/wot-thing-description/main/validation/tm-json-schema-validation.json\";\n\n//List of all Options can be found here: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html\nconst editorOptions = {\n  selectOnLineNumbers: true,\n  automaticLayout: true,\n  lineDecorationsWidth: 20,\n};\n\nconst JSONEditorComponent = (props) => {\n  const context = useContext(ediTDorContext);\n  const [schemas] = useState([]);\n  const [proxy, setProxy] = useState(undefined);\n  const editorInstance = useRef(null);\n  const [tabs, setTabs] = useState([]);\n\n  const editorWillMount = async (monaco) => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      enableSchemaRequest: true,\n      schemas: [],\n    });\n\n    if (!(\"Proxy\" in window)) {\n      console.warn(\"Your browser doesn't support Proxies.\");\n      return;\n    }\n\n    let proxy = new Proxy(schemas, {\n      set: function (target, property, value, _) {\n        target[property] = value;\n\n        let jsonSchemaObjects = [tdSchema];\n        for (let i = 0; i < target.length; i++) {\n          jsonSchemaObjects.push({\n            fileMatch: [\"*/*\"],\n            uri: target[i],\n          });\n        }\n\n        monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n          validate: true,\n          enableSchemaRequest: true,\n          schemas: jsonSchemaObjects,\n        });\n\n        return true;\n      },\n    });\n    setProxy(proxy);\n  };\n\n  const editorDidMount = (editor, monaco) => {\n    editor.onDidChangeModelDecorations(() => {\n      const model = editor.getModel();\n      if (model === null || model.getModeId() !== \"json\") return;\n    });\n  };\n\n  const addSchema = (val) => {\n    if (proxy.includes(val)) {\n      return;\n    }\n    proxy.push(val);\n  };\n\n  const removeSchema = (val) => {\n    const index = proxy.indexOf(val);\n    if (index === -1) {\n      return;\n    }\n    proxy.splice(index, 1);\n  };\n\n  const emptySchemas = () => {\n    proxy.splice(0, this.state.proxy.length);\n  };\n\n  const fetchSchema = async (target) => {\n    if (proxy.includes(target)) {\n      return;\n    }\n\n    try {\n      const url = new URL(target);\n      const res = await fetch(url);\n\n      const schema = await res.json();\n      return schema;\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const onChange = async (editorText, _) => {\n    try {\n      const json = JSON.parse(editorText);\n      if (!(\"@context\" in json)) {\n        emptySchemas();\n        return;\n      }\n      //Initialize TD-Schema\n      if (context.isThingModel === undefined) {\n        context.updateIsThingModel(false);\n        const schema = await fetchSchema(tdSchema);\n        if (schema) {\n          addSchema(tdSchema);\n        }\n      }\n\n      const atContext = json[\"@context\"];\n      const atType = json[\"@type\"];\n      if (atType && atType.indexOf(\"ThingModel\") > -1) {\n        if (!context.isThingModel) {\n          context.updateIsThingModel(true);\n          const schema = await fetchSchema(tmSchema);\n          if (schema) {\n            addSchema(tmSchema);\n            removeSchema(tdSchema);\n          }\n        }\n      } else if (context.isThingModel) {\n        if (\n          JSON.stringify(atContext).indexOf(\n            \"https://www.w3.org/2019/wot/td/v1\"\n          ) > -1\n        ) {\n          context.updateIsThingModel(false);\n          const schema = await fetchSchema(tdSchema);\n          if (schema) {\n            addSchema(tdSchema);\n            removeSchema(tmSchema);\n          }\n        }\n      }\n\n      // handle if @context is a string\n      if (typeof atContext === \"string\") {\n        if (mapping[atContext] !== undefined && !proxy.includes(mapping[atContext])) {\n          const schema = await fetchSchema(atContext);\n          if (schema) {\n            addSchema(atContext);\n          }\n          return;\n        }\n      }\n\n      // handle if @context is an array\n      if (Array.isArray(atContext)) {\n        for (let i = 0; i < atContext.length; i++) {\n          if (typeof atContext[i] === \"string\") {\n            if (mapping[atContext] !== undefined && !proxy.includes(mapping[atContext])) {\n              console.log(\"found schema for\", atContext);\n              const schema = await fetchSchema(atContext[i]);\n              if (schema) {\n                addSchema(atContext[i]);\n              }\n            }\n          }\n          if (typeof atContext[i] === \"object\") {\n            Object.keys(atContext[i]).forEach(async (contextKey) => {\n              if (mapping[atContext[i][contextKey]] !== undefined && !proxy.includes(mapping[atContext])) {\n                const schema = await fetchSchema(mapping[atContext[i][contextKey]]);\n                if (schema) {\n                  addSchema(mapping[atContext[i][contextKey]]);\n                }\n              }\n            });\n          }\n        }\n      }\n      // remove deleted schemas\n      if (Array.isArray(atContext)) {\n        for (let i = 0; i < proxy.length; i++) {\n          const x = Object.keys(mapping).find(\n            (key) => mapping[key] === proxy[i]\n          );\n          if (!atContext.includes(x)) {\n            removeSchema(proxy[i]);\n          }\n        }\n      }\n    } catch (e) {\n    } finally {\n      tdValidator(editorText, console.log, {}).then(result =>{\n        context.updateValidationMessage(result);\n        context.updateOfflineTD(editorText, \"Editor\");\n      }, err =>{\n        console.log(\"Error\");\n        console.log(err);\n      })\n    }\n  };\n\n  useEffect(() => {\n    async function getTabs() {\n      try {\n        if (context.linkedTd) {\n          let tabs = [];\n          let index = 0;\n          for (let key in context.linkedTd) {\n            if (context.linkedTd[key][\"kind\"] === \"file\" || Object.keys(context.linkedTd[key]).length) {\n              tabs.push(<option value={key} key={index}>{key}</option>);\n              index++;\n            }\n          }\n          setTabs(tabs);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    getTabs();\n  }, [context.linkedTd, context.offlineTD]);\n\n  const changeLinkedTd = async () => {\n    let href = document.getElementById(\"linkedTd\").value;\n    changeBetweenTd(context, href);\n  }\n  return (\n    <>\n      <div id=\"tabsBackground\" >\n        {\n          context.offlineTD && context.linkedTd &&\n          <select name=\"linkedTd\" id=\"linkedTd\" className=\"text-white\" onChange={() => changeLinkedTd()}>\n            {tabs}\n          </select>\n        }\n      </div>\n      <div className=\"w-full h-full\" id=\"editor\">\n        <MonacoEditor\n          options={editorOptions}\n          theme={\"vs-\" + context.theme}\n          language=\"json\"\n          ref={editorInstance}\n          value={context.offlineTD}\n          editorWillMount={editorWillMount}\n          editorDidMount={editorDidMount}\n          onChange={async (editorText) => {\n            await onChange(editorText);\n          }}\n        />\n      </div>\n    </>\n\n  );\n};\n\nexport default JSONEditorComponent;\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\n\nexport default function Button(props) {\n    return (\n        <button\n            onClick={props.onClick}\n            className=\"\n                flex\n                bg-blue-400                 \n                hover:bg-blue-300 \n                text-white \n                font-bold \n                py-2 px-5 \n                rounded \n                h-12\n                text-center \n                cursor-pointer\n                justify-center\n            \">\n            <div className=\"place-self-center\">\n                {props.children}\n            </div>\n        </button>\n    );\n}","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { DialogTemplate } from \"./DialogTemplate\";\n\nexport const ShareDialog = forwardRef((props, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    useEffect(() => {\n        if (display === true) {\n            copyLinkToClipboard(createPermalink(context.offlineTD));\n            focusPermalinkField()\n        }\n    }, [display, context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const urlField = createPermalinkField(context.offlineTD);\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                cancelText={\"Close\"}\n                hasSubmit={false}\n                children={urlField}\n                title={\"Share This TD\"}\n                description={\"A link to this TD was copied to your clipboard.\"}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\nconst createPermalink = (td) => {\n    let parsedTD = {};\n    try {\n        parsedTD = JSON.parse(td);\n    } catch (_) { }\n\n    return `${window.location.origin+window.location.pathname}?td=${encodeURIComponent(\n        JSON.stringify(parsedTD)\n    )}`;\n}\n\nconst createPermalinkField = (td) => {\n    return (<input\n        type=\"text\"\n        name=\"share-td-field\"\n        id=\"share-td-field\"\n        className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n        defaultValue={createPermalink(td)}\n    />);\n};\n\nconst copyLinkToClipboard = (link) => {\n    if (document.hasFocus()) {\n        navigator.clipboard.writeText(link).then(\n            function () {\n                console.log(\"Async: Copied TD link to clipboard!\");\n            },\n            function (err) {\n                console.error(\"Async: Could not copy TD to clipboard: \", err);\n            }\n        );\n    }\n}\n\nconst focusPermalinkField = () => {\n    setTimeout(() => {\n        try {\n            const textfield = document.getElementById(\"share-td-field\");\n            textfield.select();\n        } catch (_) { }\n    }, 250);\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useContext, useEffect, useImperativeHandle } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ediTDorContext from \"../../context/ediTDorContext\";\nimport { DialogTemplate } from \"./DialogTemplate\";\n\nexport const ConvertTmDialog = forwardRef((props, ref) => {\n    const context = useContext(ediTDorContext);\n    const [htmlInputs, setHtmlInputs] = React.useState([]);\n    const [display, setDisplay] = React.useState(() => { return false });\n\n    useEffect(() => {\n        setHtmlInputs(createHtmlInputs(context.offlineTD));\n    }, [context]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => convertTmToTd(context.offlineTD, htmlInputs)}\n                submitText={\"Generate TD\"}\n                children={htmlInputs}\n                title={\"Generate TD From TM\"}\n                description={\"Please provide values to switch the placeholders with.\"}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\n\nconst createHtmlInputs = (td) => {\n    try {\n        let regex = /{{/gi,\n            result,\n            startIindices = [];\n        while ((result = regex.exec(td))) {\n            startIindices.push(result.index);\n        }\n        regex = /}}/gi;\n        let endIndices = [];\n        while ((result = regex.exec(td))) {\n            endIndices.push(result.index);\n        }\n        let placeholders = [];\n        for (let i = 0; i < startIindices.length; i++) {\n            placeholders.push(td.slice(startIindices[i] + 2, endIndices[i]));\n        }\n        placeholders = [...new Set(placeholders)];\n        const htmlInputs = placeholders.map((holder) => {\n            return (\n                <div key={holder} className=\"py-1\">\n                    <label htmlFor={holder} className=\"text-sm text-gray-400 font-medium pl-2\">{holder}:</label>\n                    <input\n                        type=\"text\"\n                        name={holder}\n                        id={holder}\n                        className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n                        placeholder=\"Enter a value...\"\n                    />\n                </div>\n            );\n        });\n\n        // Containers for created html elements (checkboxes) of each interaction affordance\n        let htmlProperties = [];\n        let htmlActions = [];\n        let htmlEvents = [];\n\n        try {\n            const parsed = JSON.parse(td);\n            const properties = Object.keys(parsed[\"properties\"] ? parsed[\"properties\"] : {});\n            const actions = Object.keys(parsed[\"actions\"] ? parsed[\"actions\"] : {});\n            const events = Object.keys(parsed[\"events\"] ? parsed[\"events\"] : {});\n            const requiredFields = {\"properties\": [], \"actions\": [], \"events\": []};\n\n            // Parse the required interaction affordances\n            if (parsed[\"tm:required\"]) {\n                for (const field of parsed[\"tm:required\"]) {\n                    if (field.startsWith(\"#properties/\"))\n                        requiredFields[\"properties\"].push(field.split(\"/\")[1]);\n                    else if (field.startsWith(\"#actions/\"))\n                        requiredFields[\"actions\"].push(field.split(\"/\")[1]);\n                    else if (field.startsWith(\"#events/\"))\n                        requiredFields[\"events\"].push(field.split(\"/\")[1]);\n                }\n            }\n\n            // Create html (checkboxes) for specific interaction affordances\n            function createAffordanceHtml(affName, affContainer) {\n                return affContainer.map((aff) => {\n                    const required = requiredFields[affName].includes(aff);\n                    return (\n                        <div key={`${affName}/${aff}`} className=\"form-checkbox py-1 pl-2\">\n                            <input id={`${affName}/${aff}`}\n                                className=\"form-checkbox-input\"\n                                type=\"checkbox\"\n                                value={`#${affName}/${aff}`}\n                                disabled={required}\n                                defaultChecked={true}\n                                title={required ? \"This field is required by the TM.\" : \"\"}\n                                data-interaction={affName}\n                            />\n                            <label className=\"form-checkbox-label pl-2\" htmlFor={`${affName}/${aff}`}>{`#${affName}/${aff}`}</label>\n                        </div>\n                    );\n                });\n            };\n\n            htmlProperties = createAffordanceHtml(\"properties\", properties);\n            htmlActions = createAffordanceHtml(\"actions\", actions);\n            htmlEvents = createAffordanceHtml(\"events\", events);\n\n        } catch (ignored) {}\n\n        const divider = (\n            <h2 key=\"modalDividerText\" className=\"text-gray-400 pb-2 pt-4\">\n                {\"Also, select/unselect the interaction affordances you would like to see in the new TD.\"}\n            </h2>\n        );\n\n        return [...htmlInputs, divider, ...htmlProperties, ...htmlActions, ...htmlEvents];\n    } catch (e) {\n        console.log(e);\n        return [];\n    }\n};\n\nconst convertTmToTd = (td, htmlInputs) => {\n    let mappingObject = {}\n    const properties = [];\n    const actions = [];\n    const events = [];\n\n    // Process the ticked affordances and save them in respective arrays\n    for (const item of htmlInputs) {\n        if (item.props.className.indexOf(\"form-checkbox\") > -1 &&\n        document.getElementById(item.props.children[0].props.id).checked) {\n            if (item.props.children[0].props[\"data-interaction\"] === \"properties\")\n                properties.push(item[\"key\"].split(\"/\")[1]);\n            else if (item.props.children[0].props[\"data-interaction\"] === \"actions\")\n                actions.push(item[\"key\"].split(\"/\")[1]);\n            else if (item.props.children[0].props[\"data-interaction\"] === \"events\")\n                events.push(item[\"key\"].split(\"/\")[1]);\n        }\n    }\n\n    // Process the placeholders\n    htmlInputs = htmlInputs.filter((e) => {\n        return e.props.className.indexOf(\"form-checkbox\") === -1 && e.key !== \"modalDividerText\";\n    });\n    htmlInputs.forEach((y) => {\n        const elem = document.getElementById(y.key)\n        mappingObject[y.key] = elem.value\n        return elem.value\n    });\n    Object.keys(mappingObject).forEach(key => {\n        td = td.split(`{{${key}}}`).join(mappingObject[key])\n    })\n    const parse = JSON.parse(td);\n\n    // Create new affordances by leaving only the ticked ones\n    if (parse[\"properties\"]) {\n        const newProperties = Object.keys(parse[\"properties\"])\n            .filter(key => properties.includes(key))\n            .reduce((obj, key) => {\n                obj[key] = parse[\"properties\"][key];\n                return obj;\n            }, {});\n\n        // Adapt the new TD\n        parse[\"properties\"] = newProperties;\n    }\n\n    if (parse[\"actions\"]) {\n        const newActions = Object.keys(parse[\"actions\"])\n            .filter(key => actions.includes(key))\n            .reduce((obj, key) => {\n                obj[key] = parse[\"actions\"][key];\n                return obj;\n            }, {});\n\n        // Adapt the new TD\n        parse[\"actions\"] = newActions;\n    }\n\n    if (parse[\"events\"]) {\n        const newEvents = Object.keys(parse[\"events\"])\n            .filter(key => events.includes(key))\n            .reduce((obj, key) => {\n                obj[key] = parse[\"events\"][key];\n                return obj;\n            }, {});\n\n        // Adapt the new TD\n        parse[\"events\"] = newEvents;\n    }\n\n    // Remove TM related data\n    delete parse[\"@type\"];\n    delete parse[\"tm:required\"];\n\n    let permalink = `${window.location.origin+window.location.pathname}?td=${encodeURIComponent(JSON.stringify(parse))}`;\n    window.open(permalink, \"_blank\");\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { forwardRef, useImperativeHandle, useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { DialogTemplate } from \"./DialogTemplate\";\nimport ediTDorContext from '../../context/ediTDorContext';\nimport { ChevronDown } from 'react-feather';\nimport {tdValidator} from \"../../external/TdPlayground\";\n\nexport const CreateTdDialog = forwardRef((props, ref) => {\n    const context = useContext(ediTDorContext);\n    const [display, setDisplay] = React.useState(() => { return false });\n    const [type, setType] = React.useState(\"TD\");  // either TD or TM\n\n    useImperativeHandle(ref, () => {\n        return {\n            openModal: () => open(),\n            close: () => close()\n        }\n    });\n\n    const open = () => {\n        setDisplay(true)\n    };\n\n    const close = () => {\n        setDisplay(false);\n    };\n\n    const changeType = (e) => {\n        setType(e.target.value);\n    }\n\n    const getType = () => {\n        return type;\n    }\n\n    const content = buildForm(changeType, getType);\n\n    if (display) {\n        return ReactDOM.createPortal(\n            <DialogTemplate\n                onCancel={close}\n                onSubmit={() => {\n                    let td=createNewTD(type)\n                    let linkedTd={}\n                    linkedTd[td[\"title\"]]=td\n                    context.updateLinkedTd(undefined)\n                    context.addLinkedTd(linkedTd)\n                    context.updateShowConvertBtn(type === \"TM\");\n                    tdValidator(JSON.stringify(td, null, \"\\t\"), console.log, {}).then(result => {\n                        context.updateValidationMessage(result);\n                        context.updateOfflineTD(JSON.stringify(td, null, \"\\t\"),\"AppHeader\");\n                    }, err => {\n                        console.log(\"Error\");\n                        console.log(err);\n                    })\n                    close();\n                }}\n                children={content}\n                submitText={type === \"TD\" ? \"Create TD\" : \"Create TM\"}\n                title={\"Create a New TD/TM\"}\n                description={\"To quickly create a basis for your new Thing Description/Thing Model just fill out this little template and we'll get you going.\"}\n            />,\n            document.getElementById(\"modal-root\"));\n    }\n\n    return null;\n});\n\nconst buildForm = (changeType, getType) => {\n    return <>\n        <label htmlFor=\"type\" className=\"text-sm text-gray-400 font-medium pl-2\">Type:</label>\n        <div className=\"relative\">\n            <select className=\"block appearance-none w-full bg-gray-600 border-2 border-gray-600 text-white py-3 px-4 pr-8 rounded leading-tight focus:border-blue-500 focus:outline-none\" id=\"type\" onChange={changeType} value={getType()}>\n                <option value=\"TD\">Thing Description</option>\n                <option value=\"TM\">Thing Model</option>\n            </select>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <ChevronDown color=\"#cacaca\"></ChevronDown>\n            </div>\n        </div>\n        {formField(\"ID\", \"urn:thing-id\", \"thing-id\", \"url\", \"autoFocus\")}\n        {formField(\"Title\", \"Thing Title\", \"thing-title\", \"text\")}\n        {formField(\"Base\", \"http://www.example.com/thing-path\", \"thing-base\", \"url\")}\n        <label htmlFor=\"thing-description\" className=\"text-sm text-gray-400 font-medium pl-2\">Description:</label>\n        <textarea id=\"thing-description\" rows=\"5\"\n            className=\"bg-gray-600\n                sm:text-sm\n                appearance-none\n                border-2 border-gray-600 rounded w-full\n                p-2\n                text-white\n                leading-tight\n                focus:outline-none\n                focus:border-blue-500\"\n            placeholder=\"A short description about this new Thing...\" />\n        <label htmlFor=\"thing-security\" className=\"text-sm text-gray-400 font-medium pl-2\">Security:</label>\n        <div className=\"relative\">\n            <select className=\"block appearance-none w-full bg-gray-600 border-2 border-gray-600 text-white py-3 px-4 pr-8 rounded leading-tight focus:border-blue-500 focus:outline-none\" id=\"thing-security\">\n                <option>nosec</option>\n                <option>basic</option>\n                <option>digest</option>\n                <option>bearer</option>\n                <option>psk</option>\n                <option>oauth2</option>\n                <option>apikey</option>\n            </select>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <ChevronDown color=\"#cacaca\"></ChevronDown>\n            </div>\n        </div>\n    </>;\n}\n\nconst formField = (label, placeholder, id, type, autoFocus) => {\n    return <div key={id} className=\"py-1\">\n        <label htmlFor={id} className=\"text-sm text-gray-400 font-medium pl-2\">{label}:</label>\n        <input\n            name={id}\n            id={id}\n            className=\"border-gray-600 bg-gray-600 w-full p-2 sm:text-sm border-2 text-white rounded-md focus:outline-none focus:border-blue-500\"\n            placeholder={placeholder}\n            type={type}\n            autoFocus={autoFocus === 'autoFocus'}\n        />\n    </div>;\n}\n\nconst createNewTD = (type) => {\n    let id = document.getElementById('thing-id').value;\n    let title = document.getElementById('thing-title').value;\n    let base = document.getElementById('thing-base').value;\n\n    let tdDescription = document.getElementById('thing-description').value;\n    let tdSecurity = document.getElementById('thing-security').value;\n\n    var thing = {};\n\n    thing[\"@context\"] = \"https://www.w3.org/2019/wot/td/v1\";\n    thing[\"title\"] = title !== \"\" ? title : \"ediTDor Thing\";\n\n    if (type === \"TM\") {\n        thing[\"@type\"] = \"tm:ThingModel\";\n    }\n\n    if (id !== \"\") {\n        thing[\"id\"] = id !== \"\" ? id : \"urn:editdor-thing-id\";\n    }\n\n    if (base !== \"\") {\n        thing[\"base\"] = base !== \"\" ? base : \"/\";\n    }\n\n    if (tdDescription !== \"\") {\n        thing[\"description\"] = tdDescription;\n    }\n\n    let securityDefinitions = {};\n    securityDefinitions[`${tdSecurity}_sc`] = { scheme: tdSecurity };\n\n    thing[\"securityDefinitions\"] = securityDefinitions;\n    thing[\"security\"] = `${tdSecurity}_sc`;\n\n    thing[\"properties\"] = {};\n    thing[\"actions\"] = {};\n    thing[\"events\"] = {};\n\n    return thing;\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useCallback, useContext, useEffect } from \"react\";\nimport logo from \"../../../assets/editdor.png\";\nimport wot from \"../../../assets/WoT.png\";\nimport ediTDorContext from \"../../../context/ediTDorContext\";\nimport \"../../../assets/main.css\";\nimport \"../App.css\"\nimport Button from \"./Button\";\nimport { ShareDialog } from \"../../Dialogs/ShareDialog\";\nimport { ConvertTmDialog } from \"../../Dialogs/ConvertTmDialog\";\nimport { CreateTdDialog } from \"../../Dialogs/CreateTdDialog\";\nimport { getFileHandle, getFileHTML5, _readFileHTML5 } from \"../../../util.js\";\nimport {tdValidator} from \"../../../external/TdPlayground\";\n\n\nexport default function AppHeader() {\n  const context = useContext(ediTDorContext);\n  /**\n   * Check if the Browser Supports the new Native File System Api (Chromium 86.0)\n   */\n  const hasNativeFS = useCallback(() => {\n    return (\n      \"chooseFileSystemEntries\" in window || \"showOpenFilePicker\" in window\n    );\n  }, []);\n\n  const verifyDiscard = useCallback(async () => {\n    if (!context.isModified) {\n      return true;\n    }\n    const msg =\n      \"Discard changes? All changes you made to your TD will be lost.\";\n    return await window.confirm(msg);\n  }, [context.isModified]);\n\n  /**\n   *\n   * @param {*} file\n   *\n   * Read file content\n   */\n  const read = useCallback((file) => {\n    return file.text ? file.text() : _readFileHTML5(file);\n  }, []);\n\n  const readFile = useCallback(\n    async (file, fileHandle) => {\n      try {\n        let td = await read(file)\n        let linkedTd = {}\n        if (fileHandle !== undefined) {\n          linkedTd[\"./\" + file.name] = fileHandle;\n        }\n        else {\n          linkedTd[\"./\" + file.name] = JSON.parse(td);\n        }\n        tdValidator(td, console.log, {}).then(result => {\n          context.updateLinkedTd(undefined);\n          context.addLinkedTd(linkedTd);\n          context.setFileHandle(fileHandle || file.name);\n          context.updateIsModified(false);\n          context.updateValidationMessage(result);\n          context.updateOfflineTD(td);\n        }, err => {\n          console.log(\"Error\");\n          console.log(err);\n        })\n\n      } catch (ex) {\n        const msg = `An error occured reading ${context.offlineTD}`;\n        console.error(msg, ex);\n        //TODO: Replace with custom alert\n        alert(msg);\n      }\n    },\n    [context, read]\n  );\n\n  /**\n   *\n   * @param {*} _\n   *\n   * Open File from Filesystem\n   */\n  const openFile = useCallback(\n    async (_) => {\n      if (!(await verifyDiscard())) {\n        return;\n      }\n\n      if (!hasNativeFS()) {\n        const file = await getFileHTML5();\n        if (file) {\n          await readFile(file);\n        }\n        return;\n      }\n      let fileHandle;\n      try {\n        fileHandle = await getFileHandle();\n        const file = await fileHandle.getFile();\n        await readFile(file, fileHandle);\n      } catch (ex) {\n        const msg = \"We ran into an error trying to open your TD.\";\n        console.error(msg, ex);\n        alert(msg);\n      }\n    },\n    [readFile, verifyDiscard, hasNativeFS]\n  );\n\n  const writeFile = useCallback(\n    async (fileHandle, contents) => {\n      if (fileHandle.createWriter) {\n        const writer = await fileHandle.createWriter();\n        await writer.write(0, contents);\n        await writer.close();\n        return;\n      }\n\n      const writable = await fileHandle.createWritable();\n      await writable.write(contents);\n      await writable.close();\n\n      // refresh td for rendered view\n      setTimeout(() => {\n        context.updateOfflineTD(contents, \"AppHEader\");\n        context.updateIsModified(false);\n      }, 500);\n    },\n    [context]\n  );\n\n  const saveAsHTML5 = useCallback((filename, contents) => {\n    const aDownload = document.getElementById(\"aDownload\");\n    let tdJSON = {}\n    let tdTitle\n    try {\n      tdJSON = JSON.parse(contents);\n      tdTitle = tdJSON[\"id\"] || tdJSON[\"title\"]\n      tdTitle = tdTitle.replace(/\\s/g, \"\") + \".jsonld\"\n    } catch (e) {\n      console.error(e);\n    }\n    filename = filename || tdTitle;\n    const opts = { type: \"application/ld+json\" };\n    const file = new File([contents], \"\", opts);\n    aDownload.href = window.URL.createObjectURL(file);\n    aDownload.setAttribute(\"download\", filename);\n    aDownload.click();\n  }, []);\n\n  const saveFileAs = useCallback(async () => {\n    if (!hasNativeFS()) {\n      saveAsHTML5(context.name, context.offlineTD);\n      return;\n    }\n\n    let fileHandle;\n    try {\n      fileHandle = await getNewFileHandle();\n    } catch (ex) {\n      const msg = \"We ran into an error trying to save your TD.\";\n      console.error(msg, ex);\n      return alert(msg);\n    }\n\n    try {\n      await writeFile(fileHandle, context.offlineTD);\n      if (document.getElementById(\"linkedTd\")) {\n        let href = document.getElementById(\"linkedTd\").value;\n        if (typeof context.fileHandle !== \"object\") {\n          let linkedTd = context.linkedTd;\n          linkedTd[href] = fileHandle;\n          context.updateLinkedTd(linkedTd);\n        }\n      }\n      context.setFileHandle(fileHandle);\n      context.updateIsModified(false);\n    } catch (ex) {\n      const msg = \"Unfortunately we were unable to save your TD.\";\n      console.error(msg, ex);\n      alert(msg);\n    }\n  }, [saveAsHTML5, hasNativeFS, context, writeFile]);\n\n  const saveFile = useCallback(async () => {\n    try {\n      if (!context.fileHandle) {\n        return await saveFileAs();\n      }\n      await writeFile(context.fileHandle, context.offlineTD);\n      alert(\"File saved\")\n    } catch (ex) {\n      const msg = \"Unfortunately we were unable to save your TD.\";\n      console.error(msg, ex);\n      alert(msg);\n    }\n  }, [context, saveFileAs, writeFile]);\n\n  const getNewFileHandle = async () => {\n    // new file system api\n    if (\"showSaveFilePicker\" in window) {\n      const opts = {\n        types: [\n          {\n            description: \"Thing Description\",\n            accept: { \"application/ld+json\": [\".jsonld\", \".json\"] },\n          },\n        ],\n      };\n\n      return await window.showSaveFilePicker(opts);\n    }\n\n    // old html file input\n    const opts = {\n      type: \"save-file\",\n      accepts: [\n        {\n          description: \"Thing Description\",\n          extensions: [\".jsonld\", \".json\"],\n          mimeTypes: [\"application/ld+json\"],\n        },\n      ],\n    };\n\n    return await window.chooseFileSystemEntries(opts);\n  };\n\n\n  useEffect(() => {\n    if (window.location.search.indexOf(\"td\") > -1) {\n      const url = new URL(window.location.href);\n      const td = url.searchParams.get(\"td\");\n      try {\n        const parsedTD = JSON.parse(td);\n        if (parsedTD[\"@type\"] === \"tm:ThingModel\") {\n          context.updateIsThingModel(true)\n        }\n        context.updateOfflineTD(JSON.stringify(parsedTD, null, 2));\n      } catch (error) {\n        alert('Sorry, we were unable to parse the TD given in the URL')\n      }\n    }\n    //because the GET Param should be only loaded once, the next line was added\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const shortcutHandler = (e) => {\n      if (\n        (window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) &&\n        e.key === \"s\"\n      ) {\n        e.preventDefault();\n        e.stopPropagation();\n        saveFile();\n      }\n      if (\n        (window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) &&\n        e.key === \"o\"\n      ) {\n        e.preventDefault();\n        e.stopPropagation();\n        openFile();\n      }\n      if (\n        (window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey) &&\n        e.key === \"n\"\n      ) {\n        e.preventDefault();\n        e.stopPropagation();\n        openCreateTdDialog();\n      }\n    };\n\n    // Adding Eventlistener for shortcuts\n    document.addEventListener(\"keydown\", shortcutHandler, false);\n    window.onbeforeunload = function (event) {\n      var message =\n        \"Important: Please click on 'Save' button to leave this page.\";\n      if (typeof event == \"undefined\") {\n        event = window.event;\n      }\n      if (event) {\n        event.returnValue = message;\n      }\n      return message;\n    };\n    return () => {\n      //Remove Eventlistener for shortcuts before unmounting component\n      document.removeEventListener(\"keydown\", shortcutHandler, false);\n    };\n  }, [openFile, saveFile, context]);\n\n  const convertTmDialog = React.useRef();\n  const openConvertTmDialog = () => { convertTmDialog.current.openModal() }\n\n  const shareDialog = React.useRef();\n  const openShareDialog = () => { shareDialog.current.openModal() }\n\n  const createTdDialog = React.useRef();\n  const openCreateTdDialog = () => { createTdDialog.current.openModal() }\n\n  return (\n    <>\n      <header className=\"flex justify-between items-center h-16 bg-blue-500\">\n        <div className=\"flex items-center\">\n          <img className=\"pl-2 h-12\" src={wot} alt=\"WOT\" />\n          <div className=\"w-2\"></div>\n          <button>\n          <img className=\"pl-2 h-8\" src={logo} alt=\"LOGO\" onClick={() => window.open(\"https://eclipse.github.io/editdor/\",\"_blank\")}/>\n          </button>\n        </div>\n        <div className=\"flex space-x-2 pr-2\">\n          <Button onClick={openShareDialog}>Share</Button>\n          <Button onClick={openCreateTdDialog}>New</Button>\n          <Button onClick={openFile}>Open</Button>\n          {(hasNativeFS()) && <Button onClick={saveFile}>Save</Button>}\n          <Button onClick={saveFileAs}>Save As</Button>\n          {(context.showConvertBtn || context.isThingModel) && <Button onClick={openConvertTmDialog}>Convert To TD</Button>}\n        </div>\n      </header>\n      <ConvertTmDialog ref={convertTmDialog} />\n      <ShareDialog ref={shareDialog} />\n      <CreateTdDialog ref={createTdDialog} />\n      <input\n        className=\"h-0\"\n        type=\"file\"\n        id=\"fileInput\"\n        style={{ display: \"none\" }}\n      ></input>\n      <a className=\"h-0\" id=\"aDownload\" href=\"/\" style={{ display: \"none\" }}>\n        download\n      </a>\n    </>\n  );\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2022 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useContext } from 'react';\nimport ediTDorContext from '../../context/ediTDorContext';\n\nconst AppFooter = (props) => {\n    const context = useContext(ediTDorContext);\n    let megaBytes = 0\n    let propertiesCount = 0\n    let actionsCount = 0\n    let eventsCount = 0\n    try {\n        const parse = JSON.parse(context.offlineTD)\n        const size = new TextEncoder().encode(JSON.stringify(parse)).length\n        megaBytes = formatByteSize(size);\n        propertiesCount = parse.properties ? Object.keys(parse.properties).length : 0\n        actionsCount = parse.properties ? Object.keys(parse.actions).length : 0\n        eventsCount = parse.properties ? Object.keys(parse.events).length : 0\n    }\n    catch (e) {\n        // console.log(e)\n    }\n    return (<>\n        <footer className=\"bg-blue-500 h-8 flex flex-col items-center justify-center text-white\">\n            <div className=\"flex flex-row items-center justify-start w-full\">\n                <div className=\"mx-2\">Properties: {propertiesCount}</div>\n                <div className=\"mx-2\">Actions: {actionsCount}</div>\n                <div className=\"mx-2\">Events: {eventsCount}</div>\n                <div className=\"mx-2 flex-grow\">Size: {megaBytes}</div>\n                <div className=\"mx-2 justify-self-end\">Version: {process.env.REACT_APP_NPM_PACKAGE_VERSION} | <u><a href=\"https://github.com/eclipse/editdor\" target=\"_blank\" rel=\"noopener noreferrer\">We are on GitHub</a></u></div>\n            </div>\n        </footer>\n    </>\n    );\n}\n\nfunction formatByteSize(bytes) {\n    if(bytes < 1024) return bytes + \" bytes\";\n    else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\n    else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\n    else return(bytes / 1073741824).toFixed(3) + \" GiB\";\n};\n\n\nexport default AppFooter\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nexport const UPDATE_OFFLINE_TD = 'UPDATE_OFFLINE_TD';\nexport const UPDATE_IS_MODFIED = 'UPDATE_IS_MODFIED';\nexport const UPDATE_IS_THINGMODEL = 'UPDATE_IS_THINGMODEL';\nexport const SET_FILE_HANDLE = 'SET_FILE_HANDLE';\nexport const REMOVE_FORM_FROM_TD = 'REMOVE_FORM_FROM_TD';\nexport const REMOVE_LINK_FROM_TD = 'REMOVE_LINK_FROM_TD';\nexport const ADD_PROPERTYFORM_TO_TD = 'ADD_PROPERTYFORM_TO_TD';\nexport const ADD_ACTIONFORM_TO_TD = 'ADD_ACTIONFORM_TO_TD';\nexport const ADD_EVENTFORM_TO_TD = 'ADD_EVENTFORM_TO_TD';\nexport const REMOVE_ONE_OF_A_KIND_FROM_TD = 'REMOVE_ONE_OF_A_KIND_FROM_TD';\nexport const UPDATE_SHOW_CONVERT_BTN = 'UPDATE_SHOW_CONVERT_BTN';\nexport const ADD_LINKED_TD = 'ADD_LINKED_TD';\nexport const UPDATE_LINKED_TD = 'UPDATE_LINKED_TD';\nexport const UPDATE_VALIDATION_MESSAGE = 'UPDATE_VALIDATION_MESSAGE';\n\nconst updateOfflineTDReducer = (offlineTD, state) => {\n  let linkedTd=state.linkedTd\n  try{\n    //If the user write Thing description without wizard, we save it in linkedTd\n    if(!linkedTd){\n      let parsedTd=JSON.parse(offlineTD)\n      linkedTd={}\n      let href=parsedTd[\"title\"]||\"ediTDor Thing\"\n      linkedTd[href]=parsedTd\n    }\n    else if(linkedTd&& typeof state.fileHandle !== \"object\"){\n      let parsedTd=JSON.parse(offlineTD)\n      if(document.getElementById(\"linkedTd\")){\n        let href= document.getElementById(\"linkedTd\").value\n        if(href===\"\"){\n        linkedTd[parsedTd[\"title\"]||\"ediTDor Thing\"]=parsedTd\n        }\n        else{\n          linkedTd[href]=parsedTd\n        }\n      }\n    }\n  }catch(e){\n    let error = e.message;\n    console.log(error)\n  }\n  return { ...state, offlineTD, isModified: true, linkedTd:linkedTd };\n};\n\nconst removeFormReducer = (form, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  console.log(form);\n  if (form.type === 'forms') {\n    offlineTD.forms.forEach((element, i) => {\n      if (typeof (element.op) === 'string') {\n          offlineTD.forms.splice(i, 1)\n      } else {\n        if (element.href === form.form.href && element.op.indexOf(form.form.op) !== -1) {\n          element.op.splice(element.op.indexOf(form.form.op), 1)\n        }\n        if (element.op.length === 0) {\n          offlineTD.forms.splice(i, 1)\n        }\n      }\n    });\n  } else {\n    try {\n      offlineTD[form.type][form.propName].forms.forEach((element, i) => {\n        if (typeof (element.op) === 'string') {\n          if (element.href === form.form.href) {\n            offlineTD[form.type][form.propName].forms.splice(i, 1)\n          }\n        } else {\n          if (element.href === form.form.href && element.op.indexOf(form.form.op) !== -1) {\n            element.op.splice(element.op.indexOf(form.form.op), 1)\n          }\n          if (element.op.length === 0) {\n            offlineTD[form.type][form.propName].forms.splice(i, 1)\n          }\n        }\n      });\n    } catch (e) {\n      alert('Sorry we were unable to delete the Form.');\n    }\n  }\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst removeLinkReducer = (index, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n    try {\n      offlineTD[\"links\"].splice(index,1)\n    } catch (e) {\n      alert('Sorry we were unable to delete the Link.');\n    }\n  let linkedTd=state.linkedTd\n  if(linkedTd&& typeof state.fileHandle !== \"object\"){\n    if(document.getElementById(\"linkedTd\")){\n      let href= document.getElementById(\"linkedTd\").value\n      if(href===\"\"){\n      linkedTd[offlineTD[\"title\"]||\"ediTDor Thing\"]=offlineTD\n      }\n      else{\n        linkedTd[href]=offlineTD\n      }\n    }\n  }\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2),linkedTd:linkedTd };\n};\n\nconst removeOneOfAKindReducer = (kind, oneOfAKindName, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  try {\n    delete offlineTD[kind][oneOfAKindName]\n  } catch (e) {\n    alert('Sorry we were unable to delete the Form.');\n  }\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addPropertyFormReducer = (form, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const property = offlineTD.properties[form.propName];\n  if (property.forms === undefined) {\n    property.forms = []\n  }\n  property.forms.push(form.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addLinkedTd = (td, state) =>{\n  let resultingLinkedTd ={}\n  let linkedTd= state.linkedTd\n\n  if(linkedTd === undefined){\n     resultingLinkedTd=td\n  }\n  else{\n  resultingLinkedTd = Object.assign(linkedTd, td)\n  }\n  return { ...state, linkedTd: resultingLinkedTd };\n}\n\nconst updateLinkedTd = (td, state) =>{\n  return { ...state, linkedTd: td };\n}\n\nconst addActionFormReducer = (params, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const action = offlineTD.actions[params.actionName];\n  console.log('ActionForms', action.forms)\n  if (action.forms === undefined) {\n    action.forms = []\n  }\n  action.forms.push(params.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst addEventFormReducer = (params, state) => {\n  let offlineTD = JSON.parse(state.offlineTD)\n  const event = offlineTD.events[params.eventName];\n  if (event.forms === undefined) {\n    event.forms = []\n  }\n  event.forms.push(params.form);\n  return { ...state, offlineTD: JSON.stringify(offlineTD, null, 2) };\n};\n\nconst updateIsModified = (isModified, state) => {\n  return { ...state, isModified: isModified };\n};\n\nconst updateIsThingModel = (isThingModel, state) => {\n  return { ...state, isThingModel: isThingModel };\n};\n\nconst updateFileHandleReducer = (fileHandle, state) => {\n  return { ...state, fileHandle: fileHandle };\n};\n\nconst updateShowConvertBtn = (showConvertBtn, state) => {\n  return { ...state, showConvertBtn: showConvertBtn };\n};\n\nconst updateValidationMessage = (validationMessage, state) =>{\n  return { ...state, validationMessage };\n\n}\n\n\nconst editdorReducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_OFFLINE_TD:\n      return updateOfflineTDReducer(action.offlineTD, state);\n    case UPDATE_IS_MODFIED:\n      return updateIsModified(action.isModified, state);\n    case UPDATE_IS_THINGMODEL:\n      return updateIsThingModel(action.isThingModel, state);\n    case SET_FILE_HANDLE:\n      const newState = updateFileHandleReducer(action.fileHandle, state)\n      return newState;\n    case REMOVE_FORM_FROM_TD:\n      return removeFormReducer(action.form, state)\n    case REMOVE_LINK_FROM_TD:\n        return removeLinkReducer(action.link, state)\n    case REMOVE_ONE_OF_A_KIND_FROM_TD:\n      return removeOneOfAKindReducer(action.kind, action.oneOfAKindName, state)\n    case ADD_PROPERTYFORM_TO_TD:\n      return addPropertyFormReducer(action.form, state)\n    case ADD_ACTIONFORM_TO_TD:\n      return addActionFormReducer(action.params, state)\n    case ADD_EVENTFORM_TO_TD:\n      return addEventFormReducer(action.params, state)\n    case UPDATE_SHOW_CONVERT_BTN:\n      return updateShowConvertBtn(action.showConvertBtn, state);\n    case ADD_LINKED_TD:\n      return addLinkedTd(action.linkedTd,state)\n    case UPDATE_LINKED_TD:\n      return updateLinkedTd(action.linkedTd,state)\n    case UPDATE_VALIDATION_MESSAGE:\n      return updateValidationMessage(action.validationMessage, state)\n    default:\n      return state;\n  }\n};\n\nexport { editdorReducer }\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n *\n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useReducer } from 'react';\n\nimport EdiTDorContext from './ediTDorContext';\nimport { editdorReducer, REMOVE_FORM_FROM_TD, REMOVE_LINK_FROM_TD, UPDATE_IS_THINGMODEL, SET_FILE_HANDLE, UPDATE_IS_MODFIED, UPDATE_OFFLINE_TD, ADD_PROPERTYFORM_TO_TD, ADD_ACTIONFORM_TO_TD, ADD_EVENTFORM_TO_TD, REMOVE_ONE_OF_A_KIND_FROM_TD, UPDATE_SHOW_CONVERT_BTN, ADD_LINKED_TD, UPDATE_LINKED_TD, UPDATE_VALIDATION_MESSAGE} from './editorReducers';\n\n\nconst GlobalState = props => {\n  const [editdorState, dispatch] = useReducer(editdorReducer, { offlineTD: '', theme: 'dark' , validationMessage: ''});\n\n  const updateOfflineTD = (offlineTD, props) => {\n    dispatch({ type: UPDATE_OFFLINE_TD, offlineTD: offlineTD });\n  };\n\n  const updateIsModified = isModified => {\n    dispatch({ type: UPDATE_IS_MODFIED, isModified: isModified });\n  };\n\n  const updateIsThingModel = isThingModel => {\n    dispatch({ type: UPDATE_IS_THINGMODEL, isThingModel: isThingModel });\n  };\n\n  const setFileHandle = fileHandle => {\n    dispatch({ type: SET_FILE_HANDLE, fileHandle: fileHandle });\n  };\n\n  const removeForm = form => {\n    dispatch({ type: REMOVE_FORM_FROM_TD, form: form });\n  };\n\n  const removeLink = link => {\n    dispatch({ type: REMOVE_LINK_FROM_TD, link: link });\n  };\n\n  const addForm = form => {\n    dispatch({ type: ADD_PROPERTYFORM_TO_TD, form: form });\n  };\n\n  const addActionForm = params => {\n    dispatch({ type: ADD_ACTIONFORM_TO_TD, params: params });\n  };\n  const addEventForm = params => {\n    dispatch({ type: ADD_EVENTFORM_TO_TD, params: params });\n  };\n  const removeOneOfAKindReducer = (kind, oneOfAKindName) => {\n    dispatch({ type: REMOVE_ONE_OF_A_KIND_FROM_TD, kind, oneOfAKindName });\n  };\n  const updateShowConvertBtn = showConvertBtn => {\n    dispatch({ type: UPDATE_SHOW_CONVERT_BTN, showConvertBtn: showConvertBtn });\n  };\n\n  const addLinkedTd = linkedTd => {\n    dispatch({ type: ADD_LINKED_TD, linkedTd: linkedTd });\n  };\n\n  const updateLinkedTd = linkedTd => {\n    dispatch({ type: UPDATE_LINKED_TD, linkedTd: linkedTd });\n  };\n\n  const updateValidationMessage= validationMessage  => {\n      dispatch({type: UPDATE_VALIDATION_MESSAGE, validationMessage: validationMessage})\n  }\n\n  return (\n    <EdiTDorContext.Provider\n      value={{\n        offlineTD: editdorState.offlineTD,\n        theme: editdorState.theme,\n        isModified: editdorState.isModified,\n        isThingModel: editdorState.isThingModel,\n        name: editdorState.name,\n        fileHandle: editdorState.fileHandle,\n        showConvertBtn: editdorState.showConvertBtn,\n        linkedTd: editdorState.linkedTd,\n        validationMessage: editdorState.validationMessage,\n        updateOfflineTD,\n        updateIsModified,\n        updateIsThingModel,\n        setFileHandle,\n        removeForm,\n        removeLink,\n        addForm,\n        addActionForm,\n        addEventForm,\n        removeOneOfAKindReducer,\n        updateShowConvertBtn,\n        addLinkedTd,\n        updateLinkedTd,\n        updateValidationMessage\n\n      }}\n    >\n      {props.children}\n    </EdiTDorContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport TDViewer from '../TDViewer/TDViewer'\nimport JSONEditorComponent from \"../Editor/Editor\";\nimport AppHeader from './AppHeader/AppHeader';\nimport AppFooter from './AppFooter';\nimport GlobalState from '../../context/GlobalState';\n\nimport '../../assets/main.css'\n\nconst App = (props) => {\n    useEffect(() => { dragElement(document.getElementById(\"separator\"), \"H\"); }, [props])\n    return (\n        <GlobalState>\n            <main className=\"h-full w-screen flex flex-col\">\n                <AppHeader></AppHeader>\n                <div className=\"flex-grow splitter flex flex-row w-full height-adjust\">\n                    <div className=\"w-7/12\" id=\"second\"><TDViewer /></div>\n                    <div id=\"separator\"></div>\n                    <div className=\"w-5/12\" id=\"first\"><JSONEditorComponent /></div>\n                </div>\n                <AppFooter></AppFooter>\n                <div id=\"modal-root\"></div>\n            </main>\n        </GlobalState>\n    );\n}\n\n\n/**\n * \n * @param {*} element \n * @param {*} direction \n * \n * Adjust size of the two Panels \"first\" and \"second\"\n */\nconst dragElement = (element, direction) => {\n    let md;\n    const first = document.getElementById(\"first\");\n    const second = document.getElementById(\"second\");\n\n    const onMouseMove = (e) => {\n        var delta = {\n            x: e.clientX - md.e.clientX,\n            y: e.clientY - md.e.clientY\n        };\n\n        if (direction === \"H\") {\n            delta.x = Math.min(Math.max(delta.x, -md.firstWidth),\n                md.secondWidth);\n\n            element.style.left = md.offsetLeft + delta.x + \"px\";\n            first.style.width = (md.firstWidth + delta.x) + \"px\";\n            second.style.width = (md.secondWidth - delta.x) + \"px\";\n        }\n    }\n\n    const onMouseDown = (e) => {\n        md = {\n            e,\n            offsetLeft: element.offsetLeft,\n            offsetTop: element.offsetTop,\n            firstWidth: first.offsetWidth,\n            secondWidth: second.offsetWidth\n        };\n        document.onmousemove = onMouseMove;\n        document.onmouseup = () => {\n            document.onmousemove = document.onmouseup = null;\n        }\n    }\n\n    element.onmousedown = onMouseDown;\n}\n\nexport default App;","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/********************************************************************************\n * Copyright (c) 2018 - 2020 Contributors to the Eclipse Foundation\n * \n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n * \n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the W3C Software Notice and\n * \n * SPDX-License-Identifier: EPL-2.0 OR W3C-20150513\n ********************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport './assets/main.css'\nimport './index.css'\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('string-direction').patch();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// No PWA at the moment.\nserviceWorker.register();\n"],"sourceRoot":""}